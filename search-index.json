[{"title":"春秋云镜-Flarum","date":"2025-05-05T02:52:29.000Z","url":"/2025/05/05/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Flarum/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG01fscan 先扫描一下 页面上给了一个邮箱 administrator@xiaorang.lab 很明显就是管理员的邮箱，然后爆破密码得到 1chris 后台管理显示框架是 Flarum 1.6.0 参考文章 首先下载一个 phpggc 然后生成一个反弹 shell 的语句 然后在后台外观-&gt; 自定义样式里面添加 访问 URL/assets/forum.css, 可以看到我们的反弹 shell 的语句已经被写进去了 然后在自定义样式里面修改成 然后保存，shell 就被弹出来了，然后开始提权 可以看到 openssl 具有 sgid 的权限，写文件提权！ flag 在/root 下 FLAG03上传 fscan 再做一个代理，fscan 扫！ 拿到数据库的用户名和密码了，进行一波信息搜集 将邮箱取出来 然后打 AS-REP Rroasting 可以跑出来两条，然后用 john 爆破 可以爆破出来 wangyun 的密码，然后用 blood-hound 进行域内信息搜集 可以发现 zhangxin 属于 Acount Operators，因此对域内非域控的所有机器都具有 GenericAll 权限，而 FILESERVER 机器有 DCSync，思路就很明显了 首先远程桌面连接 172.22.60.15 发现桌面上有一个 xshell，利用 工具 将 xshell 的凭证导出 抓到了 zhangxin 的密码，然后打 RBCD 然后修改/etc/hosts 然后申请票据就行了 但是后面我又发现一种更简单的方法 后面也是 flag 在 C:\\users\\administrator\\flag 下 FLAG02&amp;FLAG04抓一下 FILESERVER 的哈希 然后进行 DcSync 攻击导出域控哈希 拿到域控之后就横向就可以了 "},{"title":"春秋云镜-ThermalPower","date":"2025-05-02T03:09:18.000Z","url":"/2025/05/02/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-ThermalPower/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG01 可以扫有8080端口有一个poc-yaml-spring-actuator-heapdump-file，先将heapdump文件下载下来 然后用工具进行分析 有用的是这里，存在一个shirokey，然后shiro一把梭，注入内存马 flag01在根目录 FLAG02写一个公钥进去，ssh连接，上传一个fscan再做一个代理 fscan扫一下内网 先看ftp，可以匿名登陆但是中文会乱码，和80端口的文件是一样的，随便在一个服务下载就行 内部通知.docx告诉我们了密码规则 还存在一个通讯录，根据通讯录里的信息和这个密码规则可以构造，有好多账号都可以登陆，任意一个就可以 rdp连接，scad.txt还给了一个管理员的密码 但是这不是这台主机的管理员密码，题目提示 查看当前用户组 我们在Backup Operators组内，但是没给用户分配SeBackup特权，可以用注册表 SAM 转储提权，直接转储 sam 和 system 然后用secretsdump导出hash FLAG03之前给的排上用场了，用fscan扫一下 远程桌面连接，登陆后会自动启动软件，然后开启锅炉得到flag FLAG04桌面上有一个解密你的文件.txt 桌面上还给了两个.lock文件，附件还给了两个key，c盘还有一个Lockyou.exe 用dnSpy反编译可以看到加密逻辑根据 locky 勒索软件家族加解密逻辑和 .NET 逆向代码，解密思路如下： 首先用 privateKey 对加密的 encryptedAesKey进行 RSA 解密，得到 AES_KEY。 再用 AES_KEY 对加密的文件 ScadaDB.sql.locky 解密，得到 ScadaDB.sql 通过工具，将 privateKey 从 XML 格式转换为 PEM 格式，得到 PRIVATE_KEY： 通过工具，将 privateKey 从 XML 格式转换为 PEM 格式，得到 PRIVATE_KEY： 可以解出key是： 使用 AES KEY 对文件 ScadaDB.sql.locky 进行解密。RSA + AES 解密的完整脚本如下： 运行解密出ScadaDB.sql,flag4在数据库里"},{"title":"群友机-Bamuwe","date":"2025-04-30T07:44:22.000Z","url":"/2025/04/30/%E7%BE%A4%E5%8F%8B%E9%9D%B6%E6%9C%BA-Bamuwe/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["660930334","/categories/660930334/"]],"content":"信息搜集 80端口前端有一段注释 很明显的xxe提示 可以读取到文件，知道有一个welcome用户，可以直接读取user.txt 提权读取/home/welcome/.viminfo，他告诉你要去读取pass.txt,pass.txt里告诉了welcome的密码，ssh登录 mosquitto是一个消息代理软件mosquitto_sub是用来订阅的，对应的是 mosquitto_pub 参考连接 在kali上修改mosquitto的配置文件 添加 然后启动服务 如果端口没有监听0.0.0.0的话可以用socat将1883转发出来 然后再welcome的家目录创建一个软连接，指向/etc/passwd 将靶机里的/etc/passwd文件复制一份，添加一条用户信息 然后/etc/passwd就被覆盖了 密码是123123 提权成功"},{"title":"群友机-Kakeru","date":"2025-04-29T06:00:01.000Z","url":"/2025/04/29/%E7%BE%A4%E5%8F%8B%E9%9D%B6%E6%9C%BA-Kakeru/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["660930334","/categories/660930334/"]],"content":"信息搜集 192.168.31.170就是靶机ip地址 80端口 有用的信息就是这些，从这可以得知存在welcome用户，然后告诉我们密码就在这里，还有一个正则表达式，可以联想到，密码应该就是用正则去匹配上面的数据包 密码就是www-form-url ssh登录 提权 welcome可以在Dashazi上以kakeru用户执行/usr/bin/less 可以看到可以执行/opt/test.sh，但是内容没办法看，同时家目录也有一个test.sh,这两个文件可能存在关系 运行发现只能输入一个字符，输入空格可以发现 哎！报错了，指向家目录的test.sh，而家目录的test.sh是没有可执行权限的，所以就能知道程序以你输入的那个字符来运行/home/kakeru/test.sh，输入一个. 会发现/home/kakeru/test.sh被执行了，将家目录的test.sh文件改个名再重新写一个test.sh 提权成功"},{"title":"HackmyVM-Dejavu","date":"2025-04-29T02:45:14.000Z","url":"/2025/04/29/HackmyVM-Dejavu/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 192.168.31.169就是靶机地址 80端口 只能扫到一个info.php，是一个phpinfo页面，前端注释里有一个 访问/S3cR3t有一个upload.php,php后缀禁止上传，改后缀为phtml,有disable_function，可以用蚁剑的插件绕过disable_functions绕过 反弹一个shell出来 提权 可以无密码以robert执行tcpdump 但是提权的时候提示权限不够，只能另寻他路 上传一个pspy64，监控进程 发现robert会运行auth.sh，还和ftp有关系，用tcpdump抓一下包看看 可以发现robert的密码是9737bo0hFx4,su切换用户 exiftool可以写入任意文件，写个公钥即可 已经存在了，那就把这个公钥移动过来，在写公钥进去 然后ssh登录即可"},{"title":"春秋云镜-Delivery","date":"2025-04-27T07:42:03.000Z","url":"/2025/04/27/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delivery/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG01先用 fscan 进行一波信息搜集 ftp 可以匿名登陆，登录之后可以下载一个 pom.xml 存在有危险的依赖 存在 CVE-2021-29505 用 ysoserial 进行反弹 shell 在 8080 端口抓包替换成 payload 发包之后 shell 就弹出来了，然后写个公钥进去，flag1 在/root/flag 下 FLAG02上传一个 fscan 扫描内网，再搭建一个代理 题目提示了要打 NFS，先扫一下 2049 的端口 172.22.13.57 开了 2049 的端口 然后 joyce 的家目录就被成功挂载了，写一个公钥进去 然后 ssh 连接 尝试提权，查找 suid 权限 ftp 提权可以读文件，也可以通过 nfs 上传一个恶意文件拿到 shell flag02 在根目录下 FLAG03 172.22.13.28 是一个 OA 系统，用 fscan 扫一下全端口，可以扫到 mysql 有弱口令 navicat 连接 尝试写马 然后蚁剑连接，flag03 在 C:/Users/Administrator/flag/下 FLAG04创建一个用户，添加进用户组里 然后远程桌面连接，上传一个 mimikatz 抓取哈希 拿到了一个域内用户 chenglei，查看 chenglei 的域内权限 属于 ACL Admin 组，这个组有 WriteDACL 的权限，给 chenglei 去添加 DCSync 权限 然后用 chenglei 远程登录 mimikatz 抓取域内哈希 然后横向就行了 flag4 在 C:\\Users\\Administrator\\flag 下"},{"title":"HackmyVM-Driftingblues9","date":"2025-04-24T06:33:53.000Z","url":"/2025/04/24/HackmyVM-Driftingblues9/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 192.168.31.159就是靶机 80端口扫描目录 从/README.txt 得知是ApPHP的框架，mails里有账号和密码，其他的都没什么用 php/webapps/33070.py跑这个脚本就行，然后弹出来一个shell 提权在/var/www/html/include/base.inc.php里有用户名和密码 su clapton 提权roothome目录下有input一个程序和一个note input的伪c代码 二进制我属实不会，看大佬wp了 payload： "},{"title":"HackmyVM-WMessage","date":"2025-04-24T05:24:21.000Z","url":"/2025/04/24/HackmyVM-WMessage/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 192.168.31.158就是靶机ip地址 80端口先注册一个账号，是一个留言板，输入!mpstat可以查看cup的状态，但是输入其他命令不行，猜测只能运行mpstat命令用分号拼接一下命令发现可以执行成功 反弹一个shell 提权sudo -l pidstat有一个-e参数可以监控执行的命令 执行bash会自动退出，那就写一个公钥进去，home目录下没有.ssh先创建一个.ssh文件夹，然后cp进去一个authorized_keys ssh登录 提权root 可以执行md5sum，在/var/www/文件夹下还有一个ROOTPASS,可以将root的密码进行md5加密 ROOTPASS的字节是12，说明ROOT的密码是11位的因为最后还有一个换行符，可以先将rockyou.txt里11位的密码先取出来 然后对每行进行md5加密 再用paste将rockyou.txt和这个合并 最后grep一下 可以得到root的密码是Message5687"},{"title":"HackmyVM-Vinylizer","date":"2025-04-23T09:59:33.000Z","url":"/2025/04/23/HackmyVM-Vinylizer/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVMxxs","/categories/HackMyVMxxs/"]],"content":"信息搜集arp-scan -l 192.168.31.156 就是靶机地址 80端口扫描目录只有一个登录的login.php不是弱口令，尝试sql注入 存在时间盲注，可以注入出来用户和密码 shopadmin的密码解密 然后ssh登录 提权sudo -l查看 这个python文件没什么可以利用的，查找是否存在库劫持 添加 然后sudo运行"},{"title":"群友机-Byxs20","date":"2025-04-20T10:00:19.000Z","url":"/2025/04/20/%E7%BE%A4%E5%8F%8B%E9%9D%B6%E6%9C%BA-Byxs20/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["660930334","/categories/660930334/"]],"content":"信息搜集arp-scan -l 扫描靶机ip 然后nmap扫描一下开放端口 80端口gobuster扫描一下目录 /template.php有一个虚假的文件包含（后面拿到shell之后查看文件可以知道）,ping.php可以执行ping命令，fuzz一下参数 找到一个debug参数（其实一开始是想fuzz出了拼接ip的参数的，误打误撞），ip的参数就是ip 可以拼接执行命令 然后用busybox反弹shell 拿到shell之后，查看sudo -l 可以执行reboot 上传一个pspy监控一下进程 可以看到root用户将/var/www/html/conf/apache2.conf.bak 复制到了/etc/apache2/apache2.conf apache2.conf.bak文件是我们可控的，后面经过群主提醒我才幡然醒悟，可以做一个软连接啊，/etc/apache2/apache2.conf我们是可读的 另一个思路就是修改apache2.conf.bak，将web服务以welcome的权限运行，将apacke2.conf.bak里面的User和Group修改一下 然后上传再重启靶机，然后再次反弹shell会发现用户变成welcome了（这里不能修改成root，是因为apache2默认不允许root启动，如果要root启动，需要添加“-DBIG_SECURITY_HOLE”到CFLAGS环境变量中重新编译） 查看sudo -l 就是王炸方案，将test目录换一个名再新创建一个test/test "},{"title":"群友机-Anjy","date":"2025-04-19T08:23:50.000Z","url":"/2025/04/19/%E7%BE%A4%E5%8F%8B%E9%9D%B6%E6%9C%BA-Anjy/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["660930334","/categories/660930334/"]],"content":"信息搜集arp-scan -l扫描靶机地址 192.168.31.147就是靶机ip，然后nmap扫描端口 80端口80端口是一个web页面存在ssrf漏洞，POST传参url=，文件内容会进行base64加密 可以读取到welcome这个用户，home目录下不存在id_rsa,读取/etc/ssh/sshd_config 然后挨个试试id_rsa,id_ecdsa,id_ed25519,可以发现存在id_ed25519 拿到私钥了就可以ssh登录了 提权 sudo -l可以发现elinks可以以root用户执行，可以直接读取root.txt，也可以任意文件读写，最简单的是再elinks终端按下esc-&gt;file-&gt;OS SHELL 就可以获取到root的shell了"},{"title":"HackmyVM-find","date":"2025-04-19T03:22:30.000Z","url":"/2025/04/19/HackmyVM-find/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l 192.168.31.145是靶机ip，扫描一下端口 扫描目录 user.txtrobots.txt是让你找到user,把cat.jpg下载下来 最后一串字符串是Malbolge语言，跑一下得到missyred，然后hydra爆破密码 ssh登录,sudo -l perl提权到kings root.txt /opt/boom/boom.sh是不存在的，我们可以自己创建，随便执行sh命令 sudo /opt/boom/boom.sh 提权到root.txt"},{"title":"HackmyVM-hotel","date":"2025-04-19T02:56:13.000Z","url":"/2025/04/19/HackmyVM-hotel/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l 192.168.31.144就是靶机ip，扫描端口 开启了22和80端口 user.txt80端口是一个hoteldruid，存在nday 反弹一个shell出来，/var/www/html目录下有一个ttylog很可疑，用ttyplay可以重现当时录制的tty 得到person的密码为 ssh登录，拿到user.txt root.txtsudo -l sudo /usr/bin/wkhtmltopdf  1.pdf可以拿到root.txt"},{"title":"春秋云镜-Initial","date":"2025-04-18T12:00:10.000Z","url":"/2025/04/18/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Initial/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG1首先进行信息搜集 80端口存在thinkphp的漏洞，直接工具一把梭了，拿到shell后提一下权,sudo可以无密码执行mysql，mysql提权 拿到了flag的第一部分 FLAG2&amp;&amp;FLAG3写一个公钥进去，然后ssh登录，上传fscan再做一个代理 172.22.1.21 有永恒之蓝，上msf梭哈 收集一些域内哈希 有域控的哈希了直接打域控，然后就可以为所欲为了 看别人的wp，好像是要先打172.22.1.18，是一个OA系统可以打nday一把梭，我就不看了"},{"title":"春秋云镜-Delegation","date":"2025-04-18T02:26:30.000Z","url":"/2025/04/18/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Delegation/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG1首先对靶机进行信息搜集 80端口是cmseasy,url后面拼接/admin版本号是v7752,在网上可以查到漏洞  都需要登录后台，弱口令admin:123456登录成功了 发包然后去访问1.php可以发现写入成功了，写个一句话木马，然后蚁剑连接 flag在/home/flag/下，但是只有root能查看，反弹一个shell准备提权 可以看到diff具有suid权限，可以读取flag01.txt FLAG2还给了一个hint 上传一个fscan先扫，然后做一个代理隧道 上面的flag1给了个提示在WIN19那台机器上存在一个Adrian用户，密码在rockyou里 还是得眼尖一点，密码过期他不会告诉你，rdp登录修改密码 桌面上有一个PrivescCheck文件夹，PrivescCheck是一个提权的工具，他跑完了留下一个html文件，直接访问就行 给了两个high，第一个WSUS 更多的是被利用来横向移动,第二个注册表，用户对gpupdate具有写、启动、停止的的权限 用msf生成一个正向的木马 将马上传上去然后修改一下注册表手动启动服务 但是这个shell很快就会断开，所以要迁移到另一个进程中 不知道为什么我的msf shell启动不起来，导出hash hashdump 用Administrator登录 FLAG3&amp;FLAG4添加一个新用户 查看域内委派关系 WIN19$有非约束委派，上传Rubeus进行监听 然后使用dfscoerce让DS向WIN19$认证 导入 TGT 然后 DCSync 可以拿到域控的哈希 然后登录即可 "},{"title":"HackmyVM-system","date":"2025-04-17T07:21:48.000Z","url":"/2025/04/17/Hackmyvm-system/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l 192.168.31.141就是靶机ip 80端口有一个登录的页面，通过查看请求头可以发现他是以xml的格式传输的 试一试xxe注入 读取david用户的私钥尝试登录，但是会登录失败，通过fuzz可以知道/home/david还有一个.viminfo 然后读取/usr/local/etc/mypass.txt文件 david的密码为h4ck3rd4v!d 提权上传一个pspy64查看，发现每隔一段时间会运行一次suid.py文件 这个脚本永远不会执行chmod，查看是否可以劫持 向os.py尾部添加 然后监听一个端口静静等shell弹回来 "},{"title":"HackmyVM-Blackhat","date":"2025-04-17T04:14:42.000Z","url":"/2025/04/17/Hackmyvm-Blackhat/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l扫描 192.168.31.140是靶机地址 然后扫描端口 只开了一个80端口，扫描一下目录可以扫描到一个phpinfo.php mod_backdoor 存在漏洞 反弹一个shell出来，上传 linpeas.sh ，运行看结果 可以看到sudoers文件darkdante有写的权限，darkdante直接su就登录了哈哈哈哈哈 写入sudoers文件 然后sudo su，提权成功"},{"title":"春秋云镜-Certify","date":"2025-04-16T15:55:55.000Z","url":"/2025/04/16/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Certify/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG1先用fscan扫一扫 39.99.135.211:8983是一个solr面板，存在log4j漏洞 上vps，可以利用java-chains反弹一个shell,反弹的shell如果不舒服可以写一个公钥进去 提权sudo grc --pty /bin/sh 提权到root后，写一个公钥进去，flag01在/root/flag下，然后上传一个fscan，再做一个代理 FLAG2查看一下内网的ip端，开扫！ 上来就扫到域控的漏洞了，但是现在还没有什么可用的信息没办法直接打。 172.22.9.47:445 smb服务存在一个弱口令登陆一下看看 找到flag02了 FLAG3&amp;FLAG4flag02.txt里还给了一个提示 把所有文件都下载下来看一看, personnel.db里面有用户和3个不知道用户名的密码，先将数据处理一下吧，将xr_users和xr_members的内容分别保存到pass和user里 用hydra爆破，可以爆破出来两个用户 然后进行Kerberoast攻击 可以拿到两个用户的hash，用hashcat爆破 然后用chenchen@xiaorang.lab:@Passw0rd@进行远程桌面登录,用bloodhound进行信息搜集（其实也不用，因为之前fscan已经扫到洞了） 上传Certify.exe查找易受攻击的证书 这个可以打 得到了administrator的哈希了，拿下域控了，直接登录这台主机和域控拿flag即可 "},{"title":"春秋云镜-Brute4Road","date":"2025-04-15T06:35:35.000Z","url":"/2025/04/15/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Brute4Road/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG1&amp;FLAG2先用fscan扫一下 打redis主从复制rce，flag在/home/redis/flag下，但是没有权限读，base64具有suid权限，可以用base64读取 ftp服务只有一个pub文件夹，没什么用，上传fscan扫描一下内网 扫到一堆哦一个一个看，172.22.2.18的80端口是一个wps，用wpscan扫一下 存在wpcargo插件，有一个rce的漏洞 蚁剑连接，可以拿到数据库的密码 flag2在数据库里 FLAG3在另一张表里有很多密码 是172.22.2.16 msssql数据库的密码本，然后动手爆破，mssql的默认用户名是sa，因为导出来的有空格，所以把前面的空格处理掉 然后用MDUT连接 上传sweetpotato.exe然后提权 flag03在C:\\Users\\Administrator\\flag\\下 FLAG4netstat -ano发现开启了3389 添加一个用户 然后远程桌面登录 可以发现有域环境，先上传mimikatz提取hash，上传bloodhound可以发现有约束性委派 获取到域用户的哈希为cea3e66a2715c71423e7d3f0ff6cd352 通过Rubeus申请机器账户MSSQLSERVER的TGT，执行后，将得到 Base64 加密后的 TGT 票据 然后使用 S4U2Self 扩展代表域管理员 Administrator 请求针对域控 LDAP 服务的票据，并将得到的票据传递到内存中 LDAP服务具有DCSync权限，可以导出域内用户哈希 得到域管的哈希为1a19251fbd935969832616366ae3fe62 然后就可以用WMI服务登录域控，flag在C:\\Users\\Administrator\\flag下"},{"title":"春秋云镜-Hospital","date":"2025-04-10T08:46:51.000Z","url":"/2025/04/10/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Hospital/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"flag01首先扫描一下端口，有一个22端口和8080端口，然后用fscan对这两个端口进行扫描，可以扫到一个heapdump泄露 访问/actuator/heapdump，奖heapdump下载下了，然后用JDumpSpider分析 有一个shirokey 用shiro工具注入内存马,冰蝎连接即可 vim.basic存在suid权限 系统存在python3环境， 参考 提权，flag01在/root/flag下 flag02然后搭建一个代理隧道，上传一个fscan开始扫描 扫到了一个nacos，那就从这里入手，弱口令nacos/nacos登录,这个框架还存在yaml反序列化漏洞 在172.30.12.5上面放上恶意的jar文件，然后开启一个web服务，再用利用工具去执行 用户添加成功了，挂上代理，远程桌面连接，flag02在C:\\Users\\Administrator\\flag下 flag03172.30.12.236主机开放了8009端口，登录口传入的数据为 JSON 格式。探测 fastjson 版本 payload：&#123;&quot;@type&quot;: &quot;java.lang.AutoCloseable&quot; ) 用bp的插件注入内存马,哥斯拉连接，flag03在/root/flag/下 flag04这个靶机还有第二张网卡 上传一个fscan，然后扫一下，地址为172.30.54.12，需要二层内网代理，这台机器上有grafana+postgres两个服务，grafana存在弱口令admin/admin登录,在web3的机器上上传一个exp,可以跑到postgres的密码 psql -h 172.30.54.12 -p 5432 -U postgres连接,查询root的密码select usename, passwd from pg_shadow; 爆破出来是P@ssw0rd123,在web03的机器上监听一个端口，然后用perl反弹一个shell 然后psql提权，flag04在/root/flag/下"},{"title":"春秋云镜-Time","date":"2025-04-08T16:08:14.000Z","url":"/2025/04/09/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-Time/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":"FLAG1首先用fscan进行信息搜集 fscan扫描靶机，有1337、7473、7474、7687端口，7474端口是neo4j，默认密码neo4j:neo4j(可以登录，但是没什么用)，还有一个CVE-2021-34371，可以直接一把梭哈，反弹一个shell flag01在neo4j的目录下 FLAG2然后上传一个fscan扫描内网（会出来没扫描出来的情况，需要多扫描几次） 172.22.6.38是一个web服务 ，用万能密码可以登录成功存在sql注入，但是不会跳转，用sqlmap跑一下 flag02在数据库里，将oa_db.oa_users的email提出，处理一下将用户名提取出来 然后对域控进行Kerberos AS-REP Roasting 攻击 可以得到了两个用户的密码 用hashcat爆破一下└─# hashcat -m 18200 passhash /usr/share/wordlists/rockyou.txt wenshao:hellokitty、zhangxin:strawberry 用bloodhound进行信息搜集 借一张大佬的图，可以看到WIN2019.XIAORANG.LAB到&#x59;&#85;&#x58;&#85;&#x41;&#78;&#x40;&#88;&#x49;&#65;&#79;&#x52;&#65;&#78;&#x47;&#46;&#x4c;&#x41;&#66;是有HasSession的， HasSession：用户与计算机时进行会话时，凭据会保留在内存中，说明yuxuan这个用户登录过WIN2019 可以直接查看注册表 yuxuan用户滥用了SID历史功能(SIDHistory是一个为支持域迁移方案而设置的属性，当一个对象从一个域迁移到另一个域时，会在新域创建一个新的SID作为该对象的objectSid，在之前域中的SID会添加到该对象的sIDHistory属性中，此时该对象将保留在原来域的SID对应的访问权限 先登录yuxuan用户，然后用mimikatz抓取administrator的哈希 有了administrator的密码了，就相当于控制域控了，登录一下其他的机器type flag就行了 FLAG3、4flag03在172.22.6.25的C:\\Users\\Administrator\\flag\\下 flag04在172.22.6.12的C:\\Users\\Administrator\\flag\\下 "},{"title":"春秋云镜-2022网鼎杯半决赛复盘","date":"2025-04-02T06:04:44.000Z","url":"/2025/04/02/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C-2022%E7%BD%91%E9%BC%8E%E6%9D%AF%E5%8D%8A%E5%86%B3%E8%B5%9B%E5%A4%8D%E7%9B%98/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["春秋云镜","/categories/%E6%98%A5%E7%A7%8B%E4%BA%91%E9%95%9C/"]],"content":" 只开了一个 22 端口和 80 端口 访问 80 端口，很明显的 wordpress 框架 用 wpscan 扫描可以扫描到一个 admin 用户，爆破密码可以爆破出来 admin 的密码是 123456 进入后台之后修改主题文件 getshell 访问/wp-content/themes/twentytwentyone/404.php，蚁剑连接 flag01 在根目录 查看网络信息，然后上传 fscan 进行内网扫描 可以发现 172.22.15.24 存在 MS17-010 漏洞，直接上 msf，但是用 msf 梭哈之前需要先搭建一层代理，可以用 Venom 搭建很方便 flag02 在 C:\\users\\administrator\\flag 里，添加一个新用户然后远程桌面连接 可以看到数据库的密码，这个站点还存在一个 phpmyadmin，尝试登录 root:root@#123，将 zdoo 库里面的 user 表导出来 将获得的账号放进 user.txt 里 使用 AS-REP Roasting 攻击，尝试获取用户的密码 返回了两个票据, 用 hashcat 爆破 用 bloodhound 进行域内信息搜集 域用户 LIXIUYING 对计算机 XR-0687$ 具有 Generic Write 权限 可以通过修改目标的 msDS-AllowedToActOnBehalfOfOtherIdentity 属性（配置 RBCD）获取目标 SYSTEM 权限。 添加一个机器用户 然后配置 RBCD： 请求并冒充域管权限的服务票据： flag03 在 C:\\users\\Administrator\\flag\\ 主机 172.22.15.18 (XR-CA) 存在 CVE-2022-26923 漏洞 打 CVE-2022–26923 查找证书服务器，并尝试查找可以利用的证书模板： 使用 certipy 创建一个机器账户，并将该机器账户 dNSHostName 属性指向域控： 使用该机器账户向 AD CS 服务器请求域控机器的证书模板： 用申请到的证书，申请域控的 TGT： 使用 certipy 请求 TGT 失败，出现 KDC_ERR_PADATA_TYPE_NOSUPP(KDC has no support for padata type) 错误。 bloodyAD 使用证书进行认证，配置 RBCD 进行攻击： 请求并冒充域管权限的服务票据： flag 在 C:\\Users\\Administrator\\flag 下 参考 "},{"title":"Hackmyvm-Newbee","date":"2025-03-26T12:10:10.000Z","url":"/2025/03/26/Hackmyvm-Newbee/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l 192.168.31.122就是ip地址 nmap 192.168.31.122 -p-扫描端口 80端口查看页面源码，在最下面可以发现有一个 对get参数进行fuzz 能fuzz出来参数名为hack，但是页面最下方还是会报错 尝试包含其他文件 扫描目录可以扫描到一个secret.php secret.php可以执行命令，但是必须要先进行身份验证，用lfi包含secret.php试试 可以包含出来 伪造cookie 然后反弹shell 提权 可以在/var/www/html目录下创建一个random.py文件进行劫持，python文件会优先加载当前目录下的库 提到debian用户了，home目录下有一个note.txt和一个config.php 要拿到数据库的密码 查看端口 可以发现本地有5000端口，用socat将5000端口转发出去 是一个留言板，登录处除了admin，其他的都可以随意登录，cookie里有一个jwt，可以猜测是jwt伪造 可以用hashcat爆破 noob就是密钥，用户名伪造成admin，可以看到留言板的内容 user库的user表里有debian的密码 pbdf2爆破参考 用户home目录下还有一个.secret目录，里面有一个密码的压缩包 密码是1qaz2wsx的md5 图片是马赛克，网上有一个项目是用来恢复马赛克的  其实也不用跑，图片的原图就是这个项目的示例图片 密码是hellofromtheotherside "},{"title":"HackmyVM-Chromee","date":"2025-03-21T11:11:42.000Z","url":"/2025/03/21/Chromee/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l ip为192.168.31.100,然后用nmap扫描端口 80端口gobuster扫描目录 有一个post.php和secret.php,secret.php不会解析成php会直接下载下来 8080端口先用gobuster扫描一下目录 有一个silence，访问发现Forbidden了 用bp的BypassPro插件发现换一种请求会变成301，感觉有问题，后面添加一个index.html发现绕过了 有一个邮箱，将这个域名添加进hosts里，再去访问发现secret.php解析了，GET传入aaa=1 这里有两个人名，adriana和Lily，用cupp各生成一个字典，然后将两个字典合并爆破ftp(23333端口) 爆破出了账号密码 这有…文件，一开始以为是一个目录，cd不进去，也不看报错就没管了(唉，细节决定成败)导致卡了好长时间，但是卡的时候也没有荒废，在/srv目录下有一个zeus.conf，后面提权要用到 还可以知道用户名 …文件是一个私钥，john可以爆破出来密码 提权follower下有一个cat.git和note.txt 这个47提示的很明显是rot47 cat.gif用convert可以分离出来12张图片，但是没有用 不是空间轴可以试试时间轴 将后面的6个6去掉扔进cyberchef中解密然后rot47解密 得到了p3p573r，因为前面拿到的zeus.conf能够知道follower需要密码才能以softly执行wfuzz 先用find找到wfuzz的路径 在他的wfuzz的目录下找可以写的文件能找到file.py,cat一下 不用想了，肯定是作者降低难度了后门都留好了 上传pspy64，能发现每隔一段时间root用户都会执行secript.sh 结合题目名Chromee和前面得到的zeus.conf，能猜到肯定和浏览器有关系，运行linpeas.sh能看到/media下有一个debug.kdbx 是一个pdf文件 去网上查这个东西，谷歌浏览器自带这个工具chrome://inspect/，还有这个9222的默认端口（后面要用到） 先写一个authorized_keys 在网上查到开启远程debug的命令 因为靶机没有桌面，所以一定要带上–headless，不然会报错，启动好后再用socat端口转发 用谷歌浏览器连接，打开第一个连接 等一会就会发现向127.0.0.1/post.php发送一个key，不用base64解码，这个就是root的密码。 chromium的远程端口必须要是9222默认端口否则他监听不到就很难受"},{"title":"应急响应靶机训练-Web3","date":"2025-02-18T12:02:58.000Z","url":"/2025/02/18/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web3/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["应急响应","/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"]],"content":"隐藏用户名称 这还没开始第一道题就已经结束了 攻击者的两个IP地址 远程登录找到一个ip 在hacker的目录下能找到一个system.bat的文件，可以看到向web里面写了一个webshell，可以去查看apache的日志 还有第一个flag 第二个IP 黑客遗留下的flag【3个】 计划任务里有一个flag 可以看到web是一个Z-blog，去官网下载一个修改后台密码的工具  可以看到还有一个hacker用户 第三个flag"},{"title":"应急响应靶机训练-Web2","date":"2025-02-08T07:41:44.000Z","url":"/2025/02/08/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web2/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["应急响应","/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"]],"content":"1.攻击者的IP地址（两个）？ 第一个ip在apache的日志里，另一个是登录日志可以直接用工具windows1check或者事件查看器里查找 2.攻击者的webshell文件名？ 查看apache的日志发现system.php是webshell的文件名 3.攻击者的webshell密码？密码是hcak6618 4.攻击者的伪QQ号？ 众所周知，qq登陆过后会默认会在文档里创建一个Tencent File里面会记录每个登陆过的qq号，在FileRecv里是通过qq下载的文件 5.攻击者的伪服务器IP地址？ 黑客通过qq下载了一个frp，在frpc的配置文件里有伪服务器IP和端口 6.攻击者的服务器端口？65536 7.攻击者是如何入侵的（选择题）？ 通过分析ftp的日志文件可以发现，攻击者通过爆破ftp admin的密码登录成功，然后上传system.php文件 看phpstudy的ftp配置可以发现ftp的根目录在www目录，所以上传的system.php可以访问到 8.攻击者的隐藏用户名？ 学到新招，win+r-&gt;cmd-&gt;lusrmgr.msc可以查看本地用户和组，或者C盘USER能找到hack887$"},{"title":"应急响应靶机训练-Web1","date":"2025-02-07T04:10:42.000Z","url":"/2025/02/07/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94%E9%9D%B6%E6%9C%BA%E8%AE%AD%E7%BB%83-Web1/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["应急响应","/categories/%E5%BA%94%E6%80%A5%E5%93%8D%E5%BA%94/"]],"content":" 1.攻击者的shell密码打开phpstudy找到网站的根目录，然后用D盾扫 能找到是一个冰蝎马，密码是rebeyond 2.攻击者的IP地址查看phpstudy的日志文件，有apache和nginx，nginx的日志全是0kb，打开apache的access.log文件搜索shell.php能找到攻击者的ip 3.攻击者的隐藏账户名称可以直接查看C盘的用户有一个hack168$ 或者可以查看登录的日志，如果不用工具的话就在事件查看器里-安全找事件ID为4624的事件 4.攻击者挖矿程序的矿池域名(仅域名)在C:\\Users\\hack168$\\Desktop里有一个Kuang，这是一个python编译的exe文件，先转一下pyc然后反编译就行了 5.有实力的可以尝试着修复漏洞phpstudy将web服务启动，是一个EMGLOG服务，后台的账号密码是admin/123456  打上最新的补丁，并把admin的密码改掉 6.非预期桌面上有一个解体的校验程序，和kuang一样，exe-&gt;pyc然后反编译 "},{"title":"HackmyVM-Helium","date":"2025-01-26T06:26:29.000Z","url":"/2025/01/26/HackmyVM-Helium/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 ip是192.168.31.178，nmap扫描一下端口 80端口 有注释paul可能是ssh的账号，relax.wav下载下了之后没有东西，/bootstrap.min.css给了一个wav文件，用Audacity分析频谱能发现dancingpassyo，ssh登录试试，登录成功 提权 提权成功"},{"title":"HackmyVM-Twisted","date":"2025-01-24T07:12:50.000Z","url":"/2025/01/24/HackmyVM-Twisted/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 ip为192.168.31.22. nmap扫描端口 2222端口为ssh端口 80端口 80端口存在两张jpg图片 下载下了用stegseek查看 给了两个ssh的账号密码 提权先登录markus 给了一个提示，是bonita用户的id_rsa suid提权看看 /home/bonita/beroot这个很可疑但是没有权限，登录mateo看看 下载下了，用Audacity查看，能发现这是莫斯，解码得到 没啥用 getcap可以查看文件的特殊权限，tail可以读取 ssh登陆，将beroot下载ida分析 只要输入等于5880就会执行/bin/bash 提权结束"},{"title":"HackmyVM-VulnY","date":"2025-01-24T05:17:41.000Z","url":"/2025/01/24/HackmyVM-VulnY/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 ip为192.168.31.165 ，nmap扫描端口 开了一个mysql服务和http的服务 80端口扫描目录能扫出来有一个secret的目录 提示了要去看/etc/wordpress/config-168.31.165.php，可以看出来这是一个wordpress的框架，wp-content存在目录遍历 在Index of /secret/wp-content/uploads/2020/10这里能发现一个压缩包wp-file-manager-6.O.zip，这个插件存在任意文件上传 上传一个反弹shell的文件 访问 进行反弹shell 提权cd进/etc/wordpress， 文件名和80端口的不一样，猜测可能是80端口是ip地址输出的文件名 给了mysql的账号密码，这还有wordpress的路径，查看wp-config.php有一行注释很突出 登录mysql，找不到有用的东西 查看/etc/passwd有一个adrian可以登录，注释就是密码 提权成功"},{"title":"HackmyVM-Hommie","date":"2025-01-23T11:28:47.000Z","url":"/2025/01/23/HackmyVM-Hommie/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 ip为192.168.31.116，nmap扫描端口 80端口 80端口目录也扫描不到，只给了一个提示，alexia的id_rsa泄露了，去看21端口 21端口 21端口有匿名登录，存在.web目录，可以往80端口传文件，但是不解析php，只能放弃 tftp扫描udp端口 tftp的服务开着，结合80端口给的提示 可以下载下来alexia的id_rsa ssh登录 提权找有suid的命令 /opt/showMetheKey很可疑啊,运行一下 把alexia的id_rsa输出了，将这个二进制文件拖下来放进ida看看 他是查看环境变量里HOME变量下的.ssh/id_rsa,可以修改HOME变量读取root的id_rsa 再次运行拿到root的id_rsa，登录即可"},{"title":"HackmyVM-Connection","date":"2025-01-22T14:07:19.000Z","url":"/2025/01/22/HackmyVM-Connection/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集 ip为192.168.31.77，nmap扫描端口 445端口开启了445端口 用enum4linux进行枚举 smbclint可以匿名登陆share里有一个html，随便往里传一个文件发现在80端口访问到，传一个反弹shell的php文件 接收到shell了 提权用python获得一个更好的终端 查找suid文件 可以利用gdb进行suid提权  发现进到root组里了，提权结束"},{"title":"HackmyVM-BaseME","date":"2025-01-22T13:12:15.000Z","url":"/2025/01/22/HackmyVM-BaseME/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l ip为192.168.31.220，nmap扫描端口 80端口 给了一串base64和几个字符串 base64解码内容为： 可以知道用户名为lucas，并且所有内容都要进行base64。 将字典进行base64编码，然后扫描目录 这两个文件分别是id_rsa和robots.txt robots.txt里什么也没有 80端口给了几个字符串就是字典，base64编码后爆破id_rsa的密码 lucas用户的密码就是aWxvdmV5b3UK 提权ssh登录拿到user.txt sudo -l可以无密码运行base64，直接读取/root/root.txt 想提权到root的话需要读取id_rsa 总结在处理字典的时候还可以有更高效的方法，其他的就没啥了"},{"title":"HackmyVM-Pwned","date":"2025-01-22T06:22:18.000Z","url":"/2025/01/22/HackmyVM-Pwned/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集arp-scan -l扫描ip ip为192.168.31.51，然后nmap扫描开放端口 开放了21,22,80端口 80端口 /nothing: /hidden_text: 利用给的目录扫描 前端给了源码 这是ftp的账号然后登录ftp 21端口 有一个share文件夹，文件夹有id_rsa和note.txt get下载下来 文件内容 给了ssh的私钥和用户名,给id_rsa文件600的权限然后登录 提权 可以以selena用户，无密码运行/home/messenger.sh messenger.sh的内容： 直接sudo运行可以提权到selena，然后用python获取伪终端 selena的主目录下有一个user2.txt 通过id能看到用户在docker组里 docker提权 提权成功 总结默认情况下，Docker 软件包是会默认添加一个 docker 用户组的。Docker 守护进程会允许 root 用户和 docker组用户访问 Docker，给用户提供 Docker 权限；用户在docker组里就可以免sudo运行docker，而容器内默认是root用户，用-v选项将用户外的目录映射到容器内既可以以root用户去修改文件"},{"title":"HackmyVM-Gift","date":"2025-01-22T05:49:56.000Z","url":"/2025/01/22/HackmyVM-Gift/","tags":[["靶机","/tags/%E9%9D%B6%E6%9C%BA/"]],"categories":[["HackMyVM","/categories/HackMyVM/"]],"content":"信息搜集用arp-scan扫描 ip地址为192.168.31.200，然后nmap扫描开放的端口 只开启了22和80端口 目录扫描也只有一个index.html,80端口没有入口点，只能找22端口,用hydra爆破root密码 SSH登录ssh &#x72;&#111;&#x6f;&#x74;&#64;&#x31;&#x39;&#50;&#46;&#x31;&#x36;&#56;&#46;&#x33;&#x31;&#46;&#50;&#x30;&#48; 能直接查看root.txt和user.txt 总结Dont Overthink. Really, Its simple.，Easy靶场,hydra直接爆破没什么好说的"},{"title":"记红日靶场2过程中的不足","date":"2024-11-11T11:31:08.000Z","url":"/2024/11/11/%E8%AE%B0%E7%BA%A2%E6%97%A5%E9%9D%B6%E5%9C%BA2%E8%BF%87%E7%A8%8B%E4%B8%AD%E7%9A%84%E4%B8%8D%E8%B6%B3/","tags":[["内网","/tags/%E5%86%85%E7%BD%91/"]],"categories":[["内网渗透","/categories/%E5%86%85%E7%BD%91%E6%B8%97%E9%80%8F/"]],"content":"msf派生cs cs的监听要和lport的端口一样 cs派生msf cs新建一个foreing http监听设置和msf的设置一样，然后cs新建会话到这个监听器即可。 其实不止这么多，包括进程迁移，票据之类的一个cs全部搞定了就，但是我还是想尝试一下怎么用纯手动打靶而且打靶环境过于理想完全没有考虑过流量特征的问题，有机会了补一篇，内网的学习路漫漫。"},{"title":"2024强网拟态复盘","date":"2024-10-21T07:27:08.000Z","url":"/2024/10/21/2024%E5%BC%BA%E7%BD%91%E6%8B%9F%E6%80%81%E5%A4%8D%E7%9B%98/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"],["复盘","/categories/ctf/%E5%A4%8D%E7%9B%98/"]],"content":"web复盘一下吧只做出来了两道，所有题都有一点思路，但是只有一点点可惜可惜，太可惜了。 capoo这是个非预期，capoo.php可以任意文件读取，能读取到start.sh,start.sh中泄露了flag的名字，直接读取就行 ez_picker 考点就是原型链污染+pickle反序列化+jwt伪造，我当时感觉最难的是那个pickle反序列化，因为他是白名单虽然可以通过原型链污染进行修改但是这是由于对原理以及内建模块的不熟悉导致的，其实只需要把用到的模块和命令加入就行比如builtins、getattr、popen加入就好了 Spreader 这个题一眼xss嘛，然后有两种解题思路，一个是插入js代码利用/store路由，然后访问/report_privileged将privilege用户的cookie储存到/store中，然后同样的步骤再来一次获取admin的cookie 或者就是直接弹出privilege和admin的cookie OnlineRunner这道题没有办法用import的方式来导入类，能执行命令的都不能用，反射也没有办法直接执行命令，看别的师傅是要绕过一个沙箱 探索Java RASP Bypass新姿势 这里我还是有点懵，直接贴别的师傅的payload 其实比赛的时候想过用base64将文件编码读取，但是因为数据过大导致网页卡死了就没有继续想过了 唉，还得继续学，太菜了"},{"title":"KKcms代审","date":"2024-10-14T17:48:36.000Z","url":"/2024/10/15/KKcms%E4%BB%A3%E5%AE%A1/","tags":[["web","/tags/web/"],["代码审计","/tags/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"]],"categories":[["代码审计","/categories/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"]],"content":"环境安装源码下载地址： php5.6 .9+mysql5.7.26+apache2.4.39 审计验证码复用 这串代码用来执行js代码更换验证码，但是bp它默认不加载js，所以造成了验证码复用。 verifycode.php的代码，就是生成一个随机的4位0-9的图片验证码 文件上传这个cms默认用的编辑器是KindEditor,版本是4.1.10，构造payload 可以直接上传文件，但是没什么用。 而且他有白名单，只能上传指定的后缀文件。 前台sql注入在template\\wapian\\vlist.php这里 我们可以看到他没有任何的防护，但其实是有防护的,vlist.php里包含了system/inc.php,而inc.php中有一个转义的函数 但是这里为什么可以注入呢？是因为这里是数字型注入，没有用双引号包裹，自然也不用双引号进行闭合，addslashes也就没起上作用,放进sqlmap里就可以跑出来。 前台sql注入2在ucenter\\reg.php里 这里为什么可以注入呢？这里是因为他有一个stripslashes函数，它会删除由addslashes添加上的斜杠，放进sqlmap里跑 也是可以跑出来盲注。搜索stripslashes关键字，可以找到repass.php和active.php同样有注入。 后台sql注入在cms_usergroup_edit.php处 修改会员级别处有盲注，但是sql跑不出来不知道为什么。然后和此处一样的还有cms_ad_edit.php、cms_admin_edit.php、cms_book_edit.php、cms_channel_edit.php 还有一处 这里有delete注入，整个后台的delete语句全是这样写的。 XSS漏洞就不审计了，这个cms就这样吧，一个比较简单的cms。"},{"title":"java反射","date":"2024-05-31T00:44:30.000Z","url":"/2024/05/31/java%E5%8F%8D%E5%B0%84/","tags":[["JAVA","/tags/JAVA/"]],"categories":[["JAVA","/categories/JAVA/"]],"content":"什么是反射反射是大多数语言都必不可少的组成部分，对象可以通过反射获取他的类，类可以通过反射拿到所有⽅法（包括私有），拿到的⽅法可以调⽤，总之通过“反射”，我们可以将 Java 这种静态语⾔附加上动态特性。 Java反射组成相关的类java.lang.Class：类对象; java.lang.reflect.Constructor：类的构造器对象; java.lang.reflect.Field：类的属性对象; java.lang.reflect.Method：类的方法对象; 实例化对象的方法实例化对象的getClass()方法如果上下⽂中存在某个类的实例 obj，那么我们可以通过 obj.getClass 来获取它的类。 使用类的 .class 方法如果你已经加载了某个类，只是想获取到它的 java.lang.Class 对象，那么就直接拿它的 class 属性即可。这个⽅法其实不属于反射。 Class.forName(String className)：动态加载类如果你知道某个类的名字，想获取到这个类，就可以使⽤ forName 来获取，后续要利用的话是需要实例化的。 获取成员变量Field获取成员变量Field位于 java.lang.reflect.Field 包中 Field[] getFields() ：获取所有 public 修饰的成员变量 Field[] getDeclaredFields() 获取所有的成员变量，不考虑修饰符 Field getField(String name) 获取指定名称的 public 修饰的成员变量 Field getDeclaredField(String name) 获取指定的成员变量 获取成员方法 Method 获取构造函数 Constructor 命令执行获取 class 实例 之后 获取类名：forName() 创建对应类型的实例：newInstance() 获取字段的值：get()、设置字段的值：set() 获取方法：getMethod()、调用方法：invoke() 基本知识就是这些，如何执行命令呢，举个例子 这是调用静态方法，不需要实例 当然也可以实现一个新实例 Java反序列化基础篇-02-Java反射与URLDNS链分析参考链接，写的很清晰 Java反射 Java反射修改字段private static单独出现的话，用getDeclaredField也可以 finalfinal 字段能否修改，有且取决于字段是直接赋值还是间接赋值（编译时赋值和运行时赋值的区别）。直接赋值是指在创建字段时就对字段进行赋值，并且值为 JAVA 的 8 种基础数据类型或者 String 类型，而且值不能是经过逻辑判断产生的，其他情况均为间接赋值。 直接赋值 这样通过反射修改会报错 为什么呢？ 因为JVM在编译时期, 就把final类型的String进行了优化, 在编译时期就会把String处理成常量，只要是让name的值经过运行才能获得, 那么就不会被处理为常量。 间接修改 这样就修改成功了 static+final 这样使修改不成功的，但是还是可以修改，通过反射将name字段取出来后将final修饰符去掉就可以修改 这样就成功修改了"},{"title":"weblogic上传马路径选择","date":"2024-04-12T00:23:23.000Z","url":"/2024/04/12/weblogic%E4%B8%8A%E4%BC%A0%E9%A9%AC%E8%B7%AF%E5%BE%84%E9%80%89%E6%8B%A9/","tags":[["web","/tags/web/"]],"categories":[["web","/categories/web/"]],"content":"weblogic上传木马路径选择对于反序列化漏洞，如果获得的是系统权限或者root权限，那就没必要上传木马，但如果只是web安装应用的权限，就上传获取更大权限。 上传需要找到几个点，获取物理路径，如下面三种： 方法1：把shell写到控制台images目录中\\Oracle\\Middleware\\wlserver_10.3\\server\\lib\\consoleapp\\webapp\\framework\\skins\\wlsconsole\\images\\shell.jsp 目录上传木马，访问 http://*.*.*.*:7001/console/framework/skins/wlsconsole/images/shell.jsp 方法2：写到uddiexplorer目录中\\Oracle\\Middleware\\user_projects\\domains\\base_domain\\servers\\AdminServer\\tmp\\_WL_internal\\uddiexplorer\\随机字符\\war\\shell.jsp 目录写入木马，访问 http://*.*.*.*:7001/uddiexplorer/shell.jsp 方法3：在应用安装目录中\\Oracle\\Middleware\\user_projects\\domains\\application\\servers\\AdminServer\\tmp\\_WL_user\\项目名\\随机字符\\war\\shell.jsp 目录写入木马，访问 http://*.*.*.*:7001/项目名/shell.jsp "},{"title":"WolvCTF2024-复盘","date":"2024-03-18T09:40:20.000Z","url":"/2024/03/18/WolvCTF2024-%E5%A4%8D%E7%9B%98/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"],["复盘","/categories/ctf/%E5%A4%8D%E7%9B%98/"]],"content":"Bean Cafe他的验证逻辑是通过图片的md5的值来验证的，所以我们只需要传两张MD5相同的图片就可以获得flag  Upload Fun 首先分析一下源码，源码通过POST方式来上传文件并且上传的文件不能包含..用GET的方式来读取文件也不能带有..，上传的文件在uploads目录下，但是我们不知道$hash是什么。 通过谷歌得知在linux种文件名的长度最大可为255个字符，我们可以通过这种方式让它报错来得知他的值 我们可以看到他的回显告诉我们了hash的值，然后我们再上传一句话木马访问即可。 POST上传文件的请求体模板: Username题目提示了jwt可以爆破，那这道题肯定和jwt伪造有关。 用jwt-cracker爆破密钥，为mstzt 因为有标签，所以判断为xxe注入，但是正常的xxe他会有过滤，不能引用东西。可以使用XInclude attack关于XInclude attack 读取/app/app.py文件 在这个文件里可以得知，有一个新的路由/secret-welcome-935734在这里登陆成功后得到flag，用户名为flaguser，密码我们可以用xxe读取/etc/passwd或者/etc/shadow在shadow中我们得知密码为$1$hack$BzqsFHqkPjQ2Sn9amFsgN0这个可以利用hashcat爆破 关于hashcat的用法 爆破出来密码是qqz3登录得到flag"},{"title":"java注入学习","date":"2024-03-16T12:56:44.000Z","url":"/2024/03/16/java%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/","tags":[["web","/tags/web/"],["sql","/tags/sql/"]],"categories":[["web","/categories/web/"],["java","/categories/web/java/"]],"content":"JDBCJDBC是什么Java DataBase Connectivity（Java语言连接数据库） 接口或类 作用 DriverManager类 1)管理和注册数据库驱动2)得到数据库连接对象 Connection接口 一个连接对象，可用于创建Statement和PreparedStatement对象 Statemen接口 一个SQL语句对象，用于将SQL语句发送给数据库服务器 PreparedStetemen接口 一个SQL语句对象，是Statemen的子接口 ResultSet接口 用于封装数据库查询的结果集，返回给数据库Java程序 加载和注册驱动的方法 描述 Class.forName(数据库驱动实现类) 加载和注册数据库驱动，数据库驱动由mysql厂商”com.mysql.jbdc.Driver” PrepareStatement会对SQL语句进行预编译，但如果直接采取拼接的方式构造SQL，此时进行预编译也无用。 Statement不会对SQL语句进行预编译。 两种操作都是因为SQL语句拼接导致的SQL注入。 MyBatis框架在mybatis中的，使用#包裹的字段在内部进行了预编译处理，而$并没有使用预编译，也就是JDBC中prepareStatement和Statement的区别。mybatis的sql语句通常是写在xml文件中。 order by 盲注在SQL中是不允许union直接跟在order by后面的，所以我们可以考虑使用盲注或报错注入。 我的理解就是通过order by将列进行排序，通过返回的不同结果 举个简单的例子: 可以看到，当if语句成立时返回的时间为5s，但是不成立时为0.002s 这是基于时间的盲注。 还可以利用其它的方式来进行盲注 例如： 如果if语句错误就会返回ERROR 1242 (21000): Subquery returns more than 1 row，当if成立时就会返回正常页面，可以通过返回的情况来判断。 rand()盲注原理和order by大差不差，就是rand()会产生一个0-1之间的随机数，我们给一个固定的种子就会生成一个固定的数，所以我们控制rand的种子就可以造成排序的结果不同。 比如： #和$符号的区别#{} 使用#{}意味着使用的预编译的语句，即在使用jdbc时的preparedStatement，sql语句中如果存在参数则会使用?作占位符，我们知道这种方式可以防止sql注入，并且在使用#{}时形成的sql语句，已经带有引号，例，select * from table1 where id=#{id} 在调用这个语句时我们可以通过后台看到打印出的sql为：select * from table1 where id=’2’ 加入传的值为2.也就是说在组成sql语句的时候把参数默认为字符串。 ${} 使用${}时的sql不会当做字符串处理，是什么就是什么，如上边的语句：select * from table1 where id=${id} 在调用这个语句时控制台打印的为：select * from table1 where id=2 ，假设传的参数值为2 从上边的介绍可以看出这两种方式的区别，我们最好是能用#{}则用它，因为它可以防止sql注入，且是预编译的，在需要原样输出时才使用${}，如， select * from ${tableName} order by ${id} 这里需要传入表名和按照哪个列进行排序 ，加入传入table1、id 则语句为：select * from table1 order by id 如果是使用#{} 则变成了select * from ‘table1’ order by ‘id’ 我们知道这样就不对了。 另，在使用以下的配置时，必须使用#{} 在parameterType是int时，sql语句中必须是#{}。 参考链接 关于Java中order by注入详解"},{"title":"NoSQL注入","date":"2024-03-12T07:28:01.000Z","url":"/2024/03/12/NoSQL%E6%B3%A8%E5%85%A5/","tags":[["web","/tags/web/"],["sql","/tags/sql/"]],"categories":[["web","/categories/web/"]],"content":"什么是NoSQLNoSQL，指的是非关系型的数据库。NoSQL 有时也称作 Not Only SQL 的缩写，是对不同于传统的关系型数据库的数据库管理系统的统称。NoSQL 用于超大规模数据的存储。（例如谷歌或 Facebook 每天为他们的用户收集万亿比特的数据）。这些类型的数据存储不需要固定的模式，无需多余操作就可以横向扩展。 NoSQL 提供了新的数据模型和查询格式，从而可以规避常规的 SQL 注入攻击。但是，它们也为攻击者提供了插入恶意代码的新方法。总的来讲有四种注入手法： 1、重言式 又称为永真式（这个好像是数理逻辑里面的术语），此类攻击是在条件语句中注入代码，使生成的表达式判定结果永远为真，从而绕过认证或访问机制。 2、联合查询 联合查询是一种众所周知的SQL注入技术，攻击者利用一个脆弱的参数去改变给定查询返回的数据集。联合查询最常用的用法是绕过认证页面获取数据。 3、JavaScript 注入 MongoDB Server 支持 JavaScript，这使得在数据引擎进行复杂事务和查询成为可能，传递不干净的用户输入到这些查询中可以注入任意 JavaScript 代码，导致非法的数据获取或篡改。 4、盲注 当页面没有回显时，那么我们可以通过$regex正则表达式来达到和 SQL 注入中substr()函数相同的功能，而且 NoSQL 用到的基本上都是布尔盲注。 对于 PHP 本身的特性而言，由于其松散的数组特性，导致如果我们输入value=1那么，也就是输入了一个 value 的值为 1 的数据。如果输入value[$ne]=1也就意味着value=array($ne=&gt;1),在 MongoDB 中，原来的一个单个目标的查询变成了条件查询。同样的，我们也可以使用username[$gt]=&amp;password[$gt]=作为 payload 进行攻击。 在我看来，nosql注入就是通过传入数组然后拼接恶意语句造成注入，和其他数据库的注入原理类似，但是语法有所不同。 查询操作符 nosql的查询操作符不用or、and、=等等，取而代之的是$eq、$ne、$gt等 方法名 描述 $gt 大于 $lte 小于等于 $in 包含 $nin 不包含 $lt 小于 $gte 大于等于 $ne 不等于 $eq 等于 $and 与 $nor $nor在NOR一个或多个查询表达式的数组上执行逻辑运算，并选择 对该数组中所有查询表达式都失败的文档 $not 反匹配(1.3.3及以上版本),字段值不匹配表达式或者字段值不存在 $or 或 例如： 我们传入username=admin&amp;password=123456 后端就会处理成 如果我们传入username[$ne]=1&amp;password[$ne]=1 后端处理成 查询的语句就会变成db.users.find(&#123;&#39;username&#39;:&#123;$ne:1&#125;, &#39;password&#39;:&#123;$ne:1&#125;&#125;) 意思就是查询username不等于1，password不等于1的用户 此外,nosql还可以进行javascrip注入 例如：db.users.find( &#123; $where: function() &#123; return this.username == &#39;admin&#39;; &#125; &#125; ) 该查询返回在users集合中username等于admin的所有文档。 参考链接从零学习 NoSQL 注入之 Mongodb get-started-with-nosql-injection-nosqli"},{"title":"sql异或注入","date":"2024-03-01T02:03:30.000Z","url":"/2024/03/01/sql%E5%BC%82%E6%88%96%E6%B3%A8%E5%85%A5/","tags":[["web","/tags/web/"],["sql","/tags/sql/"]],"categories":[["web","/categories/web/"]],"content":"sql异或注入当waf过滤了很多东西，但是没有过滤异或(^)符的时候使用。 什么是异或注入异步注入说简单一点就是在构造where后面的判断条件时使用^（异或符号）来达到sql注入攻击的目的 1^1=0 1^0=1 异或注入就是利用sql语句来进行盲注 例如： 这里就是看数据库的第变量1个字符是否等于变量2，如果相等就会变成1^1返回的是0，所以我们应该在最后再异或一个1 这样如果数据库的第变量1个字符等于变量2就会返回1，然后再配合脚本实现异或注入 脚本: "},{"title":"PHP语法构造和变量函数","date":"2024-02-29T02:51:06.000Z","url":"/2024/02/29/PHP%E8%AF%AD%E6%B3%95%E6%9E%84%E9%80%A0%E5%92%8C%E5%8F%98%E9%87%8F%E5%87%BD%E6%95%B0/","tags":[["web","/tags/web/"]],"categories":[["web","/categories/web/"]],"content":"昨天我发现了一个问题 $a是36进制的eval转换成的10进制 所以这个代码其实就是eval(system(&quot;dir&quot;));，但是运行的时候却报错了 然后去网上了解了才知道 eval 属于PHP语法构造的一部分，并不是一个函数，所以不能通过 变量函数 的形式来调用` 类似的语法构造还有：echo，print，unset()，isset()，empty()，include，require… 就比如 直接print &quot;asdasd&quot;就可以打印出字符，但是自己构造的函数却没有办法这样。 所以网上有的一句话木马来调用eval的其实都不可以,换成assert就可以了。"},{"title":"order by 盲注","date":"2024-02-11T11:11:39.000Z","url":"/2024/02/11/order-by-%E7%9B%B2%E6%B3%A8/","tags":[["web","/tags/web/"],["sql","/tags/sql/"]],"categories":[["web","/categories/web/"]],"content":"order by比较大小盲注 这是表里的所有东西 如果我们执行select * from flag where id=&#39;&#39; or 1 union select 1,1 order by 2;会出现 不能用and否则就相当于创建了一个虚拟的表，查询不到原来的数据。 我们知道flag的第一位是f，如果我们查询select * from flag where id=&#39;&#39; or 1 union select 1,&#39;f&#39; order by 2;会发生什么呢？ 还是这样，第一行没什么用，但是如果我们查询的是g的话就会变成这样 flag的值就会出现在第一行，我们就可以利用这一点来进行order by盲注 脚本: 根据脚本自行修改"},{"title":"Tiki:1","date":"2023-12-04T10:57:21.000Z","url":"/2023/12/04/Tiki-1/","tags":[["vulnhub","/tags/vulnhub/"]],"categories":[["boot2root","/categories/boot2root/"]],"content":"描述哦，不，我们的网络服务器受到了损害。攻击者使用了0day，所以我们不知道他是如何进入管理面板的。调查一下。 这是一个 OSCP Prep Box，它基于我最近发现的 CVE。它位于 OSCP 实验室机器级别。 渗透过程首先就是信息搜集，靶机的ip用nmap或者netdiscover都可以 靶机ip：192.168.56.102 然后扫描一下全部的端口 nmap -sS -p- 192.168.56.102 -T4 --min-rate 1000 -oN nmap.txt 结果如下： 然后扫一下端口的信息，和服务的版本 nmap -sV -sC -O -p22,80,139,445 192.168.56.102 可以发现有samba服务，可以对samba进行枚举 用enum4linux跑一下可以找到silky的用户,用smbclient列举一下共享的资源 smbclient -L IP 能找到Notes，连接一下smbclient //192.168.56.102/Notes有一个Mail.txt 下载下来查看 可以看到cms的密码，登录之后没什么用。 查看cms有没有什么历史漏洞 searchsploit tiki cms 查看web服务cms的版本用dirsearch可以找到一个changelog 访问可以看到版本为21.1，正好有一个历史漏洞 用searchsploit tiki cms -m 48927 将脚本下载下来运行，重置admin的密码为空,然后用admin登录bp抓包修改登录密码为空，成功登录。在lastchange的Credentials里可以找到silky:Agy8Y7SPJNXQzqA 这个是ssh的密码，用ssh连接，查看id，发现用户在sodu组下，可以直接sudo su提权。 小结一开始靶场搭建的时候出了点问题导致发现不了靶机的地址，是因为我的攻击机和靶机不在一个局域网内，将靶机的网卡和攻击机桥接在一起就可以了 记录下来的只有正确的路线，渗透过程中还要去试着探索其他的功能点"},{"title":"1337_UP_LIVE_CTF 2023","date":"2023-11-22T12:14:04.000Z","url":"/2023/11/22/1337_up_live_Ctf/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"],["复盘","/categories/ctf/%E5%A4%8D%E7%9B%98/"]],"content":"CTFC刷题的时候见到过这种题，其实就是注入+爆破嘛，但之前遇到的是sql注入的，这说明现在数据库类型见的不多 题目给了一个附件 能看出是MongoDB可以用$regex 进行正则匹配 exp: Bug Bank有两种解法，预期解我也没看懂，非预期解就很简单了，通过转钱的功能转-100000000原账号就会减-100000000就会变成正的，就可以买flag了 预期解可以参考： Smarty Pants 用换行符绕过即可 Bug Report Repo首先是sql盲注，数据库是sqlite，自己写的脚本，效率不够，还是得靠sqlmap 附一个别的师傅写的脚本 爆出来的一条有用的东西 访问是一个登录页面，用给的用户名密码登录，他是得是admin，那就是jwt，但是不知道密钥啊，这个时候就用到了一个工具jwt-cracker爆破密钥，字典用rockyou，key是catsarethebest，伪造admin就ok了 Pizza Time只有一处功能点…. 探测web服务，用的是ngnix，可以猜测是Flask/Django或者node 首先fuzz，可以看出除了&amp;和+的所有的特殊字符都被过滤了大括号也被过滤了，难道不是SSTI么？不！他就是SSTI,%0a可以绕过，具体原理是什么我得分析分析源码再写 payload: 但是这样会报500，将命令放进header里就可以绕过了 "},{"title":"dnslog注入学习","date":"2023-10-18T02:03:54.000Z","url":"/2023/10/18/dnslog%E6%B3%A8%E5%85%A5%E5%AD%A6%E4%B9%A0/","tags":[["web","/tags/web/"],["sql注入","/tags/sql%E6%B3%A8%E5%85%A5/"]],"categories":[["web","/categories/web/"]],"content":"什么是DNSlogDNS（Domain Name System）域名服务系统，简单的说就是域名与IP转换服务，比如用户输入a.com,DNS就会将a.com解析找到它真实的ip，以便于访问服务器上的相关服务，DNSlog就是存储在DNS服务器上的域名信息，它记录着用户对域名访问的信息，类似于日志文件。 DNSlog回显原理首先我们先了解一下多级域名的概念 域名分级与域名解析过程(DNS) 因特网采用层次树状结构命名方法。域是名字空间中一个可被管理的划分（按机构组织划分），域可被划分为子域，子域可再被划分，即形成了顶级域名、二级域名、三级域名等。从右向左为顶级域名、二级域名、三级域名等，用点隔开。例如872323857.github.io，io就是顶级域名，github就是二级域名，872323857就是三级域名。且域名不分大小写。 通俗的说就是我有个已注册的域名a.com，我在域名代理商那里将域名设置对应的ip 1.1.1.1 上，这样当我向dns服务器发起a.com的解析请求时，DNSlog中会记录下他给a.com解析，解析值为1.1.1.1，而我们这个解析的记录的值就是我们要利用的地方。 自己操作一下才能更好的理解，首先在上获得一个域名，然后我们ping一下 我们将1换成别的试试 可以看到解析的日志会把%USERNAME%的值给带出来，因为系统在ping命令之前会将%USERNAME%的值解析出来，然后再和域名拼接起来。 DNSlog利用sql注入 就以sql盲注为例，后端数据库用的mysql数据库，说一下用dnslog回显只能用于windows系统，为什么呢。因为在利用sql盲注进行DNSlog回显时，需要用到load_file函数，这个函数可以进行DNS请求。那和只能在windows上用有什么关系呢，这里就涉及到Windows的一个小Tips——UNC路径 UNC路径UNC是一种命名惯例, 主要用于在Microsoft Windows上指定和映射网络驱动器. UNC命名惯例最多被应用于在局域网中访问文件服务器或者打印机。我们日常常用的网络共享文件就是这个方式。 \\abc.xxx\\test这也就解释了为什么CONCAT()函数拼接了4个\\了,双斜杠表示网络资源路径多加两个\\就是转义了反斜杠。 通过DNSlog盲注需要用的load_file()函数，所以一般得是root权限。show variables like &#39;%secure%&#39;;查看load_file()可以读取的磁盘。 1、当secure_file_priv为空，就可以读取磁盘的目录。 2、当secure_file_priv为G:\\，就可以读取G盘的文件。 3、当secure_file_priv为null，load_file就不能加载文件。 通过设置my.ini来配置。secure_file_priv=””就是可以load_flie任意磁盘的文件。 在mysql中执行命令select load_file(&#39;\\\\\\\\a.a92pjl.dnslog.cn\\\\a&#39;);可以看到 和之前的结合起来构造语句,用sqli靶场来测试 小结DNSlog注入不止可以用于sql注入，还可以用于xss，xxe，ssrf等，思路打开。 可以参考： "},{"title":"SYSTEM_FAILURE_1靶场","date":"2023-09-16T09:57:06.000Z","url":"/2023/09/16/SYSTEM-FAILURE-1%E9%9D%B6%E5%9C%BA/","tags":[["vulnhub","/tags/vulnhub/"]],"categories":[["boot2root","/categories/boot2root/"]],"content":"跟着别人的视频打一下。 靶场直接就给了ip地址，用nmap扫一下端口 开放了445端口,445端口默认开放的是SMB服务，可以利用相关的工具,smbclient、smbmap 用smbmap扫描可以发现有一个匿名的共享,用smbclient //ip/anonymous连接，空密码直接回车就行。 查看文件发现只有一个share，用get share下载下来,查看share文件。 给了Admin和89492D216D0A212F8ED54FC5AC9D340B，猜测是账号密码，md5解密得qazwsxedc，用xftp连接，或者用lftp连接也可以。 ftp可以连接，ssh试过之后也可以连接。利用linpeas.sh搜集一下有没有可以提权的东西 工具地址： 但是用户权限太低，没有办法提权。 cd到/Syst3m/F4iluR3,里面有很多文件 他们的大小也都差不多，用find ./ -size +1696c命令找一下有没有不正常的文件,确实能找到file0189.txt，用diff命令可以比一下他与其他的文件有什么不同，但是发现文件内容是一行的，所以要给他们变成单行的。 cat file0189.txt |xargs -n 1 &gt; /tmp/tmp1 cat file.txt |xargs -n 1 &gt; /tmp/tmp1然后再用diff判断他们有什么不同。 发现后面有一串不一样的，需要解密，base62解密得到/Sup3rS3cR37 这个文件夹在/var/www/html/area4里,下载useful.txt，查看/etc/passwd能发现用户名，利用hydra进行爆破 命令:hydra -L user.txt -P useful.txt ssh://192.168.2.243 -V -I -u -e nsr 可以爆破出来密码，登录valex用户。 sudo -l：列出用户可以执行和不可以执行的命令。 可以发现jin用户可以用pico。在网上能找到nano的提权方式 执行命令sudo -u jin /usr/bin/pico 然后 然后就到jin这个用户了,这个时候就可以执行systemctl了，这个时候就可以用systemctl进行提权。 或者修改sudoers 读取到root.txt"},{"title":"TFCCTF2023","date":"2023-08-01T02:49:21.000Z","url":"/2023/08/01/TFCCTF2023/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"],["复盘","/categories/ctf/%E5%A4%8D%E7%9B%98/"]],"content":"FORENSICSDOWN BAD修改图片的高度就能得到flag LIST比赛的时候与正确答案插肩而过了，我真该死啊。 附件给了一个流量包，追踪TCP流能发现有类似command=echo+%22ZmluZCAvaG9tZS9jdGYgLXR5cGUgZiAtbmFtZSAiRiIgMj4vZGV2L251bGw%3D%22+%7C+base64+-d+%7C+bash这种，解码是 find /home/ctf -type f -name &quot;T&quot; 2&gt;/dev/null多解码几个可以发现-name的参数就是flag 可以用strings list.pcap|grep command这个代码找到所有的flag，用脚本解码快一点，一个一个解码也可以。 "},{"title":"AmateursCTF2023","date":"2023-07-19T08:52:42.000Z","url":"/2023/07/19/AmateursCTF2023/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"]],"content":"WEBwaiting-an-eternity 看文件头，要等好长事件之后才会刷新,直接访问后面的url secretcode是md5解密，但是没什么用，Cookie里有time是时间戳将他改成NAN显示flag funny factorials附件给了一个app.py 可控点在这里，通过改变主题得到flag 将path里面的../删掉了，如果path开头是/会忽视掉，但是如果递归超过1000次就会进入RecursionError然后访问根目录下的flag.txt就行 payload: latek关于latek可以看看这篇文章 直接用\\input的话flag输出不完全，问了chatgpt可以用其他方法进行任意文件读取 REVvolcanoida分析，先看main函数 先看sub_12BB和sub_13D9这两个 逻辑很简单，写脚本爆破一下就行 看后面 前几个完全没用只用考虑最后一个括号里的内容就行。 sub_1430: 直接写脚本爆破就行了 exp: bear和volcano的数值一样。 MISCCensorship给了一个main.py 可以执行python的命令,但是不能有flag,e,t，flag是被定义的但是print里有t没有办法回显，可以用python的内置函数获得print。 payload: "},{"title":"CrewCTF","date":"2023-07-11T07:20:40.000Z","url":"/2023/07/11/CrewCTF/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"],["复盘","/categories/ctf/%E5%A4%8D%E7%9B%98/"]],"content":"WEBsequence_gallery下载附件 在subprocess.run()中shell没等于TRUE但是容易受到参数的影响 在kali里用man命令看dc的文档 用-e和!可以执行命令,空格被过滤了，用其他符号绕过，在最后需要加上%0a表示输入了ENTER payload:?sequence=-e$&#123;IFS&#125;!cat$&#123;IFS&#125;*.txt%0A 得到flag:crew&#123;10 63 67 68 101 107 105 76 85 111 68[dan10!=m]smlmx&#125; 放到kali里用dc命令转换为真实的flag "},{"title":"UIUCTF2023","date":"2023-07-04T11:58:02.000Z","url":"/2023/07/04/UIUCTF023/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"]],"content":"MISCvimjail1这道题一连接就是插入模式，想办法退出插入模式. 以只读、文本不可修改、限制模式、启动并且用/home/user/vimrc替代了原有的.vimrc 但是可以按两次ctrl+\\再按一次ctrl+n来绕过，然后用:e来读取flag。 :e表示编辑一个文件 vimjail2 以只读模式、文本不可修改、限制模式启动vim，替换了原有的vimrc和viminfo 将所有字符都转换成了下划线，绕过方式还是两次ctrl+\\+ctrl+n，entry.sh中最后有一个cat /flag,这意味着退出vim后会打印出flag. :q即可。 Corny Kernel附件给了一个c文件 下面的代码的意思是当加载模块的时候输出第一段flag 首先用gzip -d pwnymodule.ko.gz，然后用insmod pwnymodule.ko加载这个模块，加载完成后会输出第一串flag。 这一串代码的意思是这个模块在被卸载的时候输出第二段flag,用rmmod pwnymodule.ko这个卸载模块,然后用dmesg输出内核的信息，在最后会输出两段flag。 vimjail1.5 别的没变，但是之前的方法没用了，用ctrl+r这个用于执行撤销和重做操作。然后用=execute(readfile(&#39;flag.txt&#39;)) = 是用于执行表达式的命令。execute()：execute() 函数用于执行 Vim 命令。readfile(&#39;flag.txt&#39;)：使用 Vim 的内置函数 readfile() 读取名为 flag.txt 的文件内容，并返回一个包含文件内容的列表。就是将flag.txt里面的内容变成命令执行,然后就会报错 或者，用=execute(&#39;:e flag.txt&#39;)然后按两次回车。 vimjail2.5 这个只能输入:q，方法基本上差不多，还是ctrl+r然后=,按TAB键可以补全内置代码，然后找到execute，最后的命令是execute(&quot;:q&quot;)，后会输出flag。 cryptoThree-Time Pad 看这篇博客，用他的脚本可以解出这道题 运行得到flag At Home 通过c=(flag*e)%n可得 PWNChainmail一个基础的栈溢出，跳到give_flag的函数即可，但要注意的是在发送give_flag的地址之前要再给他发送一个ret的地址，否则会造成错误的对齐。ret的地址可以用ROPgadget 找，命令:ROPgadget --binary chal --only &#39;ret&#39;。 exp： WEBpeanut-xssXSS学的不是很好，具体怎么解可以看下面的文章: "},{"title":"Google-CTF2023","date":"2023-06-29T10:32:01.000Z","url":"/2023/06/29/Google-CTF2023/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"],["复盘","/categories/ctf/%E5%A4%8D%E7%9B%98/"]],"content":"MISCPAPAPAPA下载下来附件是一张全白的图片，通过修改jpg的宽高获得flag 从FF到01中间，修改成FF C0 00 11 08 02 00 02 10 03 01 31 00 02 31 01 03 31 01 右边就是flag WEBUNDER-CONSTRUCTION给了一个flask和一个php的服务，没有办法ssti注入 通过代码分析，在php的服务上，只要让tier=gold就输出flag。 可以在注册账号的时候传两个tier。 flask识别第一个tier，php识别第二个tier，注册完后在php服务登录得到falg。 其他的太难了，看都看不懂  可以看这个"},{"title":"Africa battle CTF","date":"2023-06-26T00:29:04.000Z","url":"/2023/06/26/Africa-battle-CTF/","tags":[["ctf","/tags/ctf/"]],"categories":[["ctf","/categories/ctf/"],["复盘","/categories/ctf/%E5%A4%8D%E7%9B%98/"]],"content":"WEBCivilization ?source得到这个，这个只用双写就可以绕过。 payload: Cobalt Injection在源代码里有 &lt;!-- IP?capital=Benin --&gt; 可知存在ssti模板注入。没有过滤。 payload: 当然看别人的WP，要长脑子了 #request.application：表示当前请求的应用程序对象。 这个还没搞明白，搞明白了再回来修改。 Fâ访问?source 反序列化，只要将传入的fa值和$du相等就可以输出flag。 payload: 其中，boknn的值为NULL，du的值通过R引用了编号为2的值， boknn的编号就为2。 具体的可以看: Own reality真是让我长见识了。 首先是.git泄露 用wget将网站下载下来 `wget  -mirror 使用 --mirror 选项你可以下载整个站点，包括它的目录结构。 然后用git reflog查看历史版本，之后用git cherry-pick ‘你想要恢复的’ 会出来一个flag.txt,尾部有 二进制转换为字符就是flag It shock you先用whatweb看网站， 可以看到apache的版本，去网上找相对应的漏洞能找到，目录穿越 POC: AfricaWarning: This site is only for africa people. 在bp中将User-Agent改为africa Warning: Go away! Attacker! This page is only for local client! 用X-Forwarded-For伪造127.0.0.1 Warning: I don&#39;t trust users who are not from battlectf.online 用Referer绕过得到flag。 CryptoBack To Origin埃及象形文  可以参考上面的链接 Blind 首先是magic解码，然后 braille,解码得到flag ROCYOUfactordb和yafu分解不出来，看别人的博客知道有ROCA漏洞，可以从公钥中提取私钥 工具：  一开始运行要给权限 可以用在线的rsa解密工具： goose首先给了5个随机数，然后将falg的每个字符通过res = (2*a*pow(ord(x),4)+b*pow(ord(x),3)+c*pow(ord(x),2)+d*ord(x)+e)进行加密。 flag的前几个字符是知道的，可以列方程组计算一下a,b,c,d,e的值 解得： 然后写代码爆破: REseyiida64位打开,flag在getshell里面。 welcome 重点就是这个， add就是加， xor就是异或。 很简单的一个表达式。 Infinity 找到汇编代码里所有的push，然后将值转换一下 然后将这些反转一下删掉多余的东西 最后将这些拼接一下，battleCTF&#123;Beyond_OurGalaxie&#125; 。 babyrev用ida打开，查询字符串能发现qpiiatRIU&#123;Pvqp_Ugt3_UDDS_Stn_d0D!_85864r1277qu8195pqqtp6540494pr46&#125;，然后凯撒解密得到flag checker和上一题基本上差不多 gfyyqjHYK&#123;Flg4_d0z_i3d_xr0p3_1lg0?&#125;然后凯撒解密"},{"title":"ctfshow web入门126~150","date":"2023-03-18T07:42:06.000Z","url":"/2023/03/18/ctfshow-web%E5%85%A5%E9%97%A8126/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["php特性","/tags/php%E7%89%B9%E6%80%A7/"]],"categories":[["ctfshow","/categories/ctfshow/"],["刷题","/categories/ctfshow/%E5%88%B7%E9%A2%98/"],["php特性","/categories/ctfshow/%E5%88%B7%E9%A2%98/php%E7%89%B9%E6%80%A7/"]],"content":"web126与web125差不多 web127绕过方式和web123一样。payload： web128考察点：gettext拓展的使用在开启该拓展后 _() 等效于 gettext()payload: web129 看别人的wp绕过的姿势有很多啊，但是怎么一到我这里就失灵了啊。只能用php伪协议payload: web130PHP利用PCRE回溯次数限制绕过某些安全限制 或者数组绕过 或者 /s模式下，.匹配任意字符，+表示重复一次或更多次，没错是至少一次！而后面加个?表示懒惰模式，+?表示重复1次或更多次，但尽可能少重复。当然懒惰模式并不影响解题思路，总之就是ctfshow前面必须得有字符才能匹配到，所以直接f=ctfshow就可以了。 web131 web132一打开网站我都惊呆了，好高级的感觉。然后访问robots.txt有/admin访问就能看到源码。啊~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~这一题好简单啊。 只要让这个为false，username=admin和code=admin就行payload： web134parse_str()函数 ectract()函数 例如 payload: web136跟着大佬学到了好多啊在linux里可以用tee命令读取标准输入的数据，并将其内容输出成文件payload: web137 考察调用类中的函数 payload: web138相当于把冒号禁用了，但是call_user_func还可以传数组第一个元素是类名或者类的一个对象，第二个元素是类的方法名，同样可以调用。payload: web139太难了，脚本看不懂，以后有机会了再做 web140可以看到只要我们让intval($code)为0就可以了intval会将非数字字符转换为0，也就是说 intval(‘a’)==0 intval(‘.’)==0 intval(‘/‘)==0所以方法就挺多了payload： 我感觉随便搞一点函数放上去都可以。 web141传入的v3必须是非单词字符无字母数字绕过正则表达式总结（含上传临时文件、异或、或、取反、自增脚本）payload： web142emmmmmmmmmmmm，让我太奶来都会做payload: web143 web144对v3的长度进行了限制,所以在v2上下手payload: web145可以用三目运算符 payload: web146过滤了：没办法用三目运算符，可以用等号和位运算符\\ payload: web147具体原理看这个 payload: web148没过滤异或还可以用异或payload: web149预期解是条件竞争，可是我搞了半天也不行，就直接在index.php里改了payload: 然后用蚁剑连接。 web150 非预期日志文件包含写一句话修改user_agent内容为一句话，然后包含/var/log/nginx/access.log就可以使用我们写的一句话了。首先访问index.php 修改user_agent为"},{"title":"ctfshow web入门110~125","date":"2023-03-17T05:05:46.000Z","url":"/2023/03/17/ctfshow-web%E5%85%A5%E9%97%A8110/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["php特性","/tags/php%E7%89%B9%E6%80%A7/"]],"categories":[["ctfshow","/categories/ctfshow/"],["刷题","/categories/ctfshow/%E5%88%B7%E9%A2%98/"],["php特性","/categories/ctfshow/%E5%88%B7%E9%A2%98/php%E7%89%B9%E6%80%A7/"]],"content":"web110考察FilesystemIterator。getcwd()函数 获取当前工作目录 返回当前工作目录。payload: 缺陷是如果flag的文件不在第一位的话，就不能得到这个文件名。 web111考察 全局变量GLOBALS要执行这一段函数，v1要等于ctfshow 然后再将v2的值赋给v1，再接着getFlag函数，打印v1，v1为全局变量的时候，即可打印出flag。payload: web112payload: php://filter的各种过滤器 web113payload:可以用zlib伪协议 也可以用/proc/self/root proc目录的应用compress，和非预期都被禁了，但是伪协议放出来了，可以直接使用伪协议读payload: web115考察点：trim函数的绕过+is_numeric绕过 看师傅的wp才能做出来，在本地测试一下 可以用%0c换页，payload: web123 payload: web125 payload: "},{"title":"ctfshow web入门105~109","date":"2023-02-26T11:25:50.000Z","url":"/2023/02/26/ctfshow-web%E5%85%A5%E9%97%A8105/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["php特性","/tags/php%E7%89%B9%E6%80%A7/"]],"categories":[["ctfshow","/categories/ctfshow/"],["刷题","/categories/ctfshow/%E5%88%B7%E9%A2%98/"],["php特性","/categories/ctfshow/%E5%88%B7%E9%A2%98/php%E7%89%B9%E6%80%A7/"]],"content":" 这一段说get传的值不能等于error。 这一段说POST传的值不能等于flag。 这一段说POST传的值不等于flag的话输出变量error。payload: web106这道题就比web105多一个比较。payload: web107 题目就是把v1的值赋给v2，然后让v2的值和v3的MD5值相同。payload: MD5没办法处理数组。 web108连接不到服务器….. web109找不到服务器……"},{"title":"Hello World","date":"2023-02-26T09:53:28.226Z","url":"/2023/02/26/hello-world/","categories":[["undefined",""]],"content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub. Quick StartCreate a new post More info: Writing Run server More info: Server Generate static files More info: Generating Deploy to remote sites More info: Deployment"},{"title":"sqli-labs","date":"2023-02-20T12:24:45.000Z","url":"/2023/02/20/sqli-labs/","tags":[["sql注入","/tags/sql%E6%B3%A8%E5%85%A5/"]],"categories":[["web","/categories/web/"]],"content":"less-1看报错可知，这是闭合单引号。 用sqlmap更简单 less-2这一题就不用闭合，剩下的和第一题一样。 less-3看错误提示可知，需要用&#39;)来闭合，剩下的和第一题一样。 less-4看错误提示，可知闭合方式是&quot;)，但是单引号不会报错,剩下的和第一题一样。 less-5根据错误可以判断是单引号报错。联合注入也没有办法用，可以使用报错注入。extractvalue函数payload:id=’and(select extractvalue(“anything”,concat(‘~’,(select语句)))) payload： updatexml:payload:id=’and(select updatexml(“anything”,concat(‘~’,(select语句())),”anything”)) floor:payload:’union select 1 from (select count(*),concat((slelect语句),floor(rand(0)*2))x from “一个足大的表” group by x)a less-6闭合方式为&quot;，报错注入仍可行。 less-7文件读写注入，但是我怎么运行文件都不写入，放弃了。 less-8布尔盲注。 如果判断正确的话，页面返回正常。好麻烦啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊。 less-9时间盲注 MySQL时间盲注五种延时方法 less-10还是时间盲注，闭合方式为&quot;。 less-11这个就在username上直接输入sql语句就行。也可以用hackbar，Post传参。其他语句不变。."},{"title":"ctfshow web入门101~104","date":"2023-02-18T11:30:48.000Z","url":"/2023/02/18/ctfshow-web%E5%85%A5%E9%97%A8101~104/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["php特性","/tags/php%E7%89%B9%E6%80%A7/"]],"categories":[["ctfshow","/categories/ctfshow/"],["刷题","/categories/ctfshow/%E5%88%B7%E9%A2%98/"],["php特性","/categories/ctfshow/%E5%88%B7%E9%A2%98/php%E7%89%B9%E6%80%A7/"]],"content":"web101 v1必须是数字，v2可以使用可以使用反射类new ReflectionClass(),v3没有过滤;。payload: 0x2d还是-，然后最后一位需要自己猜。 web102 要确保v4为真，就要确保v2是数字.将v2进行base64编码然后再转换成16进制。payload： 然后访问2.php查看源码就能找到flag。 web103找不到服务器，做不了题. web104因为没有判断，可以直接让两个值相等，也可以用数组绕过，也可以用两个相等的sha1的值。 "},{"title":"ctfshow web97~100","date":"2023-02-07T06:20:16.000Z","url":"/2023/02/07/ctfshow-web%E5%85%A5%E9%97%A897~100/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["php特性","/tags/php%E7%89%B9%E6%80%A7/"]],"categories":[["ctfshow","/categories/ctfshow/"],["刷题","/categories/ctfshow/%E5%88%B7%E9%A2%98/"],["php特性","/categories/ctfshow/%E5%88%B7%E9%A2%98/php%E7%89%B9%E6%80%A7/"]],"content":"web97要求POST传参，a不能等于b，但是a和b的md5值要相同，但是md5这个函数呢有个漏洞，传入的参数为数组的时候会发生错误，并返回NULL。 web98 web99 因为in_array第三个参数没设置为true，所以该函数是宽松比较（==），字符串型会先转化为整型再比较，只要值相同就可以了，所以我们可以传参写木马进去. 然后用蚁剑连接 web100is_numeric() 函数用于检测变量是否为数字或数字字符串,如果指定的变量是数字和数字字符串则返回 TRUE，否则返回 FALSE。v1一定要是个数字，v2不能有分号，v3必须有分号。 0x2d是-，换上后加上ctfshow{}就可以了"},{"title":"ctfshow web89~96","date":"2023-02-02T06:20:16.000Z","url":"/2023/02/02/89/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["php特性","/tags/php%E7%89%B9%E6%80%A7/"]],"categories":[["ctfshow","/categories/ctfshow/"],["刷题","/categories/ctfshow/%E5%88%B7%E9%A2%98/"],["php特性","/categories/ctfshow/%E5%88%B7%E9%A2%98/php%E7%89%B9%E6%80%A7/"]],"content":"web89用数组绕过就行。payload: web90 只需要提交0x117c就行，0x117c是16进制的4476，也可以提交4476+字符。payload: web91第一次是/im第二次是/i/im可以匹配多行，/i只能匹配一行。所以让他第一次匹配到php第二次匹配不到php。payload: web92可以换个进制绕过 或者还有e这个东西 web93可以用小数，也可以用8进制payload: web94strpos是匹配字符，必须要匹配到0而且还不能在第一位，可以用8进制也可以用小数。如果用8进制的话必须在开头加一个空格。payload: web95这一道题多过滤了一个点，所以没法用小数了，其他的跟上一道题一样。payload: web96想办法读取flag.php还不能直接传flag.php，利用路径或者php协议就行。payload: "},{"title":"ctfshow web入门87~88","date":"2023-01-31T10:13:37.000Z","url":"/2023/01/31/ctfshow-web%E5%85%A5%E9%97%A887/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["文件包含","/tags/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"]],"categories":[["ctfshow","/categories/ctfshow/"],["刷题","/categories/ctfshow/%E5%88%B7%E9%A2%98/"],["文件包含","/categories/ctfshow/%E5%88%B7%E9%A2%98/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"]],"content":"web87谈一谈php://filter的妙用 然后再content写入经过base64编码过后的一句话 （PD9waHAgQGV2YWwoJF9QT1NUW2FdKTs/Pg==）这里content的值前面要加两个字符，因为base64算法解码时是4个byte一组，所以给他增加2个字符 一共8个字符然后再查看fl0g.php就行了 web88过滤的东西很多，但data协议还可以用。 base64后面是base64编码但是不能带有加号和等号，有加号的payload不能用。 web116和web117不会做….."},{"title":"BugKu刷题","date":"2023-01-28T02:30:19.000Z","url":"/2023/01/28/BugKu%E5%88%B7%E9%A2%98/","tags":[["刷题","/tags/%E5%88%B7%E9%A2%98/"],["BugKu","/tags/BugKu/"]],"categories":[["BugKu","/categories/BugKu/"],["刷题","/categories/BugKu/%E5%88%B7%E9%A2%98/"]],"content":"聪明的小羊题目描述：一只小羊翻过了2个栅栏 fa{fe13f590lg6d46d0d0}栅栏密码，分两栏时就是flag。 flag:flag&#123;6fde4163df05d900&#125; /.-题目描述： ..-./.-../.-/–./—-.–/-../…–/..-./-.-./-…/..-./.—-/–…/..-./—-./…–/—-./—-./…../—–/….-/—–.-很明显的摩斯密码，在线摩斯密码翻译，可以解出flag：FLAG%u7bD3FCBF17F9399504%u7d%u7b是{，%u7d是}，然后字母全部改为小写就是flag。flag:flag&#123;d3fcbf17f9399504&#125; ok题目是okk编码，用可以直接获得flag。flag：flag&#123;0a394df55312c51a&#125; linux下载文件解压，用记事本的形式打开文件，ctrl+搜索key就能找到flag。flag:key&#123;feb81d3834e2423c9903f4755464060b&#125; 闪的好快下载是一个gif图，用stegsolve打开，一帧一帧扫二维码，然后拼接起来就是flag。flag：SYC&#123;F1aSh_so_f4sT&#125; 隐写2图片的大小感觉和他本身有点不符，用binwalk一看，确实有隐藏的文件。分离之后是一个压缩包和一个提示，提示说明解压密码是三位数字。暴力破解一下，密码是871，解压之后又是一个图片，用记事本打开，末尾有f1@g&#123;eTB1IEFyZSBhIGhAY2tlciE=&#125;base64解码得到falg。flag：f1@g&#123;y0u Are a h@cker!&#125; 白哥的鸽子用stegsolve打开，fileformat最下面有类似于flag的文字。栅栏密码在线加密解密栅栏加密，当栅栏数为3时，就是flag。flag：flag&#123;w22_is_v3ry_cool&#125; 再也没有纯白的灵魂文件开头是~呜嗷开头的，查过之后才发现是兽音密文。由于不知道怎么加密的，就先将flag加密一下试试，然后一一对应，最坑人的是少了一个G，真的恶心人。。。。最后解出来就是flag。flag：flag&#123;ni-zhen-shi-shou-ren&#125;"},{"title":"ctfshow web入门69~74","date":"2023-01-25T07:23:05.000Z","url":"/2023/01/25/ctfshow-web%E5%85%A5%E9%97%A869~74/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["web","/tags/web/"]],"categories":[["web","/categories/web/"],["ctfshow","/categories/web/ctfshow/"],["刷题","/categories/web/ctfshow/%E5%88%B7%E9%A2%98/"]],"content":"web69和web68一样。payload: web70同上。 web71 payload: web72这道题过滤了数字和字母，不会一点不会。参考一下大佬的wp将 进行url编码。 看到了flag0.txt,但是直接include的话没有权限。要用什么uaf绕过payload: 得到flag web73glob遍历目录，涨知识了。 要进行url编码发现了flagc.txtpayload: web74还是同样的步骤，glob遍历目录flag在flagx.txt里payload： "},{"title":"NSSCTF MISC刷题","date":"2023-01-24T11:17:06.000Z","url":"/2023/01/24/NSSCTF-MISC%E5%88%B7%E9%A2%98/","tags":[["刷题","/tags/%E5%88%B7%E9%A2%98/"],["MISC","/tags/MISC/"],["NSSCTF","/tags/NSSCTF/"]],"categories":[["MISC","/categories/MISC/"],["NSSCTF","/categories/MISC/NSSCTF/"],["刷题","/categories/MISC/NSSCTF/%E5%88%B7%E9%A2%98/"]],"content":"[SWPUCTF 2021 新生赛]我的银行卡密码压缩包有密码，而且是6位数。用ARCHPR破解，密码是768521。 解压之后是一个md文件直接就懵了，看别人的wp后发现是用手机的九宫格解密的，还是写的少，涨知识了。解出来之后是YLOPJOGJVOCCYNMZYPGXGPOGJDVIGATBASH后面的ATBASH就是提示将YLOPJOGJVOCCYNMZYPGXGPOGJDVIG进行ATBASH解密，得到BOLKQLTQELXXBMNABKTCTKLTQWERT，后面的QWERT就是QWERT加密，也是个提示。将BOLKQLTQELXXBMNABKTCTKLT进行QWERT解密，得到XISRASEACSUUXZYKXREVERSE,后面的reverse还是个提示得到XKYZXUUSCAESARSIX,caesar six也是个提示凯撒密码6，得到RESTROOM，最后在RESERVE一下NSSCTF&#123;moortser&#125;就是flag。 [SWPU 2019]漂流记的马里奥点开exe文件出现一个1.txt提示是ntfs，可以用NtfsStreamsEditor2或者膜拜xenny大佬cmd转到文件地址，命令行notepad 1.txt:flag.txt最后的flag是NSSCTF&#123;ddg_is_cute&#125; [SWPUCTF 2021 新生赛]gif好像有点大下载文件后是个GIF图，用STEG SOLVE打开，在第562帧的时候有一个二维码，扫码就是flag NSSCTF&#123;The_G1F_ls_T00_b1g&#125; [HUBUCTF 2022 新生赛]最简单的misc用stegsolve打开，LSB隐写，得到一个二维码，然后扫码之后就是flag:NSSCTF&#123;aacc4238460996f0178c18d7637c9dd5&#125; 唉！misc题写的恶心，就是跟作者对脑电波嘛。"},{"title":"ctfshow web入门57~68","date":"2023-01-22T06:59:58.000Z","url":"/2023/01/22/ctfshow-web%E5%85%A5%E9%97%A857/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["web","/tags/web/"]],"categories":[["web","/categories/web/"],["ctfshow","/categories/web/ctfshow/"],["刷题","/categories/web/ctfshow/%E5%88%B7%E9%A2%98/"]],"content":"web57题目显示flag在36.php中，而且给出cat和php了，只要想办法构造出36就可以了。$(())是做运算，$(($&#123;_&#125;))=0,所以只要拼接除-36之后取反就行payload: web58题很短，但是我不会。。。参考文章payload太多了 web59和web58差不多。payload： web60和前两道题一样。payload: web 61~65这些题都一样。payload： web66这一道题show_source不能用了。而且flag还不在flag.php中。先用 查看目录结构，发现是flag.txtpayload: web67这一题和上一题一样。 web68这一道题我都懵了，怎么不给源码啊。看别人的wp说的换成文件包含就可以。。。。payload: "},{"title":"ctfshow web入门53~56","date":"2023-01-20T09:23:44.000Z","url":"/2023/01/20/ctfshow-web%E5%85%A5%E9%97%A852~56/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["web","/tags/web/"]],"categories":[["web","/categories/web/"],["ctfshow","/categories/web/ctfshow/"],["刷题","/categories/web/ctfshow/%E5%88%B7%E9%A2%98/"]],"content":"web53多过滤了一个wget，多添加了一个回显。payload: web54这道将使用&#39;&#39;的方式给剔除了。去网上找其他人的wp发现好几种方法。第一种：可以用mv。payload: 第二种： payload： 第三种：可以用rev逆序输出payload: 第四种：用paste直接查看payload: 第五种：可以理解为当前目录运行cat命令实际上运行的也是bin/cat。payload： web55题是真的恶心，脑子有点痒，感觉要长脑子了。。。。继无字母数字的命令执行(ctfshow web入门 55)新姿势payload: web56题是越来越难了。参考P神的文章上无字母数字webshell之提高篇首先构造一个POST上传文件的数据包 上传一个php文件 注：shell程序必须以”#!/bin/sh”开始，#! /bin/sh 是指此脚本使用/bin/sh来解释执行，#!是特殊的表示符，其后面跟的是解释此脚本的shell的路径用bp抓包抓包之后添加参数c如下，多发包几次（因为并不一定生成的临时文件的最后一个字母就是大写字母），可以看到执行了ls命令参数内容为什么是 .%20/???/????????[@-[] ,P神的文章已经写的很详细了。最后用cat看一下就可以了"},{"title":"ctfshow 刷题web45~52","date":"2023-01-17T08:34:13.000Z","url":"/2023/01/17/ctfshow-%E5%88%B7%E9%A2%98web45~52/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["web","/tags/web/"]],"categories":[["web","/categories/web/"],["ctfshow","/categories/web/ctfshow/"],["刷题","/categories/web/ctfshow/%E5%88%B7%E9%A2%98/"]],"content":"web45过滤了空格，用%09绕过，&amp;&amp;等于;，也可以用||和%0a。payload: web46多过滤了一些字符，但还是可以%09过滤空格，因为%09解码后就不是数字了，是一个水平制表符。*被过滤了，可以用?payload: web47无非就是sort无法用了，上一题的payload还可以用。 web48上一题的payload依然可以用。 web49依然可以用。 web50%09过滤了，&lt;&gt;和?一起使用时没有回显,所以这里的?可以用\\和&#39;&#39;进行代替,。paylaod: web51tac被过滤了，只能用nl。payload: web52&lt;&gt;也被过滤了，还可以用$IFSpayload: "},{"title":"ctfshow web入门41~44","date":"2023-01-14T08:14:20.000Z","url":"/2023/01/14/ctfshow41-44/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["web","/tags/web/"]],"categories":[["web","/categories/web/"],["ctfshow","/categories/web/ctfshow/"],["刷题","/categories/web/ctfshow/%E5%88%B7%E9%A2%98/"]],"content":"web41这个题过滤了$、+、-、^、~使得异或自增和取反构造字符都无法使用，同时过滤了字母和数字。但是特意留了个或运算符|。我们可以尝试从ascii为0-255的字符中，找到或运算能得到我们可用的字符的字符。 借用师傅们的脚本： 得到flag web42 参考：用双写绕过payload: web43将;过滤掉了，可以使用其他的命令分隔符；常见的命令分隔符： payload： web44flag也过滤了，就用通配符呗。payload: 常见的通配符有*、?。"},{"title":"chtshow web入门37~40","date":"2023-01-11T08:21:29.000Z","url":"/2023/01/11/chtshow37-40/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["web","/tags/web/"]],"categories":[["web","/categories/web/"],["ctfshow","/categories/web/ctfshow/"],["刷题","/categories/web/ctfshow/%E5%88%B7%E9%A2%98/"]],"content":"web 37考察data伪协议，data伪协议需满足allow_url_fopen，allow_url_include同时开启才能使用。payload： web38php被过滤了，可以用短标签绕过php。短标签：比更灵活调用的方法 paylaod： web39include中多了个.php，但是上一题的payload也管用，看别人的wp说是有?&gt;结尾进行闭合，所以没有影响。payload: web40这个过滤了不少东西，但是没有过滤英文字母、下划线和英文的括号。可以用提示的方法 也可以换其他方法首先 获得一下信息使用next获取这个数组的下一个位置的元素，也就是POST的元素. 然后把这个元素弹出，用array_pop 最后再用eval执行一下就可以了 POST数据 关于echo、print、print_r的区别可以参考： 常用的注释符 MySQL中可以代替空格的字符"},{"title":"ctfshow web入门29~36","date":"2023-01-09T07:00:00.000Z","url":"/2023/01/09/ctfshow29-36/","tags":[["ctfshow","/tags/ctfshow/"],["刷题","/tags/%E5%88%B7%E9%A2%98/"],["web","/tags/web/"]],"categories":[["web","/categories/web/"],["ctfshow","/categories/web/ctfshow/"],["刷题","/categories/web/ctfshow/%E5%88%B7%E9%A2%98/"]],"content":"web29过滤了flag，可以用system,echo等. web30多过滤了一个system，还可以用echo. web31cat和空格过滤了，可以用tac.空格可以用%09绕过. web32过滤的东西太多了左括号都给过滤了，使用命令逃逸+文件包含.空格可以用%09绕过， ；可以用?&gt;绕过,因为使用?&gt;，所以后面没办法直接拼接php语句，需要使用文件包含. 再将得到的进行base64解码得到flag web33和web32差不多，用同样的payload就行 web34依旧可以用同样的payload web35依旧可以用同样的payload 连续几道题都一样，写的真恶心. web36这道题把1换成其他的字符就行，其他步骤一样. require可以代替include，PHP常用的可以不加括号的函数echo、print、isset、unset、include、require."},{"title":"文章分类","date":"2023-01-01T07:04:00.000Z","url":"/categories/index.html","categories":[["undefined",""]]},{"title":"文章标签","date":"2023-01-01T07:07:09.000Z","url":"/tags/index.html","categories":[["undefined",""]]},{"title":"about","date":"2025-04-19T10:46:40.000Z","url":"/about/index.html","categories":[["undefined",""]],"content":"try my best to be better!!!"}]